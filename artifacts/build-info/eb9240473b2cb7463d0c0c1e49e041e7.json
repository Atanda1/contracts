{"id":"eb9240473b2cb7463d0c0c1e49e041e7","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable2Step.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./OwnableUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership} and {acceptOwnership}.\n *\n * This module is used through inheritance. It will make available all functions\n * from parent (Ownable).\n */\nabstract contract Ownable2StepUpgradeable is Initializable, OwnableUpgradeable {\n    address private _pendingOwner;\n\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\n\n    function __Ownable2Step_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable2Step_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Returns the address of the pending owner.\n     */\n    function pendingOwner() public view virtual returns (address) {\n        return _pendingOwner;\n    }\n\n    /**\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\n        _pendingOwner = newOwner;\n        emit OwnershipTransferStarted(owner(), newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual override {\n        delete _pendingOwner;\n        super._transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev The new owner accepts the ownership transfer.\n     */\n    function acceptOwnership() public virtual {\n        address sender = _msgSender();\n        require(pendingOwner() == sender, \"Ownable2Step: caller is not the new owner\");\n        _transferOwnership(sender);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"contracts/Gateway.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.18;\n\nimport '@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol';\n\nimport {GatewaySettingManager} from './GatewaySettingManager.sol';\nimport {IGateway, IERC20} from './interfaces/IGateway.sol';\nimport {SharedStructs} from './libraries/SharedStructs.sol';\n\n/**\n * @title Gateway\n * @notice This contract serves as a gateway for creating orders and managing settlements.\n */\ncontract Gateway is IGateway, GatewaySettingManager, PausableUpgradeable {\n\tstruct fee {\n\t\tuint256 protocolFee;\n\t\tuint256 liquidityProviderAmount;\n\t}\n\n\tmapping(bytes32 => Order) private order;\n\tmapping(address => uint256) private _nonce;\n\tuint256[50] private __gap;\n\n\t/// @custom:oz-upgrades-unsafe-allow constructor\n\tconstructor() {\n\t\t_disableInitializers();\n\t}\n\n\t/**\n\t * @dev Initialize function.\n\t */\n\tfunction initialize() external initializer {\n\t\tMAX_BPS = 100_000;\n\t\t__Ownable2Step_init();\n\t\t__Pausable_init();\n\t}\n\n\t/**\n\t * @dev Modifier that allows only the aggregator to call a function.\n\t */\n\tmodifier onlyAggregator() {\n\t\trequire(msg.sender == _aggregatorAddress, 'OnlyAggregator');\n\t\t_;\n\t}\n\n\t/* ##################################################################\n                                OWNER FUNCTIONS\n    ################################################################## */\n\t/**\n\t * @dev Pause the contract.\n\t */\n\tfunction pause() external onlyOwner {\n\t\t_pause();\n\t}\n\n\t/**\n\t * @dev Unpause the contract.\n\t */\n\tfunction unpause() external onlyOwner {\n\t\t_unpause();\n\t}\n\n\t/* ##################################################################\n                                USER CALLS\n    ################################################################## */\n\t/** @dev See {createOrder-IGateway}. */\n\tfunction createOrder(\n\t\taddress _token,\n\t\tuint256 _amount,\n\t\tbytes32 _institutionCode,\n\t\tuint96 _rate,\n\t\taddress _senderFeeRecipient,\n\t\tuint256 _senderFee,\n\t\taddress _refundAddress,\n\t\tstring calldata messageHash\n\t) external whenNotPaused returns (bytes32 orderId) {\n\t\t// checks that are required\n\t\t_handler(_token, _amount, _refundAddress, _senderFeeRecipient, _senderFee);\n\n\t\t// validate messageHash\n\t\trequire(bytes(messageHash).length != 0, 'InvalidMessageHash');\n\n\t\t// transfer token from msg.sender to contract\n\t\tIERC20(_token).transferFrom(msg.sender, address(this), _amount + _senderFee);\n\n\t\t// increase users nonce to avoid replay attacks\n\t\t_nonce[msg.sender]++;\n\n\t\t// generate transaction id for the transaction\n\t\torderId = keccak256(abi.encode(msg.sender, _nonce[msg.sender]));\n\n\t\t// update transaction\n\t\tuint256 _protocolFee = (_amount * protocolFeePercent) / MAX_BPS;\n\t\torder[orderId] = Order({\n\t\t\tsender: msg.sender,\n\t\t\ttoken: _token,\n\t\t\tsenderFeeRecipient: _senderFeeRecipient,\n\t\t\tsenderFee: _senderFee,\n\t\t\tprotocolFee: _protocolFee,\n\t\t\tisFulfilled: false,\n\t\t\tisRefunded: false,\n\t\t\trefundAddress: _refundAddress,\n\t\t\tcurrentBPS: uint64(MAX_BPS),\n\t\t\tamount: _amount - _protocolFee\n\t\t});\n\n\t\t// emit order created event\n\t\temit OrderCreated(\n\t\t\torder[orderId].sender,\n\t\t\t_token,\n\t\t\torder[orderId].amount,\n\t\t\t_protocolFee,\n\t\t\torderId,\n\t\t\t_rate,\n\t\t\t_institutionCode,\n\t\t\tmessageHash\n\t\t);\n\t}\n\n\t/**\n\t * @dev Internal function to handle order creation.\n\t * @param _token The address of the token being traded.\n\t * @param _amount The amount of tokens being traded.\n\t * @param _refundAddress The address to refund the tokens in case of cancellation.\n\t * @param _senderFeeRecipient The address of the recipient for the sender fee.\n\t * @param _senderFee The amount of the sender fee.\n\t */\n\tfunction _handler(\n\t\taddress _token,\n\t\tuint256 _amount,\n\t\taddress _refundAddress,\n\t\taddress _senderFeeRecipient,\n\t\tuint256 _senderFee\n\t) internal view {\n\t\trequire(_isTokenSupported[_token] == 1, 'TokenNotSupported');\n\t\trequire(_amount != 0, 'AmountIsZero');\n\t\trequire(_refundAddress != address(0), 'ThrowZeroAddress');\n\n\t\tif (_senderFee != 0) {\n\t\t\trequire(_senderFeeRecipient != address(0), 'InvalidSenderFeeRecipient');\n\t\t}\n\t}\n\n\t/* ##################################################################\n                                AGGREGATOR FUNCTIONS\n    ################################################################## */\n\t/** @dev See {settle-IGateway}. */\n\tfunction settle(\n\t\tbytes32 _splitOrderId,\n\t\tbytes32 _orderId,\n\t\taddress _liquidityProvider,\n\t\tuint64 _settlePercent\n\t) external onlyAggregator returns (bool) {\n\t\t// ensure the transaction has not been fulfilled\n\t\trequire(!order[_orderId].isFulfilled, 'OrderFulfilled');\n\t\trequire(!order[_orderId].isRefunded, 'OrderRefunded');\n\n\t\t// load the token into memory\n\t\taddress token = order[_orderId].token;\n\n\t\t// subtract sum of amount based on the input _settlePercent\n\t\torder[_orderId].currentBPS -= _settlePercent;\n\n\t\tif (order[_orderId].currentBPS == 0) {\n\t\t\t// update the transaction to be fulfilled\n\t\t\torder[_orderId].isFulfilled = true;\n\n\t\t\tif (order[_orderId].senderFee != 0) {\n\t\t\t\t// transfer sender fee\n\t\t\t\tIERC20(order[_orderId].token).transfer(\n\t\t\t\t\torder[_orderId].senderFeeRecipient,\n\t\t\t\t\torder[_orderId].senderFee\n\t\t\t\t);\n\n\t\t\t\t// emit event\n\t\t\t\temit SenderFeeTransferred(\n\t\t\t\t\torder[_orderId].senderFeeRecipient,\n\t\t\t\t\torder[_orderId].senderFee\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (order[_orderId].protocolFee != 0) {\n\t\t\t\t// transfer protocol fee\n\t\t\t\tIERC20(token).transfer(treasuryAddress, order[_orderId].protocolFee);\n\t\t\t}\n\t\t}\n\n\t\t// transfer to liquidity provider\n\t\tuint256 liquidityProviderAmount = (order[_orderId].amount * _settlePercent) / MAX_BPS;\n\t\torder[_orderId].amount -= liquidityProviderAmount;\n\t\tIERC20(token).transfer(_liquidityProvider, liquidityProviderAmount);\n\n\t\t// emit settled event\n\t\temit OrderSettled(_splitOrderId, _orderId, _liquidityProvider, _settlePercent);\n\n\t\treturn true;\n\t}\n\n\t/** @dev See {refund-IGateway}. */\n\tfunction refund(uint256 _fee, bytes32 _orderId) external onlyAggregator returns (bool) {\n\t\t// ensure the transaction has not been fulfilled\n\t\trequire(!order[_orderId].isFulfilled, 'OrderFulfilled');\n\t\trequire(!order[_orderId].isRefunded, 'OrderRefunded');\n\t\trequire(order[_orderId].protocolFee >= _fee, 'FeeExceedsProtocolFee');\n\n\t\t// transfer refund fee to the treasury\n\t\tIERC20(order[_orderId].token).transfer(treasuryAddress, _fee);\n\n\t\t// reset state values\n\t\torder[_orderId].isRefunded = true;\n\t\torder[_orderId].currentBPS = 0;\n\n\t\t// deduct fee from order amount\n\t\tuint256 refundAmount = order[_orderId].amount + order[_orderId].protocolFee - _fee;\n\n\t\t// transfer refund amount and sender fee to the refund address\n\t\tIERC20(order[_orderId].token).transfer(\n\t\t\torder[_orderId].refundAddress,\n\t\t\trefundAmount + order[_orderId].senderFee\n\t\t);\n\n\t\t// emit refunded event\n\t\temit OrderRefunded(_fee, _orderId);\n\n\t\treturn true;\n\t}\n\n\t/* ##################################################################\n                                VIEW CALLS\n    ################################################################## */\n\t/** @dev See {getOrderInfo-IGateway}. */\n\tfunction getOrderInfo(bytes32 _orderId) external view returns (Order memory) {\n\t\treturn order[_orderId];\n\t}\n\n\t/** @dev See {isTokenSupported-IGateway}. */\n\tfunction isTokenSupported(address _token) external view returns (bool) {\n\t\tif (_isTokenSupported[_token] == 1) return true;\n\t\treturn false;\n\t}\n\n\t/** @dev See {getSupportedInstitutionByCode-IGateway}. */\n\tfunction getSupportedInstitutionByCode(\n\t\tbytes32 _code\n\t) external view returns (SharedStructs.InstitutionByCode memory) {\n\t\treturn supportedInstitutionsByCode[_code];\n\t}\n\n\t/** @dev See {getSupportedInstitutions-IGateway}. */\n\tfunction getSupportedInstitutions(\n\t\tbytes32 _currency\n\t) external view returns (SharedStructs.Institution[] memory) {\n\t\treturn supportedInstitutions[_currency];\n\t}\n\n\t/** @dev See {getFeeDetails-IGateway}. */\n\tfunction getFeeDetails() external view returns (uint64, uint256) {\n\t\treturn (protocolFeePercent, MAX_BPS);\n\t}\n}\n"},"contracts/GatewaySettingManager.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\n\n/**\n * @title GatewaySettingManager\n * @dev This contract manages the settings and configurations for the Gateway protocol.\n */\npragma solidity ^0.8.18;\n\nimport '@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol';\n\nimport {SharedStructs} from './libraries/SharedStructs.sol';\n\ncontract GatewaySettingManager is Ownable2StepUpgradeable {\n\tuint256 internal MAX_BPS;\n\tuint64 internal protocolFeePercent;\n\taddress internal treasuryAddress;\n\taddress internal _aggregatorAddress;\n\n\t// this should decrease if more slots are needed on this contract to avoid collisions with base contract\n\tuint256[50] private __gap;\n\n\tmapping(address => uint256) internal _isTokenSupported;\n\n\tmapping(bytes32 => SharedStructs.Institution[]) internal supportedInstitutions;\n\tmapping(bytes32 => SharedStructs.InstitutionByCode) internal supportedInstitutionsByCode;\n\n\tevent SettingManagerBool(bytes32 indexed what, address indexed value, uint256 status);\n\tevent SupportedInstitutionsUpdated(\n\t\tbytes32 indexed currency,\n\t\tSharedStructs.Institution[] institutions\n\t);\n\tevent ProtocolFeeUpdated(uint64 protocolFee);\n\tevent ProtocolAddressUpdated(bytes32 indexed what, address indexed treasuryAddress);\n\tevent SetFeeRecipient(address indexed treasuryAddress);\n\n\t/* ##################################################################\n                                OWNER FUNCTIONS\n    ################################################################## */\n\n\t/**\n\t * @dev Sets the boolean value for a specific setting.\n\t * @param what The setting to be updated.\n\t * @param value The address or value associated with the setting.\n\t * @param status The boolean value to be set.\n\t * Requirements:\n\t * - The value must not be a zero address.\n\t */\n\tfunction settingManagerBool(bytes32 what, address value, uint256 status) external onlyOwner {\n\t\trequire(value != address(0), 'Gateway: zero address');\n\t\trequire(status == 1 || status == 2, 'Gateway: invalid status');\n\t\tif (what == 'token') {\n\t\t\t_isTokenSupported[value] = status;\n\t\t\temit SettingManagerBool(what, value, status);\n\t\t}\n\t}\n\n\t/**\n\t * @dev Sets the supported institutions for a specific currency.\n\t * @param currency The currency for which the institutions are being set.\n\t * @param institutions The array of institutions to be set.\n\t */\n\tfunction setSupportedInstitutions(\n\t\tbytes32 currency,\n\t\tSharedStructs.Institution[] memory institutions\n\t) external onlyOwner {\n\t\tdelete supportedInstitutions[currency];\n\t\tfor (uint i; i < institutions.length; ) {\n\t\t\tsupportedInstitutions[currency].push(institutions[i]);\n\t\t\tsupportedInstitutionsByCode[institutions[i].code] = SharedStructs.InstitutionByCode({\n\t\t\t\tname: institutions[i].name,\n\t\t\t\tcurrency: currency\n\t\t\t});\n\t\t\tunchecked {\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t\temit SupportedInstitutionsUpdated(currency, supportedInstitutions[currency]);\n\t}\n\n\t/**\n\t * @dev Updates the protocol fee percentage.\n\t * @param _protocolFeePercent The new protocol fee percentage to be set.\n\t */\n\tfunction updateProtocolFee(uint64 _protocolFeePercent) external onlyOwner {\n\t\tprotocolFeePercent = _protocolFeePercent;\n\t\temit ProtocolFeeUpdated(_protocolFeePercent);\n\t}\n\n\t/**\n\t * @dev Updates a protocol address.\n\t * @param what The address type to be updated (treasury or aggregator).\n\t * @param value The new address to be set.\n\t * Requirements:\n\t * - The value must not be a zero address.\n\t */\n\tfunction updateProtocolAddress(bytes32 what, address value) external onlyOwner {\n\t\trequire(value != address(0), 'Gateway: zero address');\n\t\tbool updated;\n\t\tif (what == 'treasury') {\n\t\t\trequire(treasuryAddress != value, 'Gateway: treasury address already set');\n\t\t\ttreasuryAddress = value;\n\t\t\tupdated = true;\n\t\t} else if (what == 'aggregator') {\n\t\t\trequire(_aggregatorAddress != value, 'Gateway: aggregator address already set');\n\t\t\t_aggregatorAddress = value;\n\t\t\tupdated = true;\n\t\t}\n\t\tif (updated) {\n\t\t\temit ProtocolAddressUpdated(what, value);\n\t\t}\n\t}\n}\n"},"contracts/interfaces/IGateway.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.18;\n\nimport {IERC20} from '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\nimport {SharedStructs} from '../libraries/SharedStructs.sol';\n\n/**\n * @title IGateway\n * @notice Interface for the Gateway contract.\n */\ninterface IGateway {\n\t/* ##################################################################\n                                EVENTS\n    ################################################################## */\n\t/**\n\t * @dev Emitted when a deposit is made.\n\t * @param sender The address of the sender.\n\t * @param token The address of the deposited token.\n\t * @param amount The amount of the deposit.\n\t * @param orderId The ID of the order.\n\t * @param rate The rate at which the deposit is made.\n\t * @param institutionCode The code of the institution.\n\t * @param messageHash The hash of the message.\n\t */\n\tevent OrderCreated(\n\t\taddress indexed sender,\n\t\taddress indexed token,\n\t\tuint256 indexed amount,\n\t\tuint256 protocolFee,\n\t\tbytes32 orderId,\n\t\tuint256 rate,\n\t\tbytes32 institutionCode,\n\t\tstring messageHash\n\t);\n\n\t/**\n\t * @dev Emitted when an aggregator settles a transaction.\n\t * @param splitOrderId The ID of the split order.\n\t * @param orderId The ID of the order.\n\t * @param liquidityProvider The address of the liquidity provider.\n\t * @param settlePercent The percentage at which the transaction is settled.\n\t */\n\tevent OrderSettled(\n\t\tbytes32 splitOrderId,\n\t\tbytes32 indexed orderId,\n\t\taddress indexed liquidityProvider,\n\t\tuint96 settlePercent\n\t);\n\n\t/**\n\t * @dev Emitted when an aggregator refunds a transaction.\n\t * @param fee The fee deducted from the refund amount.\n\t * @param orderId The ID of the order.\n\t */\n\tevent OrderRefunded(uint256 fee, bytes32 indexed orderId);\n\n\t/**\n\t * @dev Emitted when the sender's fee is transferred.\n\t * @param sender The address of the sender.\n\t * @param amount The amount of the fee transferred.\n\t */\n\tevent SenderFeeTransferred(address indexed sender, uint256 indexed amount);\n\n\t/* ##################################################################\n                                STRUCTS\n    ################################################################## */\n\t/**\n\t * @dev Struct representing transaction metadata.\n\t * @param identifier The identifier of the transaction.\n\t * @param institution The institution of the transaction.\n\t * @param name The name of the transaction.\n\t * @param currency The currency of the transaction.\n\t * @param liquidityProviderID The ID of the liquidity provider.\n\t */\n\tstruct TransactionMetadata {\n\t\tbytes8 identifier;\n\t\tbytes8 institution;\n\t\tbytes8 name;\n\t\tbytes8 currency;\n\t\tuint256 liquidityProviderID;\n\t}\n\n\t/**\n\t * @dev Struct representing an order.\n\t * @param sender The address of the sender.\n\t * @param token The address of the token.\n\t * @param senderFeeRecipient The address of the sender fee recipient.\n\t * @param senderFee The fee to be paid to the sender fee recipient.\n\t * @param protocolFee The protocol fee to be paid.\n\t * @param isFulfilled Whether the order is fulfilled.\n\t * @param isRefunded Whether the order is refunded.\n\t * @param refundAddress The address to which the refund is made.\n\t * @param currentBPS The current basis points.\n\t * @param amount The amount of the order.\n\t */\n\tstruct Order {\n\t\taddress sender;\n\t\taddress token;\n\t\taddress senderFeeRecipient;\n\t\tuint256 senderFee;\n\t\tuint256 protocolFee;\n\t\tbool isFulfilled;\n\t\tbool isRefunded;\n\t\taddress refundAddress;\n\t\tuint96 currentBPS;\n\t\tuint256 amount;\n\t}\n\n\t/* ##################################################################\n                                EXTERNAL CALLS\n    ################################################################## */\n\t/**\n\t * @notice Locks the sender's amount of token into Gateway.\n\t * @dev Requirements:\n\t * - `msg.sender` must approve Gateway contract on `_token` of at least `amount` before function call.\n\t * - `_token` must be an acceptable token. See {isTokenSupported}.\n\t * - `amount` must be greater than minimum.\n\t * - `_refundAddress` refund address must not be zero address.\n\t * @param _token The address of the token.\n\t * @param _amount The amount in the decimal of `_token` to be locked.\n\t * @param _institutionCode The institution code of the sender.\n\t * @param _rate The rate at which the sender intends to sell `_amount` of `_token`.\n\t * @param _senderFeeRecipient The address that will receive `_senderFee` in `_token`.\n\t * @param _senderFee The amount in the decimal of `_token` that will be paid to `_senderFeeRecipient`.\n\t * @param _refundAddress The address that will receive `_amount` in `_token` when there is a need to refund.\n\t * @param messageHash The hash of the message.\n\t * @return _orderId The ID of the order.\n\t */\n\tfunction createOrder(\n\t\taddress _token,\n\t\tuint256 _amount,\n\t\tbytes32 _institutionCode,\n\t\tuint96 _rate,\n\t\taddress _senderFeeRecipient,\n\t\tuint256 _senderFee,\n\t\taddress _refundAddress,\n\t\tstring calldata messageHash\n\t) external returns (bytes32 _orderId);\n\n\t/**\n\t * @notice Settles a transaction and distributes rewards accordingly.\n\t * @param _splitOrderId The ID of the split order.\n\t * @param _orderId The ID of the transaction.\n\t * @param _liquidityProvider The address of the liquidity provider.\n\t * @param _settlePercent The rate at which the transaction is settled.\n\t * @return bool the settlement is successful.\n\t */\n\tfunction settle(\n\t\tbytes32 _splitOrderId,\n\t\tbytes32 _orderId,\n\t\taddress _liquidityProvider,\n\t\tuint64 _settlePercent\n\t) external returns (bool);\n\n\t/**\n\t * @notice Refunds to the specified refundable address.\n\t * @dev Requirements:\n\t * - Only aggregators can call this function.\n\t * @param _fee The amount to be deducted from the amount to be refunded.\n\t * @param _orderId The ID of the transaction.\n\t * @return bool the refund is successful.\n\t */\n\tfunction refund(uint256 _fee, bytes32 _orderId) external returns (bool);\n\n\t/**\n\t * @notice Checks if a token is supported by Gateway.\n\t * @param _token The address of the token to check.\n\t * @return bool the token is supported.\n\t */\n\tfunction isTokenSupported(address _token) external view returns (bool);\n\n\t/**\n\t * @notice Gets the details of an order.\n\t * @param _orderId The ID of the order.\n\t * @return Order The order details.\n\t */\n\tfunction getOrderInfo(bytes32 _orderId) external view returns (Order memory);\n\n\t/**\n\t * @notice Gets the fee details of Gateway.\n\t * @return protocolReward The protocol reward amount.\n\t * @return max_bps The maximum basis points.\n\t */\n\tfunction getFeeDetails() external view returns (uint64 protocolReward, uint256 max_bps);\n\n\t/**\n\t * @notice Gets the details of a supported institution by code.\n\t * @param _code The institution code.\n\t * @return InstitutionByCode The institution details.\n\t */\n\tfunction getSupportedInstitutionByCode(\n\t\tbytes32 _code\n\t) external view returns (SharedStructs.InstitutionByCode memory);\n\n\t/**\n\t * @notice Gets the details of supported institutions by currency.\n\t * @param _currency The currency code.\n\t * @return Institutions An array of institutions.\n\t */\n\tfunction getSupportedInstitutions(\n\t\tbytes32 _currency\n\t) external view returns (SharedStructs.Institution[] memory);\n}\n"},"contracts/libraries/SharedStructs.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.18;\n\nlibrary SharedStructs {\n    /**\n     * @dev Struct representing an institution.\n     * @param code The code of the institution.\n     * @param name The name of the institution.\n     */\n    struct Institution {\n        bytes32 code;\n        bytes32 name;\n    }\n\n    /**\n     * @dev Struct representing an institution by code.\n     * @param name The name of the institution.\n     * @param currency The currency of the institution.\n     */\n    struct InstitutionByCode {\n        bytes32 name;\n        bytes32 currency;\n    }\n}"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[917],"Initializable":[408],"Ownable2StepUpgradeable":[106],"OwnableUpgradeable":[239]},"id":107,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"./OwnableUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":107,"sourceUnit":240,"src":"132:34:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":107,"sourceUnit":409,"src":"167:63:0","symbolAliases":[{"foreign":{"id":3,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"175:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":6,"name":"Initializable","nameLocations":["719:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":408,"src":"719:13:0"},"id":7,"nodeType":"InheritanceSpecifier","src":"719:13:0"},{"baseName":{"id":8,"name":"OwnableUpgradeable","nameLocations":["734:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":239,"src":"734:18:0"},"id":9,"nodeType":"InheritanceSpecifier","src":"734:18:0"}],"canonicalName":"Ownable2StepUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":5,"nodeType":"StructuredDocumentation","src":"232:441:0","text":" @dev Contract module which provides access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership} and {acceptOwnership}.\n This module is used through inheritance. It will make available all functions\n from parent (Ownable)."},"fullyImplemented":true,"id":106,"linearizedBaseContracts":[106,239,917,408],"name":"Ownable2StepUpgradeable","nameLocation":"692:23:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":11,"mutability":"mutable","name":"_pendingOwner","nameLocation":"775:13:0","nodeType":"VariableDeclaration","scope":106,"src":"759:29:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"759:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700","id":17,"name":"OwnershipTransferStarted","nameLocation":"801:24:0","nodeType":"EventDefinition","parameters":{"id":16,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"842:13:0","nodeType":"VariableDeclaration","scope":17,"src":"826:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"873:8:0","nodeType":"VariableDeclaration","scope":17,"src":"857:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14,"name":"address","nodeType":"ElementaryTypeName","src":"857:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"825:57:0"},"src":"795:88:0"},{"body":{"id":25,"nodeType":"Block","src":"946:43:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":22,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"956:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":23,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"956:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":24,"nodeType":"ExpressionStatement","src":"956:26:0"}]},"id":26,"implemented":true,"kind":"function","modifiers":[{"id":20,"kind":"modifierInvocation","modifierName":{"id":19,"name":"onlyInitializing","nameLocations":["929:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":353,"src":"929:16:0"},"nodeType":"ModifierInvocation","src":"929:16:0"}],"name":"__Ownable2Step_init","nameLocation":"898:19:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"917:2:0"},"returnParameters":{"id":21,"nodeType":"ParameterList","parameters":[],"src":"946:0:0"},"scope":106,"src":"889:100:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":31,"nodeType":"Block","src":"1062:7:0","statements":[]},"id":32,"implemented":true,"kind":"function","modifiers":[{"id":29,"kind":"modifierInvocation","modifierName":{"id":28,"name":"onlyInitializing","nameLocations":["1045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":353,"src":"1045:16:0"},"nodeType":"ModifierInvocation","src":"1045:16:0"}],"name":"__Ownable2Step_init_unchained","nameLocation":"1004:29:0","nodeType":"FunctionDefinition","parameters":{"id":27,"nodeType":"ParameterList","parameters":[],"src":"1033:2:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"1062:0:0"},"scope":106,"src":"995:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":40,"nodeType":"Block","src":"1206:37:0","statements":[{"expression":{"id":38,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"1223:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":37,"id":39,"nodeType":"Return","src":"1216:20:0"}]},"documentation":{"id":33,"nodeType":"StructuredDocumentation","src":"1074:65:0","text":" @dev Returns the address of the pending owner."},"functionSelector":"e30c3978","id":41,"implemented":true,"kind":"function","modifiers":[],"name":"pendingOwner","nameLocation":"1153:12:0","nodeType":"FunctionDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[],"src":"1165:2:0"},"returnParameters":{"id":37,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":41,"src":"1197:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35,"name":"address","nodeType":"ElementaryTypeName","src":"1197:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1196:9:0"},"scope":106,"src":"1144:99:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[213],"body":{"id":60,"nodeType":"Block","src":"1515:99:0","statements":[{"expression":{"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":50,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"1525:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":51,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1541:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1525:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":53,"nodeType":"ExpressionStatement","src":"1525:24:0"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":55,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"1589:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1589:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":57,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1598:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":54,"name":"OwnershipTransferStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"1564:24:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":59,"nodeType":"EmitStatement","src":"1559:48:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1249:182:0","text":" @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":61,"implemented":true,"kind":"function","modifiers":[{"id":48,"kind":"modifierInvocation","modifierName":{"id":47,"name":"onlyOwner","nameLocations":["1505:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"1505:9:0"},"nodeType":"ModifierInvocation","src":"1505:9:0"}],"name":"transferOwnership","nameLocation":"1445:17:0","nodeType":"FunctionDefinition","overrides":{"id":46,"nodeType":"OverrideSpecifier","overrides":[],"src":"1496:8:0"},"parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"newOwner","nameLocation":"1471:8:0","nodeType":"VariableDeclaration","scope":61,"src":"1463:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1463:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1462:18:0"},"returnParameters":{"id":49,"nodeType":"ParameterList","parameters":[],"src":"1515:0:0"},"scope":106,"src":"1436:178:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[233],"body":{"id":77,"nodeType":"Block","src":"1870:81:0","statements":[{"expression":{"id":69,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"1880:20:0","subExpression":{"id":68,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"1887:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":70,"nodeType":"ExpressionStatement","src":"1880:20:0"},{"expression":{"arguments":[{"id":74,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"1935:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":71,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1910:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Ownable2StepUpgradeable_$106_$","typeString":"type(contract super Ownable2StepUpgradeable)"}},"id":73,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1916:18:0","memberName":"_transferOwnership","nodeType":"MemberAccess","referencedDeclaration":233,"src":"1910:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1910:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":76,"nodeType":"ExpressionStatement","src":"1910:34:0"}]},"documentation":{"id":62,"nodeType":"StructuredDocumentation","src":"1620:173:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n Internal function without access restriction."},"id":78,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"1807:18:0","nodeType":"FunctionDefinition","overrides":{"id":66,"nodeType":"OverrideSpecifier","overrides":[],"src":"1861:8:0"},"parameters":{"id":65,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"newOwner","nameLocation":"1834:8:0","nodeType":"VariableDeclaration","scope":78,"src":"1826:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"1826:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1825:18:0"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[],"src":"1870:0:0"},"scope":106,"src":"1798:153:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":99,"nodeType":"Block","src":"2073:170:0","statements":[{"assignments":[83],"declarations":[{"constant":false,"id":83,"mutability":"mutable","name":"sender","nameLocation":"2091:6:0","nodeType":"VariableDeclaration","scope":99,"src":"2083:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":82,"name":"address","nodeType":"ElementaryTypeName","src":"2083:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":86,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"2100:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2100:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2083:29:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":88,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2130:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2130:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":90,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"2148:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2130:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206e6577206f776e6572","id":92,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2156:43:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc","typeString":"literal_string \"Ownable2Step: caller is not the new owner\""},"value":"Ownable2Step: caller is not the new owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc","typeString":"literal_string \"Ownable2Step: caller is not the new owner\""}],"id":87,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2122:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":93,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2122:78:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":94,"nodeType":"ExpressionStatement","src":"2122:78:0"},{"expression":{"arguments":[{"id":96,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"2229:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":95,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[78],"referencedDeclaration":78,"src":"2210:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":97,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2210:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":98,"nodeType":"ExpressionStatement","src":"2210:26:0"}]},"documentation":{"id":79,"nodeType":"StructuredDocumentation","src":"1957:69:0","text":" @dev The new owner accepts the ownership transfer."},"functionSelector":"79ba5097","id":100,"implemented":true,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"2040:15:0","nodeType":"FunctionDefinition","parameters":{"id":80,"nodeType":"ParameterList","parameters":[],"src":"2055:2:0"},"returnParameters":{"id":81,"nodeType":"ParameterList","parameters":[],"src":"2073:0:0"},"scope":106,"src":"2031:212:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"constant":false,"documentation":{"id":101,"nodeType":"StructuredDocumentation","src":"2249:254:0","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":105,"mutability":"mutable","name":"__gap","nameLocation":"2528:5:0","nodeType":"VariableDeclaration","scope":106,"src":"2508:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":102,"name":"uint256","nodeType":"ElementaryTypeName","src":"2508:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":104,"length":{"hexValue":"3439","id":103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2516:2:0","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"2508:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":107,"src":"674:1862:0","usedErrors":[]}],"src":"107:2430:0"},"id":0},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[917],"Initializable":[408],"OwnableUpgradeable":[239]},"id":240,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":108,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:1"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":109,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":240,"sourceUnit":918,"src":"127:41:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":111,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":240,"sourceUnit":409,"src":"169:63:1","symbolAliases":[{"foreign":{"id":110,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"177:13:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":113,"name":"Initializable","nameLocations":["769:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":408,"src":"769:13:1"},"id":114,"nodeType":"InheritanceSpecifier","src":"769:13:1"},{"baseName":{"id":115,"name":"ContextUpgradeable","nameLocations":["784:18:1"],"nodeType":"IdentifierPath","referencedDeclaration":917,"src":"784:18:1"},"id":116,"nodeType":"InheritanceSpecifier","src":"784:18:1"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":112,"nodeType":"StructuredDocumentation","src":"234:494:1","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":239,"linearizedBaseContracts":[239,917,408],"name":"OwnableUpgradeable","nameLocation":"747:18:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":118,"mutability":"mutable","name":"_owner","nameLocation":"825:6:1","nodeType":"VariableDeclaration","scope":239,"src":"809:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"809:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":124,"name":"OwnershipTransferred","nameLocation":"844:20:1","nodeType":"EventDefinition","parameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"881:13:1","nodeType":"VariableDeclaration","scope":124,"src":"865:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"865:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":122,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"912:8:1","nodeType":"VariableDeclaration","scope":124,"src":"896:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"896:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"864:57:1"},"src":"838:84:1"},{"body":{"id":133,"nodeType":"Block","src":"1076:43:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":130,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"1086:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1086:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":132,"nodeType":"ExpressionStatement","src":"1086:26:1"}]},"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"928:91:1","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":134,"implemented":true,"kind":"function","modifiers":[{"id":128,"kind":"modifierInvocation","modifierName":{"id":127,"name":"onlyInitializing","nameLocations":["1059:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":353,"src":"1059:16:1"},"nodeType":"ModifierInvocation","src":"1059:16:1"}],"name":"__Ownable_init","nameLocation":"1033:14:1","nodeType":"FunctionDefinition","parameters":{"id":126,"nodeType":"ParameterList","parameters":[],"src":"1047:2:1"},"returnParameters":{"id":129,"nodeType":"ParameterList","parameters":[],"src":"1076:0:1"},"scope":239,"src":"1024:95:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":144,"nodeType":"Block","src":"1187:49:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":140,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"1216:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1216:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":139,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"1197:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1197:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":143,"nodeType":"ExpressionStatement","src":"1197:32:1"}]},"id":145,"implemented":true,"kind":"function","modifiers":[{"id":137,"kind":"modifierInvocation","modifierName":{"id":136,"name":"onlyInitializing","nameLocations":["1170:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":353,"src":"1170:16:1"},"nodeType":"ModifierInvocation","src":"1170:16:1"}],"name":"__Ownable_init_unchained","nameLocation":"1134:24:1","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[],"src":"1158:2:1"},"returnParameters":{"id":138,"nodeType":"ParameterList","parameters":[],"src":"1187:0:1"},"scope":239,"src":"1125:111:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":152,"nodeType":"Block","src":"1345:41:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":148,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1355:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1355:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":150,"nodeType":"ExpressionStatement","src":"1355:13:1"},{"id":151,"nodeType":"PlaceholderStatement","src":"1378:1:1"}]},"documentation":{"id":146,"nodeType":"StructuredDocumentation","src":"1242:77:1","text":" @dev Throws if called by any account other than the owner."},"id":153,"name":"onlyOwner","nameLocation":"1333:9:1","nodeType":"ModifierDefinition","parameters":{"id":147,"nodeType":"ParameterList","parameters":[],"src":"1342:2:1"},"src":"1324:62:1","virtual":false,"visibility":"internal"},{"body":{"id":161,"nodeType":"Block","src":"1517:30:1","statements":[{"expression":{"id":159,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"1534:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":158,"id":160,"nodeType":"Return","src":"1527:13:1"}]},"documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"1392:65:1","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":162,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1471:5:1","nodeType":"FunctionDefinition","parameters":{"id":155,"nodeType":"ParameterList","parameters":[],"src":"1476:2:1"},"returnParameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":162,"src":"1508:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":156,"name":"address","nodeType":"ElementaryTypeName","src":"1508:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1507:9:1"},"scope":239,"src":"1462:85:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":175,"nodeType":"Block","src":"1665:85:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":167,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"1683:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1683:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":169,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"1694:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1694:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1683:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1708:34:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":166,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1675:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1675:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":174,"nodeType":"ExpressionStatement","src":"1675:68:1"}]},"documentation":{"id":163,"nodeType":"StructuredDocumentation","src":"1553:62:1","text":" @dev Throws if the sender is not the owner."},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1629:11:1","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[],"src":"1640:2:1"},"returnParameters":{"id":165,"nodeType":"ParameterList","parameters":[],"src":"1665:0:1"},"scope":239,"src":"1620:130:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":189,"nodeType":"Block","src":"2139:47:1","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2176:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2168:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":183,"name":"address","nodeType":"ElementaryTypeName","src":"2168:7:1","typeDescriptions":{}}},"id":186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2168:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":182,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"2149:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2149:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":188,"nodeType":"ExpressionStatement","src":"2149:30:1"}]},"documentation":{"id":177,"nodeType":"StructuredDocumentation","src":"1756:324:1","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":190,"implemented":true,"kind":"function","modifiers":[{"id":180,"kind":"modifierInvocation","modifierName":{"id":179,"name":"onlyOwner","nameLocations":["2129:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"2129:9:1"},"nodeType":"ModifierInvocation","src":"2129:9:1"}],"name":"renounceOwnership","nameLocation":"2094:17:1","nodeType":"FunctionDefinition","parameters":{"id":178,"nodeType":"ParameterList","parameters":[],"src":"2111:2:1"},"returnParameters":{"id":181,"nodeType":"ParameterList","parameters":[],"src":"2139:0:1"},"scope":239,"src":"2085:101:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":212,"nodeType":"Block","src":"2405:128:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":199,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2423:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2443:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2435:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":200,"name":"address","nodeType":"ElementaryTypeName","src":"2435:7:1","typeDescriptions":{}}},"id":203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2435:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2423:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2447:40:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":198,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2415:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2415:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"2415:73:1"},{"expression":{"arguments":[{"id":209,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2517:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":208,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"2498:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2498:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":211,"nodeType":"ExpressionStatement","src":"2498:28:1"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2192:138:1","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":213,"implemented":true,"kind":"function","modifiers":[{"id":196,"kind":"modifierInvocation","modifierName":{"id":195,"name":"onlyOwner","nameLocations":["2395:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"2395:9:1"},"nodeType":"ModifierInvocation","src":"2395:9:1"}],"name":"transferOwnership","nameLocation":"2344:17:1","nodeType":"FunctionDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"newOwner","nameLocation":"2370:8:1","nodeType":"VariableDeclaration","scope":213,"src":"2362:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2362:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2361:18:1"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[],"src":"2405:0:1"},"scope":239,"src":"2335:198:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":232,"nodeType":"Block","src":"2750:124:1","statements":[{"assignments":[220],"declarations":[{"constant":false,"id":220,"mutability":"mutable","name":"oldOwner","nameLocation":"2768:8:1","nodeType":"VariableDeclaration","scope":232,"src":"2760:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":219,"name":"address","nodeType":"ElementaryTypeName","src":"2760:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":222,"initialValue":{"id":221,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"2779:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2760:25:1"},{"expression":{"id":225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":223,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"2795:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":224,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"2804:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2795:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":226,"nodeType":"ExpressionStatement","src":"2795:17:1"},{"eventCall":{"arguments":[{"id":228,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"2848:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":229,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"2858:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"2827:20:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2827:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":231,"nodeType":"EmitStatement","src":"2822:45:1"}]},"documentation":{"id":214,"nodeType":"StructuredDocumentation","src":"2539:143:1","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":233,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2696:18:1","nodeType":"FunctionDefinition","parameters":{"id":217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":216,"mutability":"mutable","name":"newOwner","nameLocation":"2723:8:1","nodeType":"VariableDeclaration","scope":233,"src":"2715:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":215,"name":"address","nodeType":"ElementaryTypeName","src":"2715:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2714:18:1"},"returnParameters":{"id":218,"nodeType":"ParameterList","parameters":[],"src":"2750:0:1"},"scope":239,"src":"2687:187:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":234,"nodeType":"StructuredDocumentation","src":"2880:254:1","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":238,"mutability":"mutable","name":"__gap","nameLocation":"3159:5:1","nodeType":"VariableDeclaration","scope":239,"src":"3139:25:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":235,"name":"uint256","nodeType":"ElementaryTypeName","src":"3139:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":237,"length":{"hexValue":"3439","id":236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:2:1","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3139:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":240,"src":"729:2438:1","usedErrors":[]}],"src":"102:3066:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[866],"Initializable":[408]},"id":409,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":241,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:2"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":242,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":409,"sourceUnit":867,"src":"138:44:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"184:2209:2","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":408,"linearizedBaseContracts":[408],"name":"Initializable","nameLocation":"2412:13:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":244,"nodeType":"StructuredDocumentation","src":"2432:109:2","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":246,"mutability":"mutable","name":"_initialized","nameLocation":"2560:12:2","nodeType":"VariableDeclaration","scope":408,"src":"2546:26:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":245,"name":"uint8","nodeType":"ElementaryTypeName","src":"2546:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"2579:91:2","text":" @dev Indicates that the contract is in the process of being initialized."},"id":249,"mutability":"mutable","name":"_initializing","nameLocation":"2688:13:2","nodeType":"VariableDeclaration","scope":408,"src":"2675:26:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":248,"name":"bool","nodeType":"ElementaryTypeName","src":"2675:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"2708:90:2","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":254,"name":"Initialized","nameLocation":"2809:11:2","nodeType":"EventDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2827:7:2","nodeType":"VariableDeclaration","scope":254,"src":"2821:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":251,"name":"uint8","nodeType":"ElementaryTypeName","src":"2821:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2820:15:2"},"src":"2803:33:2"},{"body":{"id":309,"nodeType":"Block","src":"3269:483:2","statements":[{"assignments":[258],"declarations":[{"constant":false,"id":258,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3284:14:2","nodeType":"VariableDeclaration","scope":309,"src":"3279:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":257,"name":"bool","nodeType":"ElementaryTypeName","src":"3279:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3301:14:2","subExpression":{"id":259,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"3302:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3279:36:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"3347:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":264,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"3365:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3380:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3365:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3347:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":268,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3346:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3387:45:2","subExpression":{"arguments":[{"arguments":[{"id":273,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3426:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$408","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$408","typeString":"contract Initializable"}],"id":272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3418:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"3418:7:2","typeDescriptions":{}}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3418:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":269,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"3388:18:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$866_$","typeString":"type(library AddressUpgradeable)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3407:10:2","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":554,"src":"3388:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3388:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":277,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"3436:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3452:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3436:17:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3387:66:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":281,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3386:68:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3346:108:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3468:48:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":262,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3325:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:201:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"ExpressionStatement","src":"3325:201:2"},{"expression":{"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":286,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"3536:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3551:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3536:16:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":289,"nodeType":"ExpressionStatement","src":"3536:16:2"},{"condition":{"id":290,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"3566:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":296,"nodeType":"IfStatement","src":"3562:65:2","trueBody":{"id":295,"nodeType":"Block","src":"3582:45:2","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":291,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"3596:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3612:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3596:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"3596:20:2"}]}},{"id":297,"nodeType":"PlaceholderStatement","src":"3636:1:2"},{"condition":{"id":298,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"3651:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":308,"nodeType":"IfStatement","src":"3647:99:2","trueBody":{"id":307,"nodeType":"Block","src":"3667:79:2","statements":[{"expression":{"id":301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":299,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"3681:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3697:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3681:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":302,"nodeType":"ExpressionStatement","src":"3681:21:2"},{"eventCall":{"arguments":[{"hexValue":"31","id":304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3733:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":303,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"3721:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3721:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":306,"nodeType":"EmitStatement","src":"3716:19:2"}]}}]},"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"2842:399:2","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":310,"name":"initializer","nameLocation":"3255:11:2","nodeType":"ModifierDefinition","parameters":{"id":256,"nodeType":"ParameterList","parameters":[],"src":"3266:2:2"},"src":"3246:506:2","virtual":false,"visibility":"internal"},{"body":{"id":342,"nodeType":"Block","src":"4863:255:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4881:14:2","subExpression":{"id":316,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"4882:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":318,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"4899:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":319,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"4914:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4899:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4881:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4923:48:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":315,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4873:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:99:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":324,"nodeType":"ExpressionStatement","src":"4873:99:2"},{"expression":{"id":327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":325,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"4982:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":326,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"4997:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4982:22:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":328,"nodeType":"ExpressionStatement","src":"4982:22:2"},{"expression":{"id":331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":329,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"5014:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5030:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5014:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":332,"nodeType":"ExpressionStatement","src":"5014:20:2"},{"id":333,"nodeType":"PlaceholderStatement","src":"5044:1:2"},{"expression":{"id":336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":334,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"5055:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5071:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5055:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":337,"nodeType":"ExpressionStatement","src":"5055:21:2"},{"eventCall":{"arguments":[{"id":339,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"5103:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":338,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"5091:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":341,"nodeType":"EmitStatement","src":"5086:25:2"}]},"documentation":{"id":311,"nodeType":"StructuredDocumentation","src":"3758:1062:2","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":343,"name":"reinitializer","nameLocation":"4834:13:2","nodeType":"ModifierDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":313,"mutability":"mutable","name":"version","nameLocation":"4854:7:2","nodeType":"VariableDeclaration","scope":343,"src":"4848:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":312,"name":"uint8","nodeType":"ElementaryTypeName","src":"4848:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4847:15:2"},"src":"4825:293:2","virtual":false,"visibility":"internal"},{"body":{"id":352,"nodeType":"Block","src":"5356:97:2","statements":[{"expression":{"arguments":[{"id":347,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"5374:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5389:45:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":346,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5366:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5366:69:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":350,"nodeType":"ExpressionStatement","src":"5366:69:2"},{"id":351,"nodeType":"PlaceholderStatement","src":"5445:1:2"}]},"documentation":{"id":344,"nodeType":"StructuredDocumentation","src":"5124:199:2","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":353,"name":"onlyInitializing","nameLocation":"5337:16:2","nodeType":"ModifierDefinition","parameters":{"id":345,"nodeType":"ParameterList","parameters":[],"src":"5353:2:2"},"src":"5328:125:2","virtual":false,"visibility":"internal"},{"body":{"id":388,"nodeType":"Block","src":"5988:231:2","statements":[{"expression":{"arguments":[{"id":359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6006:14:2","subExpression":{"id":358,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"6007:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6022:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":357,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5998:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5998:66:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":362,"nodeType":"ExpressionStatement","src":"5998:66:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":363,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"6078:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6099:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":365,"name":"uint8","nodeType":"ElementaryTypeName","src":"6099:5:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":364,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6094:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6094:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6106:3:2","memberName":"max","nodeType":"MemberAccess","src":"6094:15:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6078:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":387,"nodeType":"IfStatement","src":"6074:139:2","trueBody":{"id":386,"nodeType":"Block","src":"6111:102:2","statements":[{"expression":{"id":376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":370,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"6125:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6145:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":372,"name":"uint8","nodeType":"ElementaryTypeName","src":"6145:5:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":371,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6140:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6152:3:2","memberName":"max","nodeType":"MemberAccess","src":"6140:15:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6125:30:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":377,"nodeType":"ExpressionStatement","src":"6125:30:2"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6191:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":380,"name":"uint8","nodeType":"ElementaryTypeName","src":"6191:5:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":379,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6186:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6198:3:2","memberName":"max","nodeType":"MemberAccess","src":"6186:15:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":378,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"6174:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":385,"nodeType":"EmitStatement","src":"6169:33:2"}]}}]},"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"5459:475:2","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":389,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5948:20:2","nodeType":"FunctionDefinition","parameters":{"id":355,"nodeType":"ParameterList","parameters":[],"src":"5968:2:2"},"returnParameters":{"id":356,"nodeType":"ParameterList","parameters":[],"src":"5988:0:2"},"scope":408,"src":"5939:280:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":397,"nodeType":"Block","src":"6393:36:2","statements":[{"expression":{"id":395,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"6410:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":394,"id":396,"nodeType":"Return","src":"6403:19:2"}]},"documentation":{"id":390,"nodeType":"StructuredDocumentation","src":"6225:99:2","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":398,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6338:22:2","nodeType":"FunctionDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[],"src":"6360:2:2"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":398,"src":"6386:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":392,"name":"uint8","nodeType":"ElementaryTypeName","src":"6386:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6385:7:2"},"scope":408,"src":"6329:100:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":406,"nodeType":"Block","src":"6601:37:2","statements":[{"expression":{"id":404,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"6618:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":403,"id":405,"nodeType":"Return","src":"6611:20:2"}]},"documentation":{"id":399,"nodeType":"StructuredDocumentation","src":"6435:105:2","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":407,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6554:15:2","nodeType":"FunctionDefinition","parameters":{"id":400,"nodeType":"ParameterList","parameters":[],"src":"6569:2:2"},"returnParameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":407,"src":"6595:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":401,"name":"bool","nodeType":"ElementaryTypeName","src":"6595:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6594:6:2"},"scope":408,"src":"6545:93:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":409,"src":"2394:4246:2","usedErrors":[]}],"src":"113:6528:2"},"id":2},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[917],"Initializable":[408],"PausableUpgradeable":[536]},"id":537,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":410,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":411,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":537,"sourceUnit":918,"src":"130:41:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":413,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":537,"sourceUnit":409,"src":"172:63:3","symbolAliases":[{"foreign":{"id":412,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"180:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":415,"name":"Initializable","nameLocations":["718:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":408,"src":"718:13:3"},"id":416,"nodeType":"InheritanceSpecifier","src":"718:13:3"},{"baseName":{"id":417,"name":"ContextUpgradeable","nameLocations":["733:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":917,"src":"733:18:3"},"id":418,"nodeType":"InheritanceSpecifier","src":"733:18:3"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"237:439:3","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":536,"linearizedBaseContracts":[536,917,408],"name":"PausableUpgradeable","nameLocation":"695:19:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":419,"nodeType":"StructuredDocumentation","src":"758:73:3","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":423,"name":"Paused","nameLocation":"842:6:3","nodeType":"EventDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":421,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"857:7:3","nodeType":"VariableDeclaration","scope":423,"src":"849:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"849:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"848:17:3"},"src":"836:30:3"},{"anonymous":false,"documentation":{"id":424,"nodeType":"StructuredDocumentation","src":"872:70:3","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":428,"name":"Unpaused","nameLocation":"953:8:3","nodeType":"EventDefinition","parameters":{"id":427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":426,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"970:7:3","nodeType":"VariableDeclaration","scope":428,"src":"962:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":425,"name":"address","nodeType":"ElementaryTypeName","src":"962:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"961:17:3"},"src":"947:32:3"},{"constant":false,"id":430,"mutability":"mutable","name":"_paused","nameLocation":"998:7:3","nodeType":"VariableDeclaration","scope":536,"src":"985:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":429,"name":"bool","nodeType":"ElementaryTypeName","src":"985:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":439,"nodeType":"Block","src":"1137:44:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":436,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"1147:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1147:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":438,"nodeType":"ExpressionStatement","src":"1147:27:3"}]},"documentation":{"id":431,"nodeType":"StructuredDocumentation","src":"1012:67:3","text":" @dev Initializes the contract in unpaused state."},"id":440,"implemented":true,"kind":"function","modifiers":[{"id":434,"kind":"modifierInvocation","modifierName":{"id":433,"name":"onlyInitializing","nameLocations":["1120:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":353,"src":"1120:16:3"},"nodeType":"ModifierInvocation","src":"1120:16:3"}],"name":"__Pausable_init","nameLocation":"1093:15:3","nodeType":"FunctionDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[],"src":"1108:2:3"},"returnParameters":{"id":435,"nodeType":"ParameterList","parameters":[],"src":"1137:0:3"},"scope":536,"src":"1084:97:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":449,"nodeType":"Block","src":"1250:32:3","statements":[{"expression":{"id":447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":445,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"1260:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1270:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1260:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":448,"nodeType":"ExpressionStatement","src":"1260:15:3"}]},"id":450,"implemented":true,"kind":"function","modifiers":[{"id":443,"kind":"modifierInvocation","modifierName":{"id":442,"name":"onlyInitializing","nameLocations":["1233:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":353,"src":"1233:16:3"},"nodeType":"ModifierInvocation","src":"1233:16:3"}],"name":"__Pausable_init_unchained","nameLocation":"1196:25:3","nodeType":"FunctionDefinition","parameters":{"id":441,"nodeType":"ParameterList","parameters":[],"src":"1221:2:3"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[],"src":"1250:0:3"},"scope":536,"src":"1187:95:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":457,"nodeType":"Block","src":"1493:47:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":453,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"1503:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1503:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"ExpressionStatement","src":"1503:19:3"},{"id":456,"nodeType":"PlaceholderStatement","src":"1532:1:3"}]},"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"1288:175:3","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":458,"name":"whenNotPaused","nameLocation":"1477:13:3","nodeType":"ModifierDefinition","parameters":{"id":452,"nodeType":"ParameterList","parameters":[],"src":"1490:2:3"},"src":"1468:72:3","virtual":false,"visibility":"internal"},{"body":{"id":465,"nodeType":"Block","src":"1740:44:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":461,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"1750:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":463,"nodeType":"ExpressionStatement","src":"1750:16:3"},{"id":464,"nodeType":"PlaceholderStatement","src":"1776:1:3"}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"1546:167:3","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":466,"name":"whenPaused","nameLocation":"1727:10:3","nodeType":"ModifierDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[],"src":"1737:2:3"},"src":"1718:66:3","virtual":false,"visibility":"internal"},{"body":{"id":474,"nodeType":"Block","src":"1932:31:3","statements":[{"expression":{"id":472,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"1949:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":471,"id":473,"nodeType":"Return","src":"1942:14:3"}]},"documentation":{"id":467,"nodeType":"StructuredDocumentation","src":"1790:84:3","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":475,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1888:6:3","nodeType":"FunctionDefinition","parameters":{"id":468,"nodeType":"ParameterList","parameters":[],"src":"1894:2:3"},"returnParameters":{"id":471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":475,"src":"1926:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":469,"name":"bool","nodeType":"ElementaryTypeName","src":"1926:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1925:6:3"},"scope":536,"src":"1879:84:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":486,"nodeType":"Block","src":"2082:55:3","statements":[{"expression":{"arguments":[{"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2100:9:3","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":480,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"2101:6:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2101:8:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2111:18:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":479,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2092:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"2092:38:3"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"1969:57:3","text":" @dev Throws if the contract is paused."},"id":487,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2040:17:3","nodeType":"FunctionDefinition","parameters":{"id":477,"nodeType":"ParameterList","parameters":[],"src":"2057:2:3"},"returnParameters":{"id":478,"nodeType":"ParameterList","parameters":[],"src":"2082:0:3"},"scope":536,"src":"2031:106:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":497,"nodeType":"Block","src":"2257:58:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":492,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"2275:6:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2275:8:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2285:22:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":491,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2267:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2267:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":496,"nodeType":"ExpressionStatement","src":"2267:41:3"}]},"documentation":{"id":488,"nodeType":"StructuredDocumentation","src":"2143:61:3","text":" @dev Throws if the contract is not paused."},"id":498,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2218:14:3","nodeType":"FunctionDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[],"src":"2232:2:3"},"returnParameters":{"id":490,"nodeType":"ParameterList","parameters":[],"src":"2257:0:3"},"scope":536,"src":"2209:106:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":513,"nodeType":"Block","src":"2499:66:3","statements":[{"expression":{"id":506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":504,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"2509:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2519:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2509:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":507,"nodeType":"ExpressionStatement","src":"2509:14:3"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":509,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"2545:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2545:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":508,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"2538:6:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2538:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":512,"nodeType":"EmitStatement","src":"2533:25:3"}]},"documentation":{"id":499,"nodeType":"StructuredDocumentation","src":"2321:124:3","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":514,"implemented":true,"kind":"function","modifiers":[{"id":502,"kind":"modifierInvocation","modifierName":{"id":501,"name":"whenNotPaused","nameLocations":["2485:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":458,"src":"2485:13:3"},"nodeType":"ModifierInvocation","src":"2485:13:3"}],"name":"_pause","nameLocation":"2459:6:3","nodeType":"FunctionDefinition","parameters":{"id":500,"nodeType":"ParameterList","parameters":[],"src":"2465:2:3"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"2499:0:3"},"scope":536,"src":"2450:115:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":529,"nodeType":"Block","src":"2745:69:3","statements":[{"expression":{"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":520,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"2755:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2765:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2755:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":523,"nodeType":"ExpressionStatement","src":"2755:15:3"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":525,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"2794:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2794:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":524,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"2785:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2785:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":528,"nodeType":"EmitStatement","src":"2780:27:3"}]},"documentation":{"id":515,"nodeType":"StructuredDocumentation","src":"2571:121:3","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":530,"implemented":true,"kind":"function","modifiers":[{"id":518,"kind":"modifierInvocation","modifierName":{"id":517,"name":"whenPaused","nameLocations":["2734:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":466,"src":"2734:10:3"},"nodeType":"ModifierInvocation","src":"2734:10:3"}],"name":"_unpause","nameLocation":"2706:8:3","nodeType":"FunctionDefinition","parameters":{"id":516,"nodeType":"ParameterList","parameters":[],"src":"2714:2:3"},"returnParameters":{"id":519,"nodeType":"ParameterList","parameters":[],"src":"2745:0:3"},"scope":536,"src":"2697:117:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":531,"nodeType":"StructuredDocumentation","src":"2820:254:3","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":535,"mutability":"mutable","name":"__gap","nameLocation":"3099:5:3","nodeType":"VariableDeclaration","scope":536,"src":"3079:25:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":532,"name":"uint256","nodeType":"ElementaryTypeName","src":"3079:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":534,"length":{"hexValue":"3439","id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3087:2:3","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3079:11:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":537,"src":"677:2430:3","usedErrors":[]}],"src":"105:3003:3"},"id":3},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[866]},"id":867,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":538,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"126:67:4","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":866,"linearizedBaseContracts":[866],"name":"AddressUpgradeable","nameLocation":"202:18:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":553,"nodeType":"Block","src":"1489:254:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":547,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"1713:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:4:4","memberName":"code","nodeType":"MemberAccess","src":"1713:12:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:4","memberName":"length","nodeType":"MemberAccess","src":"1713:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1713:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":546,"id":552,"nodeType":"Return","src":"1706:30:4"}]},"documentation":{"id":540,"nodeType":"StructuredDocumentation","src":"227:1191:4","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":554,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1432:10:4","nodeType":"FunctionDefinition","parameters":{"id":543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":542,"mutability":"mutable","name":"account","nameLocation":"1451:7:4","nodeType":"VariableDeclaration","scope":554,"src":"1443:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":541,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1442:17:4"},"returnParameters":{"id":546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":554,"src":"1483:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":544,"name":"bool","nodeType":"ElementaryTypeName","src":"1483:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1482:6:4"},"scope":866,"src":"1423:320:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":587,"nodeType":"Block","src":"2729:241:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":565,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2755:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$866","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$866","typeString":"library AddressUpgradeable"}],"id":564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2747:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":563,"name":"address","nodeType":"ElementaryTypeName","src":"2747:7:4","typeDescriptions":{}}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2747:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:7:4","memberName":"balance","nodeType":"MemberAccess","src":"2747:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":568,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"2772:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2747:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2780:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":562,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2739:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":572,"nodeType":"ExpressionStatement","src":"2739:73:4"},{"assignments":[574,null],"declarations":[{"constant":false,"id":574,"mutability":"mutable","name":"success","nameLocation":"2829:7:4","nodeType":"VariableDeclaration","scope":587,"src":"2824:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":573,"name":"bool","nodeType":"ElementaryTypeName","src":"2824:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":581,"initialValue":{"arguments":[{"hexValue":"","id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2872:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":575,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"2842:9:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:4:4","memberName":"call","nodeType":"MemberAccess","src":"2842:14:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":577,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"2864:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2842:29:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2823:52:4"},{"expression":{"arguments":[{"id":583,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"2893:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2902:60:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":582,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2885:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2885:78:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":586,"nodeType":"ExpressionStatement","src":"2885:78:4"}]},"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"1749:904:4","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":588,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2667:9:4","nodeType":"FunctionDefinition","parameters":{"id":560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"recipient","nameLocation":"2693:9:4","nodeType":"VariableDeclaration","scope":588,"src":"2677:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"2677:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"amount","nameLocation":"2712:6:4","nodeType":"VariableDeclaration","scope":588,"src":"2704:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":558,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:4"},"returnParameters":{"id":561,"nodeType":"ParameterList","parameters":[],"src":"2729:0:4"},"scope":866,"src":"2658:312:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":605,"nodeType":"Block","src":"3801:96:4","statements":[{"expression":{"arguments":[{"id":599,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"3840:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":600,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"3848:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3854:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3857:32:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":598,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[646,690],"referencedDeclaration":690,"src":"3818:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:72:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":597,"id":604,"nodeType":"Return","src":"3811:79:4"}]},"documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"2976:731:4","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":606,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3721:12:4","nodeType":"FunctionDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"target","nameLocation":"3742:6:4","nodeType":"VariableDeclaration","scope":606,"src":"3734:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"3734:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":593,"mutability":"mutable","name":"data","nameLocation":"3763:4:4","nodeType":"VariableDeclaration","scope":606,"src":"3750:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":592,"name":"bytes","nodeType":"ElementaryTypeName","src":"3750:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3733:35:4"},"returnParameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":606,"src":"3787:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":595,"name":"bytes","nodeType":"ElementaryTypeName","src":"3787:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3786:14:4"},"scope":866,"src":"3712:185:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":625,"nodeType":"Block","src":"4266:76:4","statements":[{"expression":{"arguments":[{"id":619,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"4305:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":620,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"4313:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4319:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":622,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"4322:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":618,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[646,690],"referencedDeclaration":690,"src":"4283:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":617,"id":624,"nodeType":"Return","src":"4276:59:4"}]},"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"3903:211:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":626,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4128:12:4","nodeType":"FunctionDefinition","parameters":{"id":614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"target","nameLocation":"4158:6:4","nodeType":"VariableDeclaration","scope":626,"src":"4150:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":611,"mutability":"mutable","name":"data","nameLocation":"4187:4:4","nodeType":"VariableDeclaration","scope":626,"src":"4174:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":610,"name":"bytes","nodeType":"ElementaryTypeName","src":"4174:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":613,"mutability":"mutable","name":"errorMessage","nameLocation":"4215:12:4","nodeType":"VariableDeclaration","scope":626,"src":"4201:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":612,"name":"string","nodeType":"ElementaryTypeName","src":"4201:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4140:93:4"},"returnParameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":626,"src":"4252:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":615,"name":"bytes","nodeType":"ElementaryTypeName","src":"4252:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4251:14:4"},"scope":866,"src":"4119:223:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":645,"nodeType":"Block","src":"4817:111:4","statements":[{"expression":{"arguments":[{"id":639,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4856:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":640,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"4864:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"4870:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4877:43:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":638,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[646,690],"referencedDeclaration":690,"src":"4834:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:87:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":637,"id":644,"nodeType":"Return","src":"4827:94:4"}]},"documentation":{"id":627,"nodeType":"StructuredDocumentation","src":"4348:351:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":646,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4713:21:4","nodeType":"FunctionDefinition","parameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"target","nameLocation":"4743:6:4","nodeType":"VariableDeclaration","scope":646,"src":"4735:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":628,"name":"address","nodeType":"ElementaryTypeName","src":"4735:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":631,"mutability":"mutable","name":"data","nameLocation":"4764:4:4","nodeType":"VariableDeclaration","scope":646,"src":"4751:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":630,"name":"bytes","nodeType":"ElementaryTypeName","src":"4751:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":633,"mutability":"mutable","name":"value","nameLocation":"4778:5:4","nodeType":"VariableDeclaration","scope":646,"src":"4770:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":632,"name":"uint256","nodeType":"ElementaryTypeName","src":"4770:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4734:50:4"},"returnParameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":646,"src":"4803:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":635,"name":"bytes","nodeType":"ElementaryTypeName","src":"4803:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4802:14:4"},"scope":866,"src":"4704:224:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":689,"nodeType":"Block","src":"5355:267:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":663,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5381:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$866","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$866","typeString":"library AddressUpgradeable"}],"id":662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5373:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":661,"name":"address","nodeType":"ElementaryTypeName","src":"5373:7:4","typeDescriptions":{}}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5387:7:4","memberName":"balance","nodeType":"MemberAccess","src":"5373:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"5398:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5373:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5405:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":660,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5365:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:81:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":670,"nodeType":"ExpressionStatement","src":"5365:81:4"},{"assignments":[672,674],"declarations":[{"constant":false,"id":672,"mutability":"mutable","name":"success","nameLocation":"5462:7:4","nodeType":"VariableDeclaration","scope":689,"src":"5457:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":671,"name":"bool","nodeType":"ElementaryTypeName","src":"5457:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":674,"mutability":"mutable","name":"returndata","nameLocation":"5484:10:4","nodeType":"VariableDeclaration","scope":689,"src":"5471:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":673,"name":"bytes","nodeType":"ElementaryTypeName","src":"5471:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":681,"initialValue":{"arguments":[{"id":679,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"5524:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":675,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5498:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5505:4:4","memberName":"call","nodeType":"MemberAccess","src":"5498:11:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"5517:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5498:25:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5456:73:4"},{"expression":{"arguments":[{"id":683,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5573:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":684,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"5581:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":685,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"5590:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":686,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"5602:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":682,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"5546:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":659,"id":688,"nodeType":"Return","src":"5539:76:4"}]},"documentation":{"id":647,"nodeType":"StructuredDocumentation","src":"4934:237:4","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":690,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5185:21:4","nodeType":"FunctionDefinition","parameters":{"id":656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"target","nameLocation":"5224:6:4","nodeType":"VariableDeclaration","scope":690,"src":"5216:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":651,"mutability":"mutable","name":"data","nameLocation":"5253:4:4","nodeType":"VariableDeclaration","scope":690,"src":"5240:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":650,"name":"bytes","nodeType":"ElementaryTypeName","src":"5240:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":653,"mutability":"mutable","name":"value","nameLocation":"5275:5:4","nodeType":"VariableDeclaration","scope":690,"src":"5267:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":652,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":655,"mutability":"mutable","name":"errorMessage","nameLocation":"5304:12:4","nodeType":"VariableDeclaration","scope":690,"src":"5290:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":654,"name":"string","nodeType":"ElementaryTypeName","src":"5290:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5206:116:4"},"returnParameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":690,"src":"5341:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":657,"name":"bytes","nodeType":"ElementaryTypeName","src":"5341:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5340:14:4"},"scope":866,"src":"5176:446:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":706,"nodeType":"Block","src":"5899:97:4","statements":[{"expression":{"arguments":[{"id":701,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"5935:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":702,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"5943:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5949:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":700,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[707,736],"referencedDeclaration":736,"src":"5916:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5916:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":699,"id":705,"nodeType":"Return","src":"5909:80:4"}]},"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"5628:166:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":707,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5808:18:4","nodeType":"FunctionDefinition","parameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"target","nameLocation":"5835:6:4","nodeType":"VariableDeclaration","scope":707,"src":"5827:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"data","nameLocation":"5856:4:4","nodeType":"VariableDeclaration","scope":707,"src":"5843:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":694,"name":"bytes","nodeType":"ElementaryTypeName","src":"5843:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5826:35:4"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":707,"src":"5885:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":697,"name":"bytes","nodeType":"ElementaryTypeName","src":"5885:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5884:14:4"},"scope":866,"src":"5799:197:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":735,"nodeType":"Block","src":"6338:168:4","statements":[{"assignments":[720,722],"declarations":[{"constant":false,"id":720,"mutability":"mutable","name":"success","nameLocation":"6354:7:4","nodeType":"VariableDeclaration","scope":735,"src":"6349:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":719,"name":"bool","nodeType":"ElementaryTypeName","src":"6349:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":722,"mutability":"mutable","name":"returndata","nameLocation":"6376:10:4","nodeType":"VariableDeclaration","scope":735,"src":"6363:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":721,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":727,"initialValue":{"arguments":[{"id":725,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"6408:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":723,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"6390:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:10:4","memberName":"staticcall","nodeType":"MemberAccess","src":"6390:17:4","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6348:65:4"},{"expression":{"arguments":[{"id":729,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"6457:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":730,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"6465:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":731,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"6474:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":732,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"6486:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":728,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"6430:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6430:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":718,"id":734,"nodeType":"Return","src":"6423:76:4"}]},"documentation":{"id":708,"nodeType":"StructuredDocumentation","src":"6002:173:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":736,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6189:18:4","nodeType":"FunctionDefinition","parameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"target","nameLocation":"6225:6:4","nodeType":"VariableDeclaration","scope":736,"src":"6217:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"data","nameLocation":"6254:4:4","nodeType":"VariableDeclaration","scope":736,"src":"6241:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":711,"name":"bytes","nodeType":"ElementaryTypeName","src":"6241:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":714,"mutability":"mutable","name":"errorMessage","nameLocation":"6282:12:4","nodeType":"VariableDeclaration","scope":736,"src":"6268:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":713,"name":"string","nodeType":"ElementaryTypeName","src":"6268:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6207:93:4"},"returnParameters":{"id":718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":736,"src":"6324:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":716,"name":"bytes","nodeType":"ElementaryTypeName","src":"6324:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6323:14:4"},"scope":866,"src":"6180:326:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":752,"nodeType":"Block","src":"6782:101:4","statements":[{"expression":{"arguments":[{"id":747,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"6820:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":748,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"6828:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6834:41:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":746,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[753,782],"referencedDeclaration":782,"src":"6799:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6799:77:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":745,"id":751,"nodeType":"Return","src":"6792:84:4"}]},"documentation":{"id":737,"nodeType":"StructuredDocumentation","src":"6512:168:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":753,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6694:20:4","nodeType":"FunctionDefinition","parameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":739,"mutability":"mutable","name":"target","nameLocation":"6723:6:4","nodeType":"VariableDeclaration","scope":753,"src":"6715:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":738,"name":"address","nodeType":"ElementaryTypeName","src":"6715:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":741,"mutability":"mutable","name":"data","nameLocation":"6744:4:4","nodeType":"VariableDeclaration","scope":753,"src":"6731:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":740,"name":"bytes","nodeType":"ElementaryTypeName","src":"6731:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6714:35:4"},"returnParameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":753,"src":"6768:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":743,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:4"},"scope":866,"src":"6685:198:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":781,"nodeType":"Block","src":"7224:170:4","statements":[{"assignments":[766,768],"declarations":[{"constant":false,"id":766,"mutability":"mutable","name":"success","nameLocation":"7240:7:4","nodeType":"VariableDeclaration","scope":781,"src":"7235:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":765,"name":"bool","nodeType":"ElementaryTypeName","src":"7235:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":768,"mutability":"mutable","name":"returndata","nameLocation":"7262:10:4","nodeType":"VariableDeclaration","scope":781,"src":"7249:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":767,"name":"bytes","nodeType":"ElementaryTypeName","src":"7249:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":773,"initialValue":{"arguments":[{"id":771,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7296:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":769,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"7276:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7283:12:4","memberName":"delegatecall","nodeType":"MemberAccess","src":"7276:19:4","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7276:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7234:67:4"},{"expression":{"arguments":[{"id":775,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"7345:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":776,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"7353:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":777,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"7362:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":778,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"7374:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":774,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"7318:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7318:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":764,"id":780,"nodeType":"Return","src":"7311:76:4"}]},"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"6889:175:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":782,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7078:20:4","nodeType":"FunctionDefinition","parameters":{"id":761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"target","nameLocation":"7116:6:4","nodeType":"VariableDeclaration","scope":782,"src":"7108:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"data","nameLocation":"7145:4:4","nodeType":"VariableDeclaration","scope":782,"src":"7132:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":757,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":760,"mutability":"mutable","name":"errorMessage","nameLocation":"7173:12:4","nodeType":"VariableDeclaration","scope":782,"src":"7159:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":759,"name":"string","nodeType":"ElementaryTypeName","src":"7159:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7098:93:4"},"returnParameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":782,"src":"7210:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":762,"name":"bytes","nodeType":"ElementaryTypeName","src":"7210:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7209:14:4"},"scope":866,"src":"7069:325:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":820,"nodeType":"Block","src":"7876:434:4","statements":[{"condition":{"id":796,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"7890:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":818,"nodeType":"Block","src":"8246:58:4","statements":[{"expression":{"arguments":[{"id":814,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"8268:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":815,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"8280:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":813,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"8260:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8260:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":817,"nodeType":"ExpressionStatement","src":"8260:33:4"}]},"id":819,"nodeType":"IfStatement","src":"7886:418:4","trueBody":{"id":812,"nodeType":"Block","src":"7899:341:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":797,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"7917:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7928:6:4","memberName":"length","nodeType":"MemberAccess","src":"7917:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7938:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7917:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":809,"nodeType":"IfStatement","src":"7913:286:4","trueBody":{"id":808,"nodeType":"Block","src":"7941:258:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":803,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"8143:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":802,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"8132:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8152:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":801,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8124:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8124:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":807,"nodeType":"ExpressionStatement","src":"8124:60:4"}]}},{"expression":{"id":810,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"8219:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":795,"id":811,"nodeType":"Return","src":"8212:17:4"}]}}]},"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"7400:277:4","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":821,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7691:26:4","nodeType":"FunctionDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"target","nameLocation":"7735:6:4","nodeType":"VariableDeclaration","scope":821,"src":"7727:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"7727:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":787,"mutability":"mutable","name":"success","nameLocation":"7756:7:4","nodeType":"VariableDeclaration","scope":821,"src":"7751:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":786,"name":"bool","nodeType":"ElementaryTypeName","src":"7751:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":789,"mutability":"mutable","name":"returndata","nameLocation":"7786:10:4","nodeType":"VariableDeclaration","scope":821,"src":"7773:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":788,"name":"bytes","nodeType":"ElementaryTypeName","src":"7773:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":791,"mutability":"mutable","name":"errorMessage","nameLocation":"7820:12:4","nodeType":"VariableDeclaration","scope":821,"src":"7806:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":790,"name":"string","nodeType":"ElementaryTypeName","src":"7806:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7717:121:4"},"returnParameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":821,"src":"7862:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":793,"name":"bytes","nodeType":"ElementaryTypeName","src":"7862:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7861:14:4"},"scope":866,"src":"7682:628:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":844,"nodeType":"Block","src":"8691:135:4","statements":[{"condition":{"id":833,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"8705:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":842,"nodeType":"Block","src":"8762:58:4","statements":[{"expression":{"arguments":[{"id":838,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"8784:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":839,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"8796:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":837,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"8776:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8776:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":841,"nodeType":"ExpressionStatement","src":"8776:33:4"}]},"id":843,"nodeType":"IfStatement","src":"8701:119:4","trueBody":{"id":836,"nodeType":"Block","src":"8714:42:4","statements":[{"expression":{"id":834,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"8735:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":832,"id":835,"nodeType":"Return","src":"8728:17:4"}]}}]},"documentation":{"id":822,"nodeType":"StructuredDocumentation","src":"8316:210:4","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":845,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8540:16:4","nodeType":"FunctionDefinition","parameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"success","nameLocation":"8571:7:4","nodeType":"VariableDeclaration","scope":845,"src":"8566:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":823,"name":"bool","nodeType":"ElementaryTypeName","src":"8566:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":826,"mutability":"mutable","name":"returndata","nameLocation":"8601:10:4","nodeType":"VariableDeclaration","scope":845,"src":"8588:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":825,"name":"bytes","nodeType":"ElementaryTypeName","src":"8588:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":828,"mutability":"mutable","name":"errorMessage","nameLocation":"8635:12:4","nodeType":"VariableDeclaration","scope":845,"src":"8621:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":827,"name":"string","nodeType":"ElementaryTypeName","src":"8621:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8556:97:4"},"returnParameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":845,"src":"8677:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":830,"name":"bytes","nodeType":"ElementaryTypeName","src":"8677:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8676:14:4"},"scope":866,"src":"8531:295:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":864,"nodeType":"Block","src":"8915:457:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":852,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"8991:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9002:6:4","memberName":"length","nodeType":"MemberAccess","src":"8991:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9011:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8991:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":862,"nodeType":"Block","src":"9321:45:4","statements":[{"expression":{"arguments":[{"id":859,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"9342:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":858,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9335:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9335:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":861,"nodeType":"ExpressionStatement","src":"9335:20:4"}]},"id":863,"nodeType":"IfStatement","src":"8987:379:4","trueBody":{"id":857,"nodeType":"Block","src":"9014:301:4","statements":[{"AST":{"nodeType":"YulBlock","src":"9172:133:4","statements":[{"nodeType":"YulVariableDeclaration","src":"9190:40:4","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9219:10:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9213:5:4"},"nodeType":"YulFunctionCall","src":"9213:17:4"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9194:15:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9258:2:4","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9262:10:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9254:3:4"},"nodeType":"YulFunctionCall","src":"9254:19:4"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9275:15:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9247:6:4"},"nodeType":"YulFunctionCall","src":"9247:44:4"},"nodeType":"YulExpressionStatement","src":"9247:44:4"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":847,"isOffset":false,"isSlot":false,"src":"9219:10:4","valueSize":1},{"declaration":847,"isOffset":false,"isSlot":false,"src":"9262:10:4","valueSize":1}],"id":856,"nodeType":"InlineAssembly","src":"9163:142:4"}]}}]},"id":865,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8841:7:4","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"returndata","nameLocation":"8862:10:4","nodeType":"VariableDeclaration","scope":865,"src":"8849:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":846,"name":"bytes","nodeType":"ElementaryTypeName","src":"8849:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":849,"mutability":"mutable","name":"errorMessage","nameLocation":"8888:12:4","nodeType":"VariableDeclaration","scope":865,"src":"8874:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":848,"name":"string","nodeType":"ElementaryTypeName","src":"8874:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8848:53:4"},"returnParameters":{"id":851,"nodeType":"ParameterList","parameters":[],"src":"8915:0:4"},"scope":866,"src":"8832:540:4","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":867,"src":"194:9180:4","usedErrors":[]}],"src":"101:9274:4"},"id":4},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[917],"Initializable":[408]},"id":918,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":868,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":870,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":918,"sourceUnit":409,"src":"125:63:5","symbolAliases":[{"foreign":{"id":869,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"133:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":872,"name":"Initializable","nameLocations":["727:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":408,"src":"727:13:5"},"id":873,"nodeType":"InheritanceSpecifier","src":"727:13:5"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":871,"nodeType":"StructuredDocumentation","src":"190:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":917,"linearizedBaseContracts":[917,408],"name":"ContextUpgradeable","nameLocation":"705:18:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":878,"nodeType":"Block","src":"799:7:5","statements":[]},"id":879,"implemented":true,"kind":"function","modifiers":[{"id":876,"kind":"modifierInvocation","modifierName":{"id":875,"name":"onlyInitializing","nameLocations":["782:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":353,"src":"782:16:5"},"nodeType":"ModifierInvocation","src":"782:16:5"}],"name":"__Context_init","nameLocation":"756:14:5","nodeType":"FunctionDefinition","parameters":{"id":874,"nodeType":"ParameterList","parameters":[],"src":"770:2:5"},"returnParameters":{"id":877,"nodeType":"ParameterList","parameters":[],"src":"799:0:5"},"scope":917,"src":"747:59:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":884,"nodeType":"Block","src":"874:7:5","statements":[]},"id":885,"implemented":true,"kind":"function","modifiers":[{"id":882,"kind":"modifierInvocation","modifierName":{"id":881,"name":"onlyInitializing","nameLocations":["857:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":353,"src":"857:16:5"},"nodeType":"ModifierInvocation","src":"857:16:5"}],"name":"__Context_init_unchained","nameLocation":"821:24:5","nodeType":"FunctionDefinition","parameters":{"id":880,"nodeType":"ParameterList","parameters":[],"src":"845:2:5"},"returnParameters":{"id":883,"nodeType":"ParameterList","parameters":[],"src":"874:0:5"},"scope":917,"src":"812:69:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":893,"nodeType":"Block","src":"948:34:5","statements":[{"expression":{"expression":{"id":890,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"965:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"969:6:5","memberName":"sender","nodeType":"MemberAccess","src":"965:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":889,"id":892,"nodeType":"Return","src":"958:17:5"}]},"id":894,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"895:10:5","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[],"src":"905:2:5"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":894,"src":"939:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"939:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"938:9:5"},"scope":917,"src":"886:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":902,"nodeType":"Block","src":"1055:32:5","statements":[{"expression":{"expression":{"id":899,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1072:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1076:4:5","memberName":"data","nodeType":"MemberAccess","src":"1072:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":898,"id":901,"nodeType":"Return","src":"1065:15:5"}]},"id":903,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"997:8:5","nodeType":"FunctionDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[],"src":"1005:2:5"},"returnParameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":903,"src":"1039:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":896,"name":"bytes","nodeType":"ElementaryTypeName","src":"1039:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1038:16:5"},"scope":917,"src":"988:99:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":910,"nodeType":"Block","src":"1165:25:5","statements":[{"expression":{"hexValue":"30","id":908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":907,"id":909,"nodeType":"Return","src":"1175:8:5"}]},"id":911,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1102:20:5","nodeType":"FunctionDefinition","parameters":{"id":904,"nodeType":"ParameterList","parameters":[],"src":"1122:2:5"},"returnParameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":911,"src":"1156:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":905,"name":"uint256","nodeType":"ElementaryTypeName","src":"1156:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1155:9:5"},"scope":917,"src":"1093:97:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"1196:254:5","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":916,"mutability":"mutable","name":"__gap","nameLocation":"1475:5:5","nodeType":"VariableDeclaration","scope":917,"src":"1455:25:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":913,"name":"uint256","nodeType":"ElementaryTypeName","src":"1455:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":915,"length":{"hexValue":"3530","id":914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1463:2:5","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1455:11:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":918,"src":"687:796:5","usedErrors":[]}],"src":"101:1383:5"},"id":5},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[995]},"id":996,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":919,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":920,"nodeType":"StructuredDocumentation","src":"131:70:6","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":995,"linearizedBaseContracts":[995],"name":"IERC20","nameLocation":"212:6:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":921,"nodeType":"StructuredDocumentation","src":"225:158:6","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":929,"name":"Transfer","nameLocation":"394:8:6","nodeType":"EventDefinition","parameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":923,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:6","nodeType":"VariableDeclaration","scope":929,"src":"403:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":922,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":925,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:6","nodeType":"VariableDeclaration","scope":929,"src":"425:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":924,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":927,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:6","nodeType":"VariableDeclaration","scope":929,"src":"445:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":926,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:6"},"src":"388:72:6"},{"anonymous":false,"documentation":{"id":930,"nodeType":"StructuredDocumentation","src":"466:148:6","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":938,"name":"Approval","nameLocation":"625:8:6","nodeType":"EventDefinition","parameters":{"id":937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":932,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:6","nodeType":"VariableDeclaration","scope":938,"src":"634:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":931,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":934,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:6","nodeType":"VariableDeclaration","scope":938,"src":"657:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":933,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":936,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:6","nodeType":"VariableDeclaration","scope":938,"src":"682:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":935,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:6"},"src":"619:78:6"},{"documentation":{"id":939,"nodeType":"StructuredDocumentation","src":"703:66:6","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":944,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:6","nodeType":"FunctionDefinition","parameters":{"id":940,"nodeType":"ParameterList","parameters":[],"src":"794:2:6"},"returnParameters":{"id":943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":944,"src":"820:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":941,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:6"},"scope":995,"src":"774:55:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":945,"nodeType":"StructuredDocumentation","src":"835:72:6","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":952,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:6","nodeType":"FunctionDefinition","parameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"account","nameLocation":"939:7:6","nodeType":"VariableDeclaration","scope":952,"src":"931:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:6"},"returnParameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":952,"src":"971:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":949,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:6"},"scope":995,"src":"912:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":953,"nodeType":"StructuredDocumentation","src":"986:202:6","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":962,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:6","nodeType":"FunctionDefinition","parameters":{"id":958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":955,"mutability":"mutable","name":"to","nameLocation":"1219:2:6","nodeType":"VariableDeclaration","scope":962,"src":"1211:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":954,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":957,"mutability":"mutable","name":"amount","nameLocation":"1231:6:6","nodeType":"VariableDeclaration","scope":962,"src":"1223:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":956,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:6"},"returnParameters":{"id":961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":962,"src":"1257:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":959,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:6"},"scope":995,"src":"1193:70:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"1269:264:6","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":972,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:6","nodeType":"FunctionDefinition","parameters":{"id":968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"owner","nameLocation":"1565:5:6","nodeType":"VariableDeclaration","scope":972,"src":"1557:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"spender","nameLocation":"1580:7:6","nodeType":"VariableDeclaration","scope":972,"src":"1572:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":966,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:6"},"returnParameters":{"id":971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":972,"src":"1612:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":969,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:6"},"scope":995,"src":"1538:83:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":973,"nodeType":"StructuredDocumentation","src":"1627:642:6","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":982,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:6","nodeType":"FunctionDefinition","parameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":975,"mutability":"mutable","name":"spender","nameLocation":"2299:7:6","nodeType":"VariableDeclaration","scope":982,"src":"2291:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":974,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":977,"mutability":"mutable","name":"amount","nameLocation":"2316:6:6","nodeType":"VariableDeclaration","scope":982,"src":"2308:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":976,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:6"},"returnParameters":{"id":981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":982,"src":"2342:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":979,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:6"},"scope":995,"src":"2274:74:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"2354:287:6","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":994,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:6","nodeType":"FunctionDefinition","parameters":{"id":990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"from","nameLocation":"2676:4:6","nodeType":"VariableDeclaration","scope":994,"src":"2668:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"to","nameLocation":"2690:2:6","nodeType":"VariableDeclaration","scope":994,"src":"2682:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":986,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":989,"mutability":"mutable","name":"amount","nameLocation":"2702:6:6","nodeType":"VariableDeclaration","scope":994,"src":"2694:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":988,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:6"},"returnParameters":{"id":993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":994,"src":"2728:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":991,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:6"},"scope":995,"src":"2646:88:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":996,"src":"202:2534:6","usedErrors":[]}],"src":"106:2631:6"},"id":6},"contracts/Gateway.sol":{"ast":{"absolutePath":"contracts/Gateway.sol","exportedSymbols":{"ContextUpgradeable":[917],"Gateway":[1609],"GatewaySettingManager":[1877],"IERC20":[995],"IGateway":[2051],"Initializable":[408],"PausableUpgradeable":[536],"SharedStructs":[2064]},"id":1610,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":997,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"39:24:7"},{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","id":998,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1610,"sourceUnit":537,"src":"65:78:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/GatewaySettingManager.sol","file":"./GatewaySettingManager.sol","id":1000,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1610,"sourceUnit":1878,"src":"145:66:7","symbolAliases":[{"foreign":{"id":999,"name":"GatewaySettingManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"153:21:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IGateway.sol","file":"./interfaces/IGateway.sol","id":1003,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1610,"sourceUnit":2052,"src":"212:59:7","symbolAliases":[{"foreign":{"id":1001,"name":"IGateway","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"220:8:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1002,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"230:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/libraries/SharedStructs.sol","file":"./libraries/SharedStructs.sol","id":1005,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1610,"sourceUnit":2065,"src":"272:60:7","symbolAliases":[{"foreign":{"id":1004,"name":"SharedStructs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"280:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1007,"name":"IGateway","nameLocations":["471:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":2051,"src":"471:8:7"},"id":1008,"nodeType":"InheritanceSpecifier","src":"471:8:7"},{"baseName":{"id":1009,"name":"GatewaySettingManager","nameLocations":["481:21:7"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"481:21:7"},"id":1010,"nodeType":"InheritanceSpecifier","src":"481:21:7"},{"baseName":{"id":1011,"name":"PausableUpgradeable","nameLocations":["504:19:7"],"nodeType":"IdentifierPath","referencedDeclaration":536,"src":"504:19:7"},"id":1012,"nodeType":"InheritanceSpecifier","src":"504:19:7"}],"canonicalName":"Gateway","contractDependencies":[],"contractKind":"contract","documentation":{"id":1006,"nodeType":"StructuredDocumentation","src":"334:116:7","text":" @title Gateway\n @notice This contract serves as a gateway for creating orders and managing settlements."},"fullyImplemented":true,"id":1609,"linearizedBaseContracts":[1609,536,1877,106,239,917,408,2051],"name":"Gateway","nameLocation":"460:7:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Gateway.fee","id":1017,"members":[{"constant":false,"id":1014,"mutability":"mutable","name":"protocolFee","nameLocation":"550:11:7","nodeType":"VariableDeclaration","scope":1017,"src":"542:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1013,"name":"uint256","nodeType":"ElementaryTypeName","src":"542:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1016,"mutability":"mutable","name":"liquidityProviderAmount","nameLocation":"573:23:7","nodeType":"VariableDeclaration","scope":1017,"src":"565:31:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1015,"name":"uint256","nodeType":"ElementaryTypeName","src":"565:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"fee","nameLocation":"534:3:7","nodeType":"StructDefinition","scope":1609,"src":"527:73:7","visibility":"public"},{"constant":false,"id":1022,"mutability":"mutable","name":"order","nameLocation":"637:5:7","nodeType":"VariableDeclaration","scope":1609,"src":"603:39:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order)"},"typeName":{"id":1021,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1018,"name":"bytes32","nodeType":"ElementaryTypeName","src":"611:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"603:25:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1020,"nodeType":"UserDefinedTypeName","pathNode":{"id":1019,"name":"Order","nameLocations":["622:5:7"],"nodeType":"IdentifierPath","referencedDeclaration":1960,"src":"622:5:7"},"referencedDeclaration":1960,"src":"622:5:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage_ptr","typeString":"struct IGateway.Order"}}},"visibility":"private"},{"constant":false,"id":1026,"mutability":"mutable","name":"_nonce","nameLocation":"681:6:7","nodeType":"VariableDeclaration","scope":1609,"src":"645:42:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1025,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1023,"name":"address","nodeType":"ElementaryTypeName","src":"653:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"645:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1024,"name":"uint256","nodeType":"ElementaryTypeName","src":"664:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1030,"mutability":"mutable","name":"__gap","nameLocation":"710:5:7","nodeType":"VariableDeclaration","scope":1609,"src":"690:25:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1027,"name":"uint256","nodeType":"ElementaryTypeName","src":"690:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1029,"length":{"hexValue":"3530","id":1028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"698:2:7","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"690:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"},{"body":{"id":1037,"nodeType":"Block","src":"783:30:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1034,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"787:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"787:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1036,"nodeType":"ExpressionStatement","src":"787:22:7"}]},"documentation":{"id":1031,"nodeType":"StructuredDocumentation","src":"719:48:7","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":1038,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1032,"nodeType":"ParameterList","parameters":[],"src":"780:2:7"},"returnParameters":{"id":1033,"nodeType":"ParameterList","parameters":[],"src":"783:0:7"},"scope":1609,"src":"769:44:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1054,"nodeType":"Block","src":"899:71:7","statements":[{"expression":{"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1044,"name":"MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"903:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3130305f303030","id":1045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"913:7:7","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100_000"},"src":"903:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1047,"nodeType":"ExpressionStatement","src":"903:17:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1048,"name":"__Ownable2Step_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"924:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"924:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1050,"nodeType":"ExpressionStatement","src":"924:21:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1051,"name":"__Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"949:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"949:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1053,"nodeType":"ExpressionStatement","src":"949:17:7"}]},"documentation":{"id":1039,"nodeType":"StructuredDocumentation","src":"816:38:7","text":" @dev Initialize function."},"functionSelector":"8129fc1c","id":1055,"implemented":true,"kind":"function","modifiers":[{"id":1042,"kind":"modifierInvocation","modifierName":{"id":1041,"name":"initializer","nameLocations":["887:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":310,"src":"887:11:7"},"nodeType":"ModifierInvocation","src":"887:11:7"}],"name":"initialize","nameLocation":"865:10:7","nodeType":"FunctionDefinition","parameters":{"id":1040,"nodeType":"ParameterList","parameters":[],"src":"875:2:7"},"returnParameters":{"id":1043,"nodeType":"ParameterList","parameters":[],"src":"899:0:7"},"scope":1609,"src":"856:114:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1067,"nodeType":"Block","src":"1079:72:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1059,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1091:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1095:6:7","memberName":"sender","nodeType":"MemberAccess","src":"1091:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1061,"name":"_aggregatorAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"1105:18:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1091:32:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7941676772656761746f72","id":1063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1125:16:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243","typeString":"literal_string \"OnlyAggregator\""},"value":"OnlyAggregator"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243","typeString":"literal_string \"OnlyAggregator\""}],"id":1058,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1083:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1083:59:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1065,"nodeType":"ExpressionStatement","src":"1083:59:7"},{"id":1066,"nodeType":"PlaceholderStatement","src":"1146:1:7"}]},"documentation":{"id":1056,"nodeType":"StructuredDocumentation","src":"973:78:7","text":" @dev Modifier that allows only the aggregator to call a function."},"id":1068,"name":"onlyAggregator","nameLocation":"1062:14:7","nodeType":"ModifierDefinition","parameters":{"id":1057,"nodeType":"ParameterList","parameters":[],"src":"1076:2:7"},"src":"1053:98:7","virtual":false,"visibility":"internal"},{"body":{"id":1077,"nodeType":"Block","src":"1422:16:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1074,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"1426:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1426:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1076,"nodeType":"ExpressionStatement","src":"1426:8:7"}]},"documentation":{"id":1069,"nodeType":"StructuredDocumentation","src":"1347:37:7","text":" @dev Pause the contract."},"functionSelector":"8456cb59","id":1078,"implemented":true,"kind":"function","modifiers":[{"id":1072,"kind":"modifierInvocation","modifierName":{"id":1071,"name":"onlyOwner","nameLocations":["1412:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"1412:9:7"},"nodeType":"ModifierInvocation","src":"1412:9:7"}],"name":"pause","nameLocation":"1395:5:7","nodeType":"FunctionDefinition","parameters":{"id":1070,"nodeType":"ParameterList","parameters":[],"src":"1400:2:7"},"returnParameters":{"id":1073,"nodeType":"ParameterList","parameters":[],"src":"1422:0:7"},"scope":1609,"src":"1386:52:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1087,"nodeType":"Block","src":"1520:18:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1084,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"1524:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1524:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1086,"nodeType":"ExpressionStatement","src":"1524:10:7"}]},"documentation":{"id":1079,"nodeType":"StructuredDocumentation","src":"1441:39:7","text":" @dev Unpause the contract."},"functionSelector":"3f4ba83a","id":1088,"implemented":true,"kind":"function","modifiers":[{"id":1082,"kind":"modifierInvocation","modifierName":{"id":1081,"name":"onlyOwner","nameLocations":["1510:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"1510:9:7"},"nodeType":"ModifierInvocation","src":"1510:9:7"}],"name":"unpause","nameLocation":"1491:7:7","nodeType":"FunctionDefinition","parameters":{"id":1080,"nodeType":"ParameterList","parameters":[],"src":"1498:2:7"},"returnParameters":{"id":1083,"nodeType":"ParameterList","parameters":[],"src":"1520:0:7"},"scope":1609,"src":"1482:56:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1982],"body":{"id":1215,"nodeType":"Block","src":"2034:1131:7","statements":[{"expression":{"arguments":[{"id":1113,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"2077:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1114,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"2085:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1115,"name":"_refundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"2094:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1116,"name":"_senderFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"2110:19:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1117,"name":"_senderFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"2131:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1112,"name":"_handler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"2068:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256,address,address,uint256) view"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2068:74:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1119,"nodeType":"ExpressionStatement","src":"2068:74:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1123,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"2187:11:7","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":1122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1121,"name":"bytes","nodeType":"ElementaryTypeName","src":"2181:5:7","typeDescriptions":{}}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2200:6:7","memberName":"length","nodeType":"MemberAccess","src":"2181:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2210:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2181:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69644d65737361676548617368","id":1128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2213:20:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4","typeString":"literal_string \"InvalidMessageHash\""},"value":"InvalidMessageHash"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4","typeString":"literal_string \"InvalidMessageHash\""}],"id":1120,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2173:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2173:61:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1130,"nodeType":"ExpressionStatement","src":"2173:61:7"},{"expression":{"arguments":[{"expression":{"id":1135,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2315:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2319:6:7","memberName":"sender","nodeType":"MemberAccess","src":"2315:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1139,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2335:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Gateway_$1609","typeString":"contract Gateway"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Gateway_$1609","typeString":"contract Gateway"}],"id":1138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2327:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1137,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:7","typeDescriptions":{}}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2327:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1141,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"2342:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1142,"name":"_senderFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"2352:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2342:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1132,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"2294:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1131,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"2287:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$995_$","typeString":"type(contract IERC20)"}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2287:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$995","typeString":"contract IERC20"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:12:7","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":994,"src":"2287:27:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2287:76:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1145,"nodeType":"ExpressionStatement","src":"2287:76:7"},{"expression":{"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2418:20:7","subExpression":{"baseExpression":{"id":1146,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"2418:6:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1149,"indexExpression":{"expression":{"id":1147,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2425:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2429:6:7","memberName":"sender","nodeType":"MemberAccess","src":"2425:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2418:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1151,"nodeType":"ExpressionStatement","src":"2418:20:7"},{"expression":{"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1152,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"2492:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":1156,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2523:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2527:6:7","memberName":"sender","nodeType":"MemberAccess","src":"2523:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":1158,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"2535:6:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1161,"indexExpression":{"expression":{"id":1159,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2542:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2546:6:7","memberName":"sender","nodeType":"MemberAccess","src":"2542:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2535:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1154,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2512:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2516:6:7","memberName":"encode","nodeType":"MemberAccess","src":"2512:10:7","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2512:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1153,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2502:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2502:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2492:63:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1165,"nodeType":"ExpressionStatement","src":"2492:63:7"},{"assignments":[1167],"declarations":[{"constant":false,"id":1167,"mutability":"mutable","name":"_protocolFee","nameLocation":"2592:12:7","nodeType":"VariableDeclaration","scope":1215,"src":"2584:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"2584:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1174,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1168,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"2608:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1169,"name":"protocolFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"2618:18:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2608:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1171,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2607:30:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1172,"name":"MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"2640:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2607:40:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2584:63:7"},{"expression":{"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1175,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"2651:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1177,"indexExpression":{"id":1176,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"2657:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2651:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1179,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2687:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2691:6:7","memberName":"sender","nodeType":"MemberAccess","src":"2687:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1181,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"2709:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1182,"name":"_senderFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"2740:19:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1183,"name":"_senderFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"2775:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1184,"name":"_protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"2803:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2833:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"66616c7365","id":1186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2855:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":1187,"name":"_refundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"2880:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1190,"name":"MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"2918:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2911:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1188,"name":"uint64","nodeType":"ElementaryTypeName","src":"2911:6:7","typeDescriptions":{}}},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2911:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1192,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"2939:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1193,"name":"_protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"2949:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2939:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1178,"name":"Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"2668:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Order_$1960_storage_ptr_$","typeString":"type(struct IGateway.Order storage pointer)"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2679:6:7","2702:5:7","2720:18:7","2764:9:7","2790:11:7","2820:11:7","2843:10:7","2865:13:7","2899:10:7","2931:6:7"],"names":["sender","token","senderFeeRecipient","senderFee","protocolFee","isFulfilled","isRefunded","refundAddress","currentBPS","amount"],"nodeType":"FunctionCall","src":"2668:298:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_memory_ptr","typeString":"struct IGateway.Order memory"}},"src":"2651:315:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1197,"nodeType":"ExpressionStatement","src":"2651:315:7"},{"eventCall":{"arguments":[{"expression":{"baseExpression":{"id":1199,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"3023:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1201,"indexExpression":{"id":1200,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"3029:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3023:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1202,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3038:6:7","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":1941,"src":"3023:21:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1203,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"3049:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":1204,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"3060:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1206,"indexExpression":{"id":1205,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"3066:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3060:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3075:6:7","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1959,"src":"3060:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1208,"name":"_protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"3086:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1209,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"3103:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1210,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"3115:5:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":1211,"name":"_institutionCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"3125:16:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1212,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"3146:11:7","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":1198,"name":"OrderCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"3006:12:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint256_$_t_bytes32_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes32,uint256,bytes32,string memory)"}},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3006:155:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1214,"nodeType":"EmitStatement","src":"3001:160:7"}]},"documentation":{"id":1089,"nodeType":"StructuredDocumentation","src":"1729:39:7","text":"@dev See {createOrder-IGateway}. "},"functionSelector":"d12ff20a","id":1216,"implemented":true,"kind":"function","modifiers":[{"id":1108,"kind":"modifierInvocation","modifierName":{"id":1107,"name":"whenNotPaused","nameLocations":["1994:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":458,"src":"1994:13:7"},"nodeType":"ModifierInvocation","src":"1994:13:7"}],"name":"createOrder","nameLocation":"1779:11:7","nodeType":"FunctionDefinition","parameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1091,"mutability":"mutable","name":"_token","nameLocation":"1802:6:7","nodeType":"VariableDeclaration","scope":1216,"src":"1794:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1090,"name":"address","nodeType":"ElementaryTypeName","src":"1794:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1093,"mutability":"mutable","name":"_amount","nameLocation":"1820:7:7","nodeType":"VariableDeclaration","scope":1216,"src":"1812:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1092,"name":"uint256","nodeType":"ElementaryTypeName","src":"1812:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1095,"mutability":"mutable","name":"_institutionCode","nameLocation":"1839:16:7","nodeType":"VariableDeclaration","scope":1216,"src":"1831:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1831:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"_rate","nameLocation":"1866:5:7","nodeType":"VariableDeclaration","scope":1216,"src":"1859:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1096,"name":"uint96","nodeType":"ElementaryTypeName","src":"1859:6:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"_senderFeeRecipient","nameLocation":"1883:19:7","nodeType":"VariableDeclaration","scope":1216,"src":"1875:27:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1101,"mutability":"mutable","name":"_senderFee","nameLocation":"1914:10:7","nodeType":"VariableDeclaration","scope":1216,"src":"1906:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1100,"name":"uint256","nodeType":"ElementaryTypeName","src":"1906:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1103,"mutability":"mutable","name":"_refundAddress","nameLocation":"1936:14:7","nodeType":"VariableDeclaration","scope":1216,"src":"1928:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"1928:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1105,"mutability":"mutable","name":"messageHash","nameLocation":"1970:11:7","nodeType":"VariableDeclaration","scope":1216,"src":"1954:27:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1104,"name":"string","nodeType":"ElementaryTypeName","src":"1954:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1790:194:7"},"returnParameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1110,"mutability":"mutable","name":"orderId","nameLocation":"2025:7:7","nodeType":"VariableDeclaration","scope":1216,"src":"2017:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1109,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2017:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2016:17:7"},"scope":1609,"src":"1770:1395:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1271,"nodeType":"Block","src":"3709:276:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1231,"name":"_isTokenSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"3721:17:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1233,"indexExpression":{"id":1232,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"3739:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3721:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3750:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3721:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e4e6f74537570706f72746564","id":1236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3753:19:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1","typeString":"literal_string \"TokenNotSupported\""},"value":"TokenNotSupported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1","typeString":"literal_string \"TokenNotSupported\""}],"id":1230,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3713:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3713:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1238,"nodeType":"ExpressionStatement","src":"3713:60:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1240,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"3785:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3796:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3785:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e7449735a65726f","id":1243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3799:14:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2","typeString":"literal_string \"AmountIsZero\""},"value":"AmountIsZero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2","typeString":"literal_string \"AmountIsZero\""}],"id":1239,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3777:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3777:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1245,"nodeType":"ExpressionStatement","src":"3777:37:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1247,"name":"_refundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"3826:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3852:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3844:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1248,"name":"address","nodeType":"ElementaryTypeName","src":"3844:7:7","typeDescriptions":{}}},"id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3844:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3826:28:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5468726f775a65726f41646472657373","id":1253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3856:18:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7","typeString":"literal_string \"ThrowZeroAddress\""},"value":"ThrowZeroAddress"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7","typeString":"literal_string \"ThrowZeroAddress\""}],"id":1246,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3818:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:57:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1255,"nodeType":"ExpressionStatement","src":"3818:57:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1256,"name":"_senderFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"3884:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3898:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3884:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1270,"nodeType":"IfStatement","src":"3880:102:7","trueBody":{"id":1269,"nodeType":"Block","src":"3901:81:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1260,"name":"_senderFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"3914:19:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3945:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3937:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1261,"name":"address","nodeType":"ElementaryTypeName","src":"3937:7:7","typeDescriptions":{}}},"id":1264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3937:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3914:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696453656e646572466565526563697069656e74","id":1266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3949:27:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8","typeString":"literal_string \"InvalidSenderFeeRecipient\""},"value":"InvalidSenderFeeRecipient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8","typeString":"literal_string \"InvalidSenderFeeRecipient\""}],"id":1259,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3906:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3906:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1268,"nodeType":"ExpressionStatement","src":"3906:71:7"}]}}]},"documentation":{"id":1217,"nodeType":"StructuredDocumentation","src":"3168:388:7","text":" @dev Internal function to handle order creation.\n @param _token The address of the token being traded.\n @param _amount The amount of tokens being traded.\n @param _refundAddress The address to refund the tokens in case of cancellation.\n @param _senderFeeRecipient The address of the recipient for the sender fee.\n @param _senderFee The amount of the sender fee."},"id":1272,"implemented":true,"kind":"function","modifiers":[],"name":"_handler","nameLocation":"3567:8:7","nodeType":"FunctionDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"mutability":"mutable","name":"_token","nameLocation":"3587:6:7","nodeType":"VariableDeclaration","scope":1272,"src":"3579:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1218,"name":"address","nodeType":"ElementaryTypeName","src":"3579:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1221,"mutability":"mutable","name":"_amount","nameLocation":"3605:7:7","nodeType":"VariableDeclaration","scope":1272,"src":"3597:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1220,"name":"uint256","nodeType":"ElementaryTypeName","src":"3597:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1223,"mutability":"mutable","name":"_refundAddress","nameLocation":"3624:14:7","nodeType":"VariableDeclaration","scope":1272,"src":"3616:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1222,"name":"address","nodeType":"ElementaryTypeName","src":"3616:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1225,"mutability":"mutable","name":"_senderFeeRecipient","nameLocation":"3650:19:7","nodeType":"VariableDeclaration","scope":1272,"src":"3642:27:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"3642:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"_senderFee","nameLocation":"3681:10:7","nodeType":"VariableDeclaration","scope":1272,"src":"3673:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1226,"name":"uint256","nodeType":"ElementaryTypeName","src":"3673:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3575:119:7"},"returnParameters":{"id":1229,"nodeType":"ParameterList","parameters":[],"src":"3709:0:7"},"scope":1609,"src":"3558:427:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[1996],"body":{"id":1426,"nodeType":"Block","src":"4380:1337:7","statements":[{"expression":{"arguments":[{"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4443:28:7","subExpression":{"expression":{"baseExpression":{"id":1289,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"4444:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1291,"indexExpression":{"id":1290,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"4450:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4444:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4460:11:7","memberName":"isFulfilled","nodeType":"MemberAccess","referencedDeclaration":1951,"src":"4444:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f7264657246756c66696c6c6564","id":1294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4473:16:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5","typeString":"literal_string \"OrderFulfilled\""},"value":"OrderFulfilled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5","typeString":"literal_string \"OrderFulfilled\""}],"id":1288,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4435:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4435:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1296,"nodeType":"ExpressionStatement","src":"4435:55:7"},{"expression":{"arguments":[{"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4502:27:7","subExpression":{"expression":{"baseExpression":{"id":1298,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"4503:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1300,"indexExpression":{"id":1299,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"4509:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4503:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1301,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4519:10:7","memberName":"isRefunded","nodeType":"MemberAccess","referencedDeclaration":1953,"src":"4503:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f72646572526566756e646564","id":1303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4531:15:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd","typeString":"literal_string \"OrderRefunded\""},"value":"OrderRefunded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd","typeString":"literal_string \"OrderRefunded\""}],"id":1297,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4494:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4494:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1305,"nodeType":"ExpressionStatement","src":"4494:53:7"},{"assignments":[1307],"declarations":[{"constant":false,"id":1307,"mutability":"mutable","name":"token","nameLocation":"4592:5:7","nodeType":"VariableDeclaration","scope":1426,"src":"4584:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1306,"name":"address","nodeType":"ElementaryTypeName","src":"4584:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1312,"initialValue":{"expression":{"baseExpression":{"id":1308,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"4600:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1310,"indexExpression":{"id":1309,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"4606:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4600:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1311,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4616:5:7","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":1943,"src":"4600:21:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4584:37:7"},{"expression":{"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1313,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"4688:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1315,"indexExpression":{"id":1314,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"4694:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4688:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4704:10:7","memberName":"currentBPS","nodeType":"MemberAccess","referencedDeclaration":1957,"src":"4688:26:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1317,"name":"_settlePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"4718:14:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"4688:44:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1319,"nodeType":"ExpressionStatement","src":"4688:44:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1320,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"4741:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1322,"indexExpression":{"id":1321,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"4747:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4741:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4757:10:7","memberName":"currentBPS","nodeType":"MemberAccess","referencedDeclaration":1957,"src":"4741:26:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4771:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4741:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1389,"nodeType":"IfStatement","src":"4737:604:7","trueBody":{"id":1388,"nodeType":"Block","src":"4774:567:7","statements":[{"expression":{"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1326,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"4824:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1328,"indexExpression":{"id":1327,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"4830:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4824:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4840:11:7","memberName":"isFulfilled","nodeType":"MemberAccess","referencedDeclaration":1951,"src":"4824:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4854:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4824:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1332,"nodeType":"ExpressionStatement","src":"4824:34:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1333,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"4868:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1335,"indexExpression":{"id":1334,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"4874:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4868:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4884:9:7","memberName":"senderFee","nodeType":"MemberAccess","referencedDeclaration":1947,"src":"4868:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4897:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4868:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1368,"nodeType":"IfStatement","src":"4864:321:7","trueBody":{"id":1367,"nodeType":"Block","src":"4900:285:7","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1346,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"4978:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1348,"indexExpression":{"id":1347,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"4984:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4978:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1349,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4994:18:7","memberName":"senderFeeRecipient","nodeType":"MemberAccess","referencedDeclaration":1945,"src":"4978:34:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":1350,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"5019:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1352,"indexExpression":{"id":1351,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"5025:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5019:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1353,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5035:9:7","memberName":"senderFee","nodeType":"MemberAccess","referencedDeclaration":1947,"src":"5019:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"baseExpression":{"id":1340,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"4940:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1342,"indexExpression":{"id":1341,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"4946:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4940:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1343,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4956:5:7","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":1943,"src":"4940:21:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1339,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"4933:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$995_$","typeString":"type(contract IERC20)"}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4933:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$995","typeString":"contract IERC20"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4963:8:7","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":962,"src":"4933:38:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4933:117:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1355,"nodeType":"ExpressionStatement","src":"4933:117:7"},{"eventCall":{"arguments":[{"expression":{"baseExpression":{"id":1357,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"5107:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1359,"indexExpression":{"id":1358,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"5113:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5107:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1360,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5123:18:7","memberName":"senderFeeRecipient","nodeType":"MemberAccess","referencedDeclaration":1945,"src":"5107:34:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":1361,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"5148:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1363,"indexExpression":{"id":1362,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"5154:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5148:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1364,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5164:9:7","memberName":"senderFee","nodeType":"MemberAccess","referencedDeclaration":1947,"src":"5148:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1356,"name":"SenderFeeTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"5080:20:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:99:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1366,"nodeType":"EmitStatement","src":"5075:104:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1369,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"5194:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1371,"indexExpression":{"id":1370,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"5200:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5194:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5210:11:7","memberName":"protocolFee","nodeType":"MemberAccess","referencedDeclaration":1949,"src":"5194:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5225:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5194:32:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1387,"nodeType":"IfStatement","src":"5190:147:7","trueBody":{"id":1386,"nodeType":"Block","src":"5228:109:7","statements":[{"expression":{"arguments":[{"id":1379,"name":"treasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"5286:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":1380,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"5303:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1382,"indexExpression":{"id":1381,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"5309:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5303:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1383,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5319:11:7","memberName":"protocolFee","nodeType":"MemberAccess","referencedDeclaration":1949,"src":"5303:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1376,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"5270:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1375,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"5263:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$995_$","typeString":"type(contract IERC20)"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5263:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$995","typeString":"contract IERC20"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5277:8:7","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":962,"src":"5263:22:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5263:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1385,"nodeType":"ExpressionStatement","src":"5263:68:7"}]}}]}},{"assignments":[1391],"declarations":[{"constant":false,"id":1391,"mutability":"mutable","name":"liquidityProviderAmount","nameLocation":"5389:23:7","nodeType":"VariableDeclaration","scope":1426,"src":"5381:31:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1390,"name":"uint256","nodeType":"ElementaryTypeName","src":"5381:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1401,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1392,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"5416:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1394,"indexExpression":{"id":1393,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"5422:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5416:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1395,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5432:6:7","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1959,"src":"5416:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1396,"name":"_settlePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"5441:14:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"5416:39:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1398,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5415:41:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1399,"name":"MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"5459:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5415:51:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5381:85:7"},{"expression":{"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1402,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"5470:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1404,"indexExpression":{"id":1403,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"5476:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5470:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5486:6:7","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1959,"src":"5470:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1406,"name":"liquidityProviderAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"5496:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5470:49:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1408,"nodeType":"ExpressionStatement","src":"5470:49:7"},{"expression":{"arguments":[{"id":1413,"name":"_liquidityProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"5546:18:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1414,"name":"liquidityProviderAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"5566:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1410,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"5530:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1409,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"5523:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$995_$","typeString":"type(contract IERC20)"}},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5523:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$995","typeString":"contract IERC20"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5537:8:7","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":962,"src":"5523:22:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5523:67:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1416,"nodeType":"ExpressionStatement","src":"5523:67:7"},{"eventCall":{"arguments":[{"id":1418,"name":"_splitOrderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"5637:13:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1419,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"5652:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1420,"name":"_liquidityProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"5662:18:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1421,"name":"_settlePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"5682:14:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1417,"name":"OrderSettled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"5624:12:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$_t_uint96_$returns$__$","typeString":"function (bytes32,bytes32,address,uint96)"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5624:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1423,"nodeType":"EmitStatement","src":"5619:78:7"},{"expression":{"hexValue":"74727565","id":1424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5709:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1287,"id":1425,"nodeType":"Return","src":"5702:11:7"}]},"documentation":{"id":1273,"nodeType":"StructuredDocumentation","src":"4186:34:7","text":"@dev See {settle-IGateway}. "},"functionSelector":"f22ee704","id":1427,"implemented":true,"kind":"function","modifiers":[{"id":1284,"kind":"modifierInvocation","modifierName":{"id":1283,"name":"onlyAggregator","nameLocations":["4350:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1068,"src":"4350:14:7"},"nodeType":"ModifierInvocation","src":"4350:14:7"}],"name":"settle","nameLocation":"4231:6:7","nodeType":"FunctionDefinition","parameters":{"id":1282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1275,"mutability":"mutable","name":"_splitOrderId","nameLocation":"4249:13:7","nodeType":"VariableDeclaration","scope":1427,"src":"4241:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1274,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4241:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1277,"mutability":"mutable","name":"_orderId","nameLocation":"4274:8:7","nodeType":"VariableDeclaration","scope":1427,"src":"4266:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1276,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4266:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1279,"mutability":"mutable","name":"_liquidityProvider","nameLocation":"4294:18:7","nodeType":"VariableDeclaration","scope":1427,"src":"4286:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1278,"name":"address","nodeType":"ElementaryTypeName","src":"4286:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1281,"mutability":"mutable","name":"_settlePercent","nameLocation":"4323:14:7","nodeType":"VariableDeclaration","scope":1427,"src":"4316:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1280,"name":"uint64","nodeType":"ElementaryTypeName","src":"4316:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4237:103:7"},"returnParameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1427,"src":"4374:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1285,"name":"bool","nodeType":"ElementaryTypeName","src":"4374:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4373:6:7"},"scope":1609,"src":"4222:1495:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2006],"body":{"id":1532,"nodeType":"Block","src":"5843:839:7","statements":[{"expression":{"arguments":[{"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5906:28:7","subExpression":{"expression":{"baseExpression":{"id":1440,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"5907:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1442,"indexExpression":{"id":1441,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"5913:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5907:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5923:11:7","memberName":"isFulfilled","nodeType":"MemberAccess","referencedDeclaration":1951,"src":"5907:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f7264657246756c66696c6c6564","id":1445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5936:16:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5","typeString":"literal_string \"OrderFulfilled\""},"value":"OrderFulfilled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5","typeString":"literal_string \"OrderFulfilled\""}],"id":1439,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5898:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1447,"nodeType":"ExpressionStatement","src":"5898:55:7"},{"expression":{"arguments":[{"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5965:27:7","subExpression":{"expression":{"baseExpression":{"id":1449,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"5966:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1451,"indexExpression":{"id":1450,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"5972:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5966:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1452,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5982:10:7","memberName":"isRefunded","nodeType":"MemberAccess","referencedDeclaration":1953,"src":"5966:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f72646572526566756e646564","id":1454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5994:15:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd","typeString":"literal_string \"OrderRefunded\""},"value":"OrderRefunded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd","typeString":"literal_string \"OrderRefunded\""}],"id":1448,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5957:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5957:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1456,"nodeType":"ExpressionStatement","src":"5957:53:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1458,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"6022:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1460,"indexExpression":{"id":1459,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"6028:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6022:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6038:11:7","memberName":"protocolFee","nodeType":"MemberAccess","referencedDeclaration":1949,"src":"6022:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1462,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"6053:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6022:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4665654578636565647350726f746f636f6c466565","id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6059:23:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de","typeString":"literal_string \"FeeExceedsProtocolFee\""},"value":"FeeExceedsProtocolFee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de","typeString":"literal_string \"FeeExceedsProtocolFee\""}],"id":1457,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6014:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6014:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1466,"nodeType":"ExpressionStatement","src":"6014:69:7"},{"expression":{"arguments":[{"id":1474,"name":"treasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"6168:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1475,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"6185:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"baseExpression":{"id":1468,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"6136:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1470,"indexExpression":{"id":1469,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"6142:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6136:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1471,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6152:5:7","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":1943,"src":"6136:21:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1467,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"6129:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$995_$","typeString":"type(contract IERC20)"}},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6129:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$995","typeString":"contract IERC20"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6159:8:7","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":962,"src":"6129:38:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6129:61:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1477,"nodeType":"ExpressionStatement","src":"6129:61:7"},{"expression":{"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1478,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"6219:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1480,"indexExpression":{"id":1479,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"6225:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6219:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1481,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6235:10:7","memberName":"isRefunded","nodeType":"MemberAccess","referencedDeclaration":1953,"src":"6219:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6248:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6219:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1484,"nodeType":"ExpressionStatement","src":"6219:33:7"},{"expression":{"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1485,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"6256:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1487,"indexExpression":{"id":1486,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"6262:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6256:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1488,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6272:10:7","memberName":"currentBPS","nodeType":"MemberAccess","referencedDeclaration":1957,"src":"6256:26:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6285:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6256:30:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1491,"nodeType":"ExpressionStatement","src":"6256:30:7"},{"assignments":[1493],"declarations":[{"constant":false,"id":1493,"mutability":"mutable","name":"refundAmount","nameLocation":"6333:12:7","nodeType":"VariableDeclaration","scope":1532,"src":"6325:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1492,"name":"uint256","nodeType":"ElementaryTypeName","src":"6325:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1505,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1494,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"6348:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1496,"indexExpression":{"id":1495,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"6354:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6348:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1497,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6364:6:7","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1959,"src":"6348:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"baseExpression":{"id":1498,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"6373:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1500,"indexExpression":{"id":1499,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"6379:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6373:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6389:11:7","memberName":"protocolFee","nodeType":"MemberAccess","referencedDeclaration":1949,"src":"6373:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6348:52:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1503,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"6403:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6348:59:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6325:82:7"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1513,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"6520:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1515,"indexExpression":{"id":1514,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"6526:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6520:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1516,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6536:13:7","memberName":"refundAddress","nodeType":"MemberAccess","referencedDeclaration":1955,"src":"6520:29:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1517,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"6554:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"baseExpression":{"id":1518,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"6569:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1520,"indexExpression":{"id":1519,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"6575:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6569:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1521,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6585:9:7","memberName":"senderFee","nodeType":"MemberAccess","referencedDeclaration":1947,"src":"6569:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6554:40:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"baseExpression":{"id":1507,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"6484:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1509,"indexExpression":{"id":1508,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"6490:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6484:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"id":1510,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6500:5:7","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":1943,"src":"6484:21:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1506,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"6477:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$995_$","typeString":"type(contract IERC20)"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6477:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$995","typeString":"contract IERC20"}},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6507:8:7","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":962,"src":"6477:38:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6477:121:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1524,"nodeType":"ExpressionStatement","src":"6477:121:7"},{"eventCall":{"arguments":[{"id":1526,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"6647:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1527,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"6653:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1525,"name":"OrderRefunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"6633:13:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (uint256,bytes32)"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6633:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1529,"nodeType":"EmitStatement","src":"6628:34:7"},{"expression":{"hexValue":"74727565","id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6674:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1438,"id":1531,"nodeType":"Return","src":"6667:11:7"}]},"documentation":{"id":1428,"nodeType":"StructuredDocumentation","src":"5720:34:7","text":"@dev See {refund-IGateway}. "},"functionSelector":"71eedb88","id":1533,"implemented":true,"kind":"function","modifiers":[{"id":1435,"kind":"modifierInvocation","modifierName":{"id":1434,"name":"onlyAggregator","nameLocations":["5813:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1068,"src":"5813:14:7"},"nodeType":"ModifierInvocation","src":"5813:14:7"}],"name":"refund","nameLocation":"5765:6:7","nodeType":"FunctionDefinition","parameters":{"id":1433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1430,"mutability":"mutable","name":"_fee","nameLocation":"5780:4:7","nodeType":"VariableDeclaration","scope":1533,"src":"5772:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1429,"name":"uint256","nodeType":"ElementaryTypeName","src":"5772:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1432,"mutability":"mutable","name":"_orderId","nameLocation":"5794:8:7","nodeType":"VariableDeclaration","scope":1533,"src":"5786:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1431,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5786:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5771:32:7"},"returnParameters":{"id":1438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1533,"src":"5837:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1436,"name":"bool","nodeType":"ElementaryTypeName","src":"5837:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5836:6:7"},"scope":1609,"src":"5756:926:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2023],"body":{"id":1546,"nodeType":"Block","src":"6992:30:7","statements":[{"expression":{"baseExpression":{"id":1542,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"7003:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Order_$1960_storage_$","typeString":"mapping(bytes32 => struct IGateway.Order storage ref)"}},"id":1544,"indexExpression":{"id":1543,"name":"_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"7009:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7003:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage","typeString":"struct IGateway.Order storage ref"}},"functionReturnParameters":1541,"id":1545,"nodeType":"Return","src":"6996:22:7"}]},"documentation":{"id":1534,"nodeType":"StructuredDocumentation","src":"6873:40:7","text":"@dev See {getOrderInfo-IGateway}. "},"functionSelector":"768c6ec0","id":1547,"implemented":true,"kind":"function","modifiers":[],"name":"getOrderInfo","nameLocation":"6924:12:7","nodeType":"FunctionDefinition","parameters":{"id":1537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1536,"mutability":"mutable","name":"_orderId","nameLocation":"6945:8:7","nodeType":"VariableDeclaration","scope":1547,"src":"6937:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1535,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6937:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6936:18:7"},"returnParameters":{"id":1541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1540,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1547,"src":"6978:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_memory_ptr","typeString":"struct IGateway.Order"},"typeName":{"id":1539,"nodeType":"UserDefinedTypeName","pathNode":{"id":1538,"name":"Order","nameLocations":["6978:5:7"],"nodeType":"IdentifierPath","referencedDeclaration":1960,"src":"6978:5:7"},"referencedDeclaration":1960,"src":"6978:5:7","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage_ptr","typeString":"struct IGateway.Order"}},"visibility":"internal"}],"src":"6977:14:7"},"scope":1609,"src":"6915:107:7","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2014],"body":{"id":1565,"nodeType":"Block","src":"7142:71:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1555,"name":"_isTokenSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"7150:17:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1557,"indexExpression":{"id":1556,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"7168:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7150:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7179:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7150:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1562,"nodeType":"IfStatement","src":"7146:47:7","trueBody":{"expression":{"hexValue":"74727565","id":1560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7189:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1554,"id":1561,"nodeType":"Return","src":"7182:11:7"}},{"expression":{"hexValue":"66616c7365","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7204:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1554,"id":1564,"nodeType":"Return","src":"7197:12:7"}]},"documentation":{"id":1548,"nodeType":"StructuredDocumentation","src":"7025:44:7","text":"@dev See {isTokenSupported-IGateway}. "},"functionSelector":"75151b63","id":1566,"implemented":true,"kind":"function","modifiers":[],"name":"isTokenSupported","nameLocation":"7080:16:7","nodeType":"FunctionDefinition","parameters":{"id":1551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1550,"mutability":"mutable","name":"_token","nameLocation":"7105:6:7","nodeType":"VariableDeclaration","scope":1566,"src":"7097:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1549,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7096:16:7"},"returnParameters":{"id":1554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1566,"src":"7136:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1552,"name":"bool","nodeType":"ElementaryTypeName","src":"7136:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7135:6:7"},"scope":1609,"src":"7071:142:7","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2040],"body":{"id":1579,"nodeType":"Block","src":"7397:49:7","statements":[{"expression":{"baseExpression":{"id":1575,"name":"supportedInstitutionsByCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"7408:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_InstitutionByCode_$2063_storage_$","typeString":"mapping(bytes32 => struct SharedStructs.InstitutionByCode storage ref)"}},"id":1577,"indexExpression":{"id":1576,"name":"_code","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"7436:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7408:34:7","typeDescriptions":{"typeIdentifier":"t_struct$_InstitutionByCode_$2063_storage","typeString":"struct SharedStructs.InstitutionByCode storage ref"}},"functionReturnParameters":1574,"id":1578,"nodeType":"Return","src":"7401:41:7"}]},"documentation":{"id":1567,"nodeType":"StructuredDocumentation","src":"7216:57:7","text":"@dev See {getSupportedInstitutionByCode-IGateway}. "},"functionSelector":"c2280103","id":1580,"implemented":true,"kind":"function","modifiers":[],"name":"getSupportedInstitutionByCode","nameLocation":"7284:29:7","nodeType":"FunctionDefinition","parameters":{"id":1570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1569,"mutability":"mutable","name":"_code","nameLocation":"7325:5:7","nodeType":"VariableDeclaration","scope":1580,"src":"7317:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1568,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7317:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7313:20:7"},"returnParameters":{"id":1574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1580,"src":"7357:38:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_InstitutionByCode_$2063_memory_ptr","typeString":"struct SharedStructs.InstitutionByCode"},"typeName":{"id":1572,"nodeType":"UserDefinedTypeName","pathNode":{"id":1571,"name":"SharedStructs.InstitutionByCode","nameLocations":["7357:13:7","7371:17:7"],"nodeType":"IdentifierPath","referencedDeclaration":2063,"src":"7357:31:7"},"referencedDeclaration":2063,"src":"7357:31:7","typeDescriptions":{"typeIdentifier":"t_struct$_InstitutionByCode_$2063_storage_ptr","typeString":"struct SharedStructs.InstitutionByCode"}},"visibility":"internal"}],"src":"7356:40:7"},"scope":1609,"src":"7275:171:7","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2050],"body":{"id":1594,"nodeType":"Block","src":"7620:47:7","statements":[{"expression":{"baseExpression":{"id":1590,"name":"supportedInstitutions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"7631:21:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct SharedStructs.Institution storage ref[] storage ref)"}},"id":1592,"indexExpression":{"id":1591,"name":"_currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"7653:9:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7631:32:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Institution_$2058_storage_$dyn_storage","typeString":"struct SharedStructs.Institution storage ref[] storage ref"}},"functionReturnParameters":1589,"id":1593,"nodeType":"Return","src":"7624:39:7"}]},"documentation":{"id":1581,"nodeType":"StructuredDocumentation","src":"7449:52:7","text":"@dev See {getSupportedInstitutions-IGateway}. "},"functionSelector":"02621338","id":1595,"implemented":true,"kind":"function","modifiers":[],"name":"getSupportedInstitutions","nameLocation":"7512:24:7","nodeType":"FunctionDefinition","parameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"mutability":"mutable","name":"_currency","nameLocation":"7548:9:7","nodeType":"VariableDeclaration","scope":1595,"src":"7540:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1582,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7540:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7536:24:7"},"returnParameters":{"id":1589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1595,"src":"7584:34:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr","typeString":"struct SharedStructs.Institution[]"},"typeName":{"baseType":{"id":1586,"nodeType":"UserDefinedTypeName","pathNode":{"id":1585,"name":"SharedStructs.Institution","nameLocations":["7584:13:7","7598:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":2058,"src":"7584:25:7"},"referencedDeclaration":2058,"src":"7584:25:7","typeDescriptions":{"typeIdentifier":"t_struct$_Institution_$2058_storage_ptr","typeString":"struct SharedStructs.Institution"}},"id":1587,"nodeType":"ArrayTypeName","src":"7584:27:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Institution_$2058_storage_$dyn_storage_ptr","typeString":"struct SharedStructs.Institution[]"}},"visibility":"internal"}],"src":"7583:36:7"},"scope":1609,"src":"7503:164:7","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2031],"body":{"id":1607,"nodeType":"Block","src":"7778:44:7","statements":[{"expression":{"components":[{"id":1603,"name":"protocolFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"7790:18:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1604,"name":"MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"7810:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1605,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7789:29:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint64_$_t_uint256_$","typeString":"tuple(uint64,uint256)"}},"functionReturnParameters":1602,"id":1606,"nodeType":"Return","src":"7782:36:7"}]},"documentation":{"id":1596,"nodeType":"StructuredDocumentation","src":"7670:41:7","text":"@dev See {getFeeDetails-IGateway}. "},"functionSelector":"b810c636","id":1608,"implemented":true,"kind":"function","modifiers":[],"name":"getFeeDetails","nameLocation":"7722:13:7","nodeType":"FunctionDefinition","parameters":{"id":1597,"nodeType":"ParameterList","parameters":[],"src":"7735:2:7"},"returnParameters":{"id":1602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1608,"src":"7761:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1598,"name":"uint64","nodeType":"ElementaryTypeName","src":"7761:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1608,"src":"7769:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1600,"name":"uint256","nodeType":"ElementaryTypeName","src":"7769:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7760:17:7"},"scope":1609,"src":"7713:109:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1610,"src":"451:7373:7","usedErrors":[]}],"src":"39:7786:7"},"id":7},"contracts/GatewaySettingManager.sol":{"ast":{"absolutePath":"contracts/GatewaySettingManager.sol","exportedSymbols":{"ContextUpgradeable":[917],"GatewaySettingManager":[1877],"Initializable":[408],"Ownable2StepUpgradeable":[106],"OwnableUpgradeable":[239],"SharedStructs":[2064]},"id":1878,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":1611,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"168:24:8"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol","id":1612,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1878,"sourceUnit":107,"src":"194:80:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/SharedStructs.sol","file":"./libraries/SharedStructs.sol","id":1614,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1878,"sourceUnit":2065,"src":"276:60:8","symbolAliases":[{"foreign":{"id":1613,"name":"SharedStructs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"284:13:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1615,"name":"Ownable2StepUpgradeable","nameLocations":["372:23:8"],"nodeType":"IdentifierPath","referencedDeclaration":106,"src":"372:23:8"},"id":1616,"nodeType":"InheritanceSpecifier","src":"372:23:8"}],"canonicalName":"GatewaySettingManager","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1877,"linearizedBaseContracts":[1877,106,239,917,408],"name":"GatewaySettingManager","nameLocation":"347:21:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1618,"mutability":"mutable","name":"MAX_BPS","nameLocation":"416:7:8","nodeType":"VariableDeclaration","scope":1877,"src":"399:24:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1617,"name":"uint256","nodeType":"ElementaryTypeName","src":"399:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1620,"mutability":"mutable","name":"protocolFeePercent","nameLocation":"442:18:8","nodeType":"VariableDeclaration","scope":1877,"src":"426:34:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1619,"name":"uint64","nodeType":"ElementaryTypeName","src":"426:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1622,"mutability":"mutable","name":"treasuryAddress","nameLocation":"480:15:8","nodeType":"VariableDeclaration","scope":1877,"src":"463:32:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1621,"name":"address","nodeType":"ElementaryTypeName","src":"463:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1624,"mutability":"mutable","name":"_aggregatorAddress","nameLocation":"515:18:8","nodeType":"VariableDeclaration","scope":1877,"src":"498:35:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1623,"name":"address","nodeType":"ElementaryTypeName","src":"498:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1628,"mutability":"mutable","name":"__gap","nameLocation":"663:5:8","nodeType":"VariableDeclaration","scope":1877,"src":"643:25:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1625,"name":"uint256","nodeType":"ElementaryTypeName","src":"643:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1627,"length":{"hexValue":"3530","id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"651:2:8","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"643:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"},{"constant":false,"id":1632,"mutability":"mutable","name":"_isTokenSupported","nameLocation":"709:17:8","nodeType":"VariableDeclaration","scope":1877,"src":"672:54:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1631,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1629,"name":"address","nodeType":"ElementaryTypeName","src":"680:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"672:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1630,"name":"uint256","nodeType":"ElementaryTypeName","src":"691:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":1638,"mutability":"mutable","name":"supportedInstitutions","nameLocation":"787:21:8","nodeType":"VariableDeclaration","scope":1877,"src":"730:78:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct SharedStructs.Institution[])"},"typeName":{"id":1637,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1633,"name":"bytes32","nodeType":"ElementaryTypeName","src":"738:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"730:47:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct SharedStructs.Institution[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":1635,"nodeType":"UserDefinedTypeName","pathNode":{"id":1634,"name":"SharedStructs.Institution","nameLocations":["749:13:8","763:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":2058,"src":"749:25:8"},"referencedDeclaration":2058,"src":"749:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_Institution_$2058_storage_ptr","typeString":"struct SharedStructs.Institution"}},"id":1636,"nodeType":"ArrayTypeName","src":"749:27:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Institution_$2058_storage_$dyn_storage_ptr","typeString":"struct SharedStructs.Institution[]"}}},"visibility":"internal"},{"constant":false,"id":1643,"mutability":"mutable","name":"supportedInstitutionsByCode","nameLocation":"872:27:8","nodeType":"VariableDeclaration","scope":1877,"src":"811:88:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_InstitutionByCode_$2063_storage_$","typeString":"mapping(bytes32 => struct SharedStructs.InstitutionByCode)"},"typeName":{"id":1642,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1639,"name":"bytes32","nodeType":"ElementaryTypeName","src":"819:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"811:51:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_InstitutionByCode_$2063_storage_$","typeString":"mapping(bytes32 => struct SharedStructs.InstitutionByCode)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1641,"nodeType":"UserDefinedTypeName","pathNode":{"id":1640,"name":"SharedStructs.InstitutionByCode","nameLocations":["830:13:8","844:17:8"],"nodeType":"IdentifierPath","referencedDeclaration":2063,"src":"830:31:8"},"referencedDeclaration":2063,"src":"830:31:8","typeDescriptions":{"typeIdentifier":"t_struct$_InstitutionByCode_$2063_storage_ptr","typeString":"struct SharedStructs.InstitutionByCode"}}},"visibility":"internal"},{"anonymous":false,"eventSelector":"cfa976492af7c14a916cc3a239f4c9c75bbd7f5f0e398beb41d892c7eeccae4c","id":1651,"name":"SettingManagerBool","nameLocation":"909:18:8","nodeType":"EventDefinition","parameters":{"id":1650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1645,"indexed":true,"mutability":"mutable","name":"what","nameLocation":"944:4:8","nodeType":"VariableDeclaration","scope":1651,"src":"928:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1644,"name":"bytes32","nodeType":"ElementaryTypeName","src":"928:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1647,"indexed":true,"mutability":"mutable","name":"value","nameLocation":"966:5:8","nodeType":"VariableDeclaration","scope":1651,"src":"950:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1646,"name":"address","nodeType":"ElementaryTypeName","src":"950:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1649,"indexed":false,"mutability":"mutable","name":"status","nameLocation":"981:6:8","nodeType":"VariableDeclaration","scope":1651,"src":"973:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1648,"name":"uint256","nodeType":"ElementaryTypeName","src":"973:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"927:61:8"},"src":"903:86:8"},{"anonymous":false,"eventSelector":"58f3a30ec15a8d3e09fa65f9ef10219bc7a9a99d872a4ed895c37c2e761ac2ac","id":1659,"name":"SupportedInstitutionsUpdated","nameLocation":"997:28:8","nodeType":"EventDefinition","parameters":{"id":1658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1653,"indexed":true,"mutability":"mutable","name":"currency","nameLocation":"1045:8:8","nodeType":"VariableDeclaration","scope":1659,"src":"1029:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1652,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1029:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1657,"indexed":false,"mutability":"mutable","name":"institutions","nameLocation":"1085:12:8","nodeType":"VariableDeclaration","scope":1659,"src":"1057:40:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr","typeString":"struct SharedStructs.Institution[]"},"typeName":{"baseType":{"id":1655,"nodeType":"UserDefinedTypeName","pathNode":{"id":1654,"name":"SharedStructs.Institution","nameLocations":["1057:13:8","1071:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":2058,"src":"1057:25:8"},"referencedDeclaration":2058,"src":"1057:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_Institution_$2058_storage_ptr","typeString":"struct SharedStructs.Institution"}},"id":1656,"nodeType":"ArrayTypeName","src":"1057:27:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Institution_$2058_storage_$dyn_storage_ptr","typeString":"struct SharedStructs.Institution[]"}},"visibility":"internal"}],"src":"1025:75:8"},"src":"991:110:8"},{"anonymous":false,"eventSelector":"1ce29a697a4765bd17d91df93ba75b250b629ecf030553ff1f6ab59f15ae6c7b","id":1663,"name":"ProtocolFeeUpdated","nameLocation":"1109:18:8","nodeType":"EventDefinition","parameters":{"id":1662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1661,"indexed":false,"mutability":"mutable","name":"protocolFee","nameLocation":"1135:11:8","nodeType":"VariableDeclaration","scope":1663,"src":"1128:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1660,"name":"uint64","nodeType":"ElementaryTypeName","src":"1128:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1127:20:8"},"src":"1103:45:8"},{"anonymous":false,"eventSelector":"bbc5b96e57cfecb3dbeeadf92e87f15e58e64fcd75cbe256dcc5d9ef2e51e8a4","id":1669,"name":"ProtocolAddressUpdated","nameLocation":"1156:22:8","nodeType":"EventDefinition","parameters":{"id":1668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1665,"indexed":true,"mutability":"mutable","name":"what","nameLocation":"1195:4:8","nodeType":"VariableDeclaration","scope":1669,"src":"1179:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1664,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1179:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1667,"indexed":true,"mutability":"mutable","name":"treasuryAddress","nameLocation":"1217:15:8","nodeType":"VariableDeclaration","scope":1669,"src":"1201:31:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1666,"name":"address","nodeType":"ElementaryTypeName","src":"1201:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1178:55:8"},"src":"1150:84:8"},{"anonymous":false,"eventSelector":"2e979f80fe4d43055c584cf4a8467c55875ea36728fc37176c05acd784eb7a73","id":1673,"name":"SetFeeRecipient","nameLocation":"1242:15:8","nodeType":"EventDefinition","parameters":{"id":1672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"indexed":true,"mutability":"mutable","name":"treasuryAddress","nameLocation":"1274:15:8","nodeType":"VariableDeclaration","scope":1673,"src":"1258:31:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1670,"name":"address","nodeType":"ElementaryTypeName","src":"1258:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1257:33:8"},"src":"1236:55:8"},{"body":{"id":1723,"nodeType":"Block","src":"1865:243:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"1877:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1894:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1886:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1687,"name":"address","nodeType":"ElementaryTypeName","src":"1886:7:8","typeDescriptions":{}}},"id":1690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1886:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1877:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476174657761793a207a65726f2061646472657373","id":1692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1898:23:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf","typeString":"literal_string \"Gateway: zero address\""},"value":"Gateway: zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf","typeString":"literal_string \"Gateway: zero address\""}],"id":1685,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1869:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1869:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1694,"nodeType":"ExpressionStatement","src":"1869:53:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1696,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"1934:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1944:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1934:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1699,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"1949:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":1700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1959:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1949:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1934:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476174657761793a20696e76616c696420737461747573","id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1962:25:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338","typeString":"literal_string \"Gateway: invalid status\""},"value":"Gateway: invalid status"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338","typeString":"literal_string \"Gateway: invalid status\""}],"id":1695,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1926:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1926:62:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1705,"nodeType":"ExpressionStatement","src":"1926:62:8"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1706,"name":"what","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"1996:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"746f6b656e","id":1707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2004:7:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9b9b0454cadcb5884dd3faa6ba975da4d2459aa3f11d31291a25a8358f84946d","typeString":"literal_string \"token\""},"value":"token"},"src":"1996:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1722,"nodeType":"IfStatement","src":"1992:113:8","trueBody":{"id":1721,"nodeType":"Block","src":"2013:92:8","statements":[{"expression":{"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1709,"name":"_isTokenSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"2018:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1711,"indexExpression":{"id":1710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"2036:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2018:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1712,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"2045:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2018:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1714,"nodeType":"ExpressionStatement","src":"2018:33:8"},{"eventCall":{"arguments":[{"id":1716,"name":"what","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"2080:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"2086:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1718,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"2093:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1715,"name":"SettingManagerBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"2061:18:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2061:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1720,"nodeType":"EmitStatement","src":"2056:44:8"}]}}]},"documentation":{"id":1674,"nodeType":"StructuredDocumentation","src":"1488:283:8","text":" @dev Sets the boolean value for a specific setting.\n @param what The setting to be updated.\n @param value The address or value associated with the setting.\n @param status The boolean value to be set.\n Requirements:\n - The value must not be a zero address."},"functionSelector":"cd992400","id":1724,"implemented":true,"kind":"function","modifiers":[{"id":1683,"kind":"modifierInvocation","modifierName":{"id":1682,"name":"onlyOwner","nameLocations":["1855:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"1855:9:8"},"nodeType":"ModifierInvocation","src":"1855:9:8"}],"name":"settingManagerBool","nameLocation":"1782:18:8","nodeType":"FunctionDefinition","parameters":{"id":1681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"what","nameLocation":"1809:4:8","nodeType":"VariableDeclaration","scope":1724,"src":"1801:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1675,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1801:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1678,"mutability":"mutable","name":"value","nameLocation":"1823:5:8","nodeType":"VariableDeclaration","scope":1724,"src":"1815:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1677,"name":"address","nodeType":"ElementaryTypeName","src":"1815:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1680,"mutability":"mutable","name":"status","nameLocation":"1838:6:8","nodeType":"VariableDeclaration","scope":1724,"src":"1830:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1679,"name":"uint256","nodeType":"ElementaryTypeName","src":"1830:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1800:45:8"},"returnParameters":{"id":1684,"nodeType":"ParameterList","parameters":[],"src":"1865:0:8"},"scope":1877,"src":"1773:335:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1786,"nodeType":"Block","src":"2450:412:8","statements":[{"expression":{"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2454:38:8","subExpression":{"baseExpression":{"id":1736,"name":"supportedInstitutions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"2461:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct SharedStructs.Institution storage ref[] storage ref)"}},"id":1738,"indexExpression":{"id":1737,"name":"currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"2483:8:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2461:31:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Institution_$2058_storage_$dyn_storage","typeString":"struct SharedStructs.Institution storage ref[] storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1740,"nodeType":"ExpressionStatement","src":"2454:38:8"},{"body":{"id":1777,"nodeType":"Block","src":"2536:243:8","statements":[{"expression":{"arguments":[{"baseExpression":{"id":1752,"name":"institutions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"2578:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr","typeString":"struct SharedStructs.Institution memory[] memory"}},"id":1754,"indexExpression":{"id":1753,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"2591:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2578:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_Institution_$2058_memory_ptr","typeString":"struct SharedStructs.Institution memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Institution_$2058_memory_ptr","typeString":"struct SharedStructs.Institution memory"}],"expression":{"baseExpression":{"id":1748,"name":"supportedInstitutions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"2541:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct SharedStructs.Institution storage ref[] storage ref)"}},"id":1750,"indexExpression":{"id":1749,"name":"currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"2563:8:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2541:31:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Institution_$2058_storage_$dyn_storage","typeString":"struct SharedStructs.Institution storage ref[] storage ref"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2573:4:8","memberName":"push","nodeType":"MemberAccess","src":"2541:36:8","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage_ptr_$_t_struct$_Institution_$2058_storage_$returns$__$attached_to$_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage_ptr_$","typeString":"function (struct SharedStructs.Institution storage ref[] storage pointer,struct SharedStructs.Institution storage ref)"}},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2541:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1756,"nodeType":"ExpressionStatement","src":"2541:53:8"},{"expression":{"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1757,"name":"supportedInstitutionsByCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"2599:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_InstitutionByCode_$2063_storage_$","typeString":"mapping(bytes32 => struct SharedStructs.InstitutionByCode storage ref)"}},"id":1762,"indexExpression":{"expression":{"baseExpression":{"id":1758,"name":"institutions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"2627:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr","typeString":"struct SharedStructs.Institution memory[] memory"}},"id":1760,"indexExpression":{"id":1759,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"2640:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2627:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_Institution_$2058_memory_ptr","typeString":"struct SharedStructs.Institution memory"}},"id":1761,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2643:4:8","memberName":"code","nodeType":"MemberAccess","referencedDeclaration":2055,"src":"2627:20:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2599:49:8","typeDescriptions":{"typeIdentifier":"t_struct$_InstitutionByCode_$2063_storage","typeString":"struct SharedStructs.InstitutionByCode storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"baseExpression":{"id":1765,"name":"institutions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"2695:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr","typeString":"struct SharedStructs.Institution memory[] memory"}},"id":1767,"indexExpression":{"id":1766,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"2708:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2695:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_Institution_$2058_memory_ptr","typeString":"struct SharedStructs.Institution memory"}},"id":1768,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2711:4:8","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":2057,"src":"2695:20:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1769,"name":"currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"2731:8:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1763,"name":"SharedStructs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"2651:13:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SharedStructs_$2064_$","typeString":"type(library SharedStructs)"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2665:17:8","memberName":"InstitutionByCode","nodeType":"MemberAccess","referencedDeclaration":2063,"src":"2651:31:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_InstitutionByCode_$2063_storage_ptr_$","typeString":"type(struct SharedStructs.InstitutionByCode storage pointer)"}},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2689:4:8","2721:8:8"],"names":["name","currency"],"nodeType":"FunctionCall","src":"2651:94:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InstitutionByCode_$2063_memory_ptr","typeString":"struct SharedStructs.InstitutionByCode memory"}},"src":"2599:146:8","typeDescriptions":{"typeIdentifier":"t_struct$_InstitutionByCode_$2063_storage","typeString":"struct SharedStructs.InstitutionByCode storage ref"}},"id":1772,"nodeType":"ExpressionStatement","src":"2599:146:8"},{"id":1776,"nodeType":"UncheckedBlock","src":"2750:25:8","statements":[{"expression":{"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2766:3:8","subExpression":{"id":1773,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"2768:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1775,"nodeType":"ExpressionStatement","src":"2766:3:8"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1744,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"2509:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1745,"name":"institutions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"2513:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr","typeString":"struct SharedStructs.Institution memory[] memory"}},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2526:6:8","memberName":"length","nodeType":"MemberAccess","src":"2513:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2509:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1778,"initializationExpression":{"assignments":[1742],"declarations":[{"constant":false,"id":1742,"mutability":"mutable","name":"i","nameLocation":"2506:1:8","nodeType":"VariableDeclaration","scope":1778,"src":"2501:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1741,"name":"uint","nodeType":"ElementaryTypeName","src":"2501:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1743,"nodeType":"VariableDeclarationStatement","src":"2501:6:8"},"nodeType":"ForStatement","src":"2496:283:8"},{"eventCall":{"arguments":[{"id":1780,"name":"currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"2816:8:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":1781,"name":"supportedInstitutions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"2826:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct SharedStructs.Institution storage ref[] storage ref)"}},"id":1783,"indexExpression":{"id":1782,"name":"currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"2848:8:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2826:31:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Institution_$2058_storage_$dyn_storage","typeString":"struct SharedStructs.Institution storage ref[] storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_array$_t_struct$_Institution_$2058_storage_$dyn_storage","typeString":"struct SharedStructs.Institution storage ref[] storage ref"}],"id":1779,"name":"SupportedInstitutionsUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"2787:28:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_$returns$__$","typeString":"function (bytes32,struct SharedStructs.Institution memory[] memory)"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2787:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1785,"nodeType":"EmitStatement","src":"2782:76:8"}]},"documentation":{"id":1725,"nodeType":"StructuredDocumentation","src":"2111:210:8","text":" @dev Sets the supported institutions for a specific currency.\n @param currency The currency for which the institutions are being set.\n @param institutions The array of institutions to be set."},"functionSelector":"32200882","id":1787,"implemented":true,"kind":"function","modifiers":[{"id":1734,"kind":"modifierInvocation","modifierName":{"id":1733,"name":"onlyOwner","nameLocations":["2440:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"2440:9:8"},"nodeType":"ModifierInvocation","src":"2440:9:8"}],"name":"setSupportedInstitutions","nameLocation":"2332:24:8","nodeType":"FunctionDefinition","parameters":{"id":1732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1727,"mutability":"mutable","name":"currency","nameLocation":"2368:8:8","nodeType":"VariableDeclaration","scope":1787,"src":"2360:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1726,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1731,"mutability":"mutable","name":"institutions","nameLocation":"2415:12:8","nodeType":"VariableDeclaration","scope":1787,"src":"2380:47:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr","typeString":"struct SharedStructs.Institution[]"},"typeName":{"baseType":{"id":1729,"nodeType":"UserDefinedTypeName","pathNode":{"id":1728,"name":"SharedStructs.Institution","nameLocations":["2380:13:8","2394:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":2058,"src":"2380:25:8"},"referencedDeclaration":2058,"src":"2380:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_Institution_$2058_storage_ptr","typeString":"struct SharedStructs.Institution"}},"id":1730,"nodeType":"ArrayTypeName","src":"2380:27:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Institution_$2058_storage_$dyn_storage_ptr","typeString":"struct SharedStructs.Institution[]"}},"visibility":"internal"}],"src":"2356:74:8"},"returnParameters":{"id":1735,"nodeType":"ParameterList","parameters":[],"src":"2450:0:8"},"scope":1877,"src":"2323:539:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1803,"nodeType":"Block","src":"3069:96:8","statements":[{"expression":{"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1795,"name":"protocolFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"3073:18:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1796,"name":"_protocolFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"3094:19:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"3073:40:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":1798,"nodeType":"ExpressionStatement","src":"3073:40:8"},{"eventCall":{"arguments":[{"id":1800,"name":"_protocolFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"3141:19:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1799,"name":"ProtocolFeeUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"3122:18:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3122:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1802,"nodeType":"EmitStatement","src":"3117:44:8"}]},"documentation":{"id":1788,"nodeType":"StructuredDocumentation","src":"2865:128:8","text":" @dev Updates the protocol fee percentage.\n @param _protocolFeePercent The new protocol fee percentage to be set."},"functionSelector":"47094e2e","id":1804,"implemented":true,"kind":"function","modifiers":[{"id":1793,"kind":"modifierInvocation","modifierName":{"id":1792,"name":"onlyOwner","nameLocations":["3059:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"3059:9:8"},"nodeType":"ModifierInvocation","src":"3059:9:8"}],"name":"updateProtocolFee","nameLocation":"3004:17:8","nodeType":"FunctionDefinition","parameters":{"id":1791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1790,"mutability":"mutable","name":"_protocolFeePercent","nameLocation":"3029:19:8","nodeType":"VariableDeclaration","scope":1804,"src":"3022:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1789,"name":"uint64","nodeType":"ElementaryTypeName","src":"3022:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3021:28:8"},"returnParameters":{"id":1794,"nodeType":"ParameterList","parameters":[],"src":"3069:0:8"},"scope":1877,"src":"2995:170:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1875,"nodeType":"Block","src":"3473:472:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"3485:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3502:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3494:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1816,"name":"address","nodeType":"ElementaryTypeName","src":"3494:7:8","typeDescriptions":{}}},"id":1819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3494:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3485:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476174657761793a207a65726f2061646472657373","id":1821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3506:23:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf","typeString":"literal_string \"Gateway: zero address\""},"value":"Gateway: zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf","typeString":"literal_string \"Gateway: zero address\""}],"id":1814,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3477:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3477:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1823,"nodeType":"ExpressionStatement","src":"3477:53:8"},{"assignments":[1825],"declarations":[{"constant":false,"id":1825,"mutability":"mutable","name":"updated","nameLocation":"3539:7:8","nodeType":"VariableDeclaration","scope":1875,"src":"3534:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1824,"name":"bool","nodeType":"ElementaryTypeName","src":"3534:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1826,"nodeType":"VariableDeclarationStatement","src":"3534:12:8"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1827,"name":"what","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"3554:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"7472656173757279","id":1828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3562:10:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_cbd818ad4dd6f1ff9338c2bb62480241424dd9a65f9f3284101a01cd099ad8ac","typeString":"literal_string \"treasury\""},"value":"treasury"},"src":"3554:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1846,"name":"what","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"3715:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"61676772656761746f72","id":1847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3723:12:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_e124d7cc79a19705865fa21b784ba187cd393559e960c0c071132cb60354d1a3","typeString":"literal_string \"aggregator\""},"value":"aggregator"},"src":"3715:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1865,"nodeType":"IfStatement","src":"3711:165:8","trueBody":{"id":1864,"nodeType":"Block","src":"3737:139:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1850,"name":"_aggregatorAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"3750:18:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"3772:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3750:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476174657761793a2061676772656761746f72206164647265737320616c726561647920736574","id":1853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3779:41:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4","typeString":"literal_string \"Gateway: aggregator address already set\""},"value":"Gateway: aggregator address already set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4","typeString":"literal_string \"Gateway: aggregator address already set\""}],"id":1849,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3742:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3742:79:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1855,"nodeType":"ExpressionStatement","src":"3742:79:8"},{"expression":{"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1856,"name":"_aggregatorAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"3826:18:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"3847:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3826:26:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1859,"nodeType":"ExpressionStatement","src":"3826:26:8"},{"expression":{"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1860,"name":"updated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"3857:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3867:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3857:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1863,"nodeType":"ExpressionStatement","src":"3857:14:8"}]}},"id":1866,"nodeType":"IfStatement","src":"3550:326:8","trueBody":{"id":1845,"nodeType":"Block","src":"3574:131:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1831,"name":"treasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"3587:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"3606:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3587:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476174657761793a207472656173757279206164647265737320616c726561647920736574","id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3613:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead","typeString":"literal_string \"Gateway: treasury address already set\""},"value":"Gateway: treasury address already set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead","typeString":"literal_string \"Gateway: treasury address already set\""}],"id":1830,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3579:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3579:74:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1836,"nodeType":"ExpressionStatement","src":"3579:74:8"},{"expression":{"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1837,"name":"treasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"3658:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"3676:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3658:23:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1840,"nodeType":"ExpressionStatement","src":"3658:23:8"},{"expression":{"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1841,"name":"updated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"3686:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3696:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3686:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1844,"nodeType":"ExpressionStatement","src":"3686:14:8"}]}},{"condition":{"id":1867,"name":"updated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"3883:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1874,"nodeType":"IfStatement","src":"3879:63:8","trueBody":{"id":1873,"nodeType":"Block","src":"3892:50:8","statements":[{"eventCall":{"arguments":[{"id":1869,"name":"what","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"3925:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"3931:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1868,"name":"ProtocolAddressUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"3902:22:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3902:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1872,"nodeType":"EmitStatement","src":"3897:40:8"}]}}]},"documentation":{"id":1805,"nodeType":"StructuredDocumentation","src":"3168:224:8","text":" @dev Updates a protocol address.\n @param what The address type to be updated (treasury or aggregator).\n @param value The new address to be set.\n Requirements:\n - The value must not be a zero address."},"functionSelector":"40ebc677","id":1876,"implemented":true,"kind":"function","modifiers":[{"id":1812,"kind":"modifierInvocation","modifierName":{"id":1811,"name":"onlyOwner","nameLocations":["3463:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"3463:9:8"},"nodeType":"ModifierInvocation","src":"3463:9:8"}],"name":"updateProtocolAddress","nameLocation":"3403:21:8","nodeType":"FunctionDefinition","parameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1807,"mutability":"mutable","name":"what","nameLocation":"3433:4:8","nodeType":"VariableDeclaration","scope":1876,"src":"3425:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1806,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3425:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1809,"mutability":"mutable","name":"value","nameLocation":"3447:5:8","nodeType":"VariableDeclaration","scope":1876,"src":"3439:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1808,"name":"address","nodeType":"ElementaryTypeName","src":"3439:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3424:29:8"},"returnParameters":{"id":1813,"nodeType":"ParameterList","parameters":[],"src":"3473:0:8"},"scope":1877,"src":"3394:551:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1878,"src":"338:3609:8","usedErrors":[]}],"src":"168:3780:8"},"id":8},"contracts/interfaces/IGateway.sol":{"ast":{"absolutePath":"contracts/interfaces/IGateway.sol","exportedSymbols":{"IERC20":[995],"IGateway":[2051],"SharedStructs":[2064]},"id":2052,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":1879,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"39:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1881,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2052,"sourceUnit":996,"src":"65:70:9","symbolAliases":[{"foreign":{"id":1880,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"73:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/libraries/SharedStructs.sol","file":"../libraries/SharedStructs.sol","id":1883,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2052,"sourceUnit":2065,"src":"137:61:9","symbolAliases":[{"foreign":{"id":1882,"name":"SharedStructs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"145:13:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IGateway","contractDependencies":[],"contractKind":"interface","documentation":{"id":1884,"nodeType":"StructuredDocumentation","src":"200:73:9","text":" @title IGateway\n @notice Interface for the Gateway contract."},"fullyImplemented":false,"id":2051,"linearizedBaseContracts":[2051],"name":"IGateway","nameLocation":"284:8:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1885,"nodeType":"StructuredDocumentation","src":"480:391:9","text":" @dev Emitted when a deposit is made.\n @param sender The address of the sender.\n @param token The address of the deposited token.\n @param amount The amount of the deposit.\n @param orderId The ID of the order.\n @param rate The rate at which the deposit is made.\n @param institutionCode The code of the institution.\n @param messageHash The hash of the message."},"eventSelector":"3bdd0d86e09a22d7ce596118bd3ca5ec73ea47533a465be37621e913ed2bf333","id":1903,"name":"OrderCreated","nameLocation":"879:12:9","nodeType":"EventDefinition","parameters":{"id":1902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1887,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"911:6:9","nodeType":"VariableDeclaration","scope":1903,"src":"895:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1886,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1889,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"937:5:9","nodeType":"VariableDeclaration","scope":1903,"src":"921:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1888,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1891,"indexed":true,"mutability":"mutable","name":"amount","nameLocation":"962:6:9","nodeType":"VariableDeclaration","scope":1903,"src":"946:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1890,"name":"uint256","nodeType":"ElementaryTypeName","src":"946:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1893,"indexed":false,"mutability":"mutable","name":"protocolFee","nameLocation":"980:11:9","nodeType":"VariableDeclaration","scope":1903,"src":"972:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1892,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1895,"indexed":false,"mutability":"mutable","name":"orderId","nameLocation":"1003:7:9","nodeType":"VariableDeclaration","scope":1903,"src":"995:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1894,"name":"bytes32","nodeType":"ElementaryTypeName","src":"995:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1897,"indexed":false,"mutability":"mutable","name":"rate","nameLocation":"1022:4:9","nodeType":"VariableDeclaration","scope":1903,"src":"1014:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1896,"name":"uint256","nodeType":"ElementaryTypeName","src":"1014:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1899,"indexed":false,"mutability":"mutable","name":"institutionCode","nameLocation":"1038:15:9","nodeType":"VariableDeclaration","scope":1903,"src":"1030:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1898,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1030:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1901,"indexed":false,"mutability":"mutable","name":"messageHash","nameLocation":"1064:11:9","nodeType":"VariableDeclaration","scope":1903,"src":"1057:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1900,"name":"string","nodeType":"ElementaryTypeName","src":"1057:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"891:187:9"},"src":"873:206:9"},{"anonymous":false,"documentation":{"id":1904,"nodeType":"StructuredDocumentation","src":"1082:303:9","text":" @dev Emitted when an aggregator settles a transaction.\n @param splitOrderId The ID of the split order.\n @param orderId The ID of the order.\n @param liquidityProvider The address of the liquidity provider.\n @param settlePercent The percentage at which the transaction is settled."},"eventSelector":"98ece21e01a01cbe1d1c0dad3b053c8fbd368f99be78be958fcf1d1d13fd249a","id":1914,"name":"OrderSettled","nameLocation":"1393:12:9","nodeType":"EventDefinition","parameters":{"id":1913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1906,"indexed":false,"mutability":"mutable","name":"splitOrderId","nameLocation":"1417:12:9","nodeType":"VariableDeclaration","scope":1914,"src":"1409:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1905,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1409:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1908,"indexed":true,"mutability":"mutable","name":"orderId","nameLocation":"1449:7:9","nodeType":"VariableDeclaration","scope":1914,"src":"1433:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1907,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1433:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1910,"indexed":true,"mutability":"mutable","name":"liquidityProvider","nameLocation":"1476:17:9","nodeType":"VariableDeclaration","scope":1914,"src":"1460:33:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1909,"name":"address","nodeType":"ElementaryTypeName","src":"1460:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1912,"indexed":false,"mutability":"mutable","name":"settlePercent","nameLocation":"1504:13:9","nodeType":"VariableDeclaration","scope":1914,"src":"1497:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1911,"name":"uint96","nodeType":"ElementaryTypeName","src":"1497:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"1405:115:9"},"src":"1387:134:9"},{"anonymous":false,"documentation":{"id":1915,"nodeType":"StructuredDocumentation","src":"1524:163:9","text":" @dev Emitted when an aggregator refunds a transaction.\n @param fee The fee deducted from the refund amount.\n @param orderId The ID of the order."},"eventSelector":"0736fe428e1747ca8d387c2e6fa1a31a0cde62d3a167c40a46ade59a3cdc828e","id":1921,"name":"OrderRefunded","nameLocation":"1695:13:9","nodeType":"EventDefinition","parameters":{"id":1920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1917,"indexed":false,"mutability":"mutable","name":"fee","nameLocation":"1717:3:9","nodeType":"VariableDeclaration","scope":1921,"src":"1709:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1916,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1919,"indexed":true,"mutability":"mutable","name":"orderId","nameLocation":"1738:7:9","nodeType":"VariableDeclaration","scope":1921,"src":"1722:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1918,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1722:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1708:38:9"},"src":"1689:58:9"},{"anonymous":false,"documentation":{"id":1922,"nodeType":"StructuredDocumentation","src":"1750:161:9","text":" @dev Emitted when the sender's fee is transferred.\n @param sender The address of the sender.\n @param amount The amount of the fee transferred."},"eventSelector":"44f6938ca4a10313aabb76f874cced61e35710a734a126e4afb34461bf8c2501","id":1928,"name":"SenderFeeTransferred","nameLocation":"1919:20:9","nodeType":"EventDefinition","parameters":{"id":1927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1924,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1956:6:9","nodeType":"VariableDeclaration","scope":1928,"src":"1940:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1923,"name":"address","nodeType":"ElementaryTypeName","src":"1940:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1926,"indexed":true,"mutability":"mutable","name":"amount","nameLocation":"1980:6:9","nodeType":"VariableDeclaration","scope":1928,"src":"1964:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1925,"name":"uint256","nodeType":"ElementaryTypeName","src":"1964:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1939:48:9"},"src":"1913:75:9"},{"canonicalName":"IGateway.TransactionMetadata","id":1939,"members":[{"constant":false,"id":1930,"mutability":"mutable","name":"identifier","nameLocation":"2554:10:9","nodeType":"VariableDeclaration","scope":1939,"src":"2547:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":1929,"name":"bytes8","nodeType":"ElementaryTypeName","src":"2547:6:9","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"visibility":"internal"},{"constant":false,"id":1932,"mutability":"mutable","name":"institution","nameLocation":"2575:11:9","nodeType":"VariableDeclaration","scope":1939,"src":"2568:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":1931,"name":"bytes8","nodeType":"ElementaryTypeName","src":"2568:6:9","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"visibility":"internal"},{"constant":false,"id":1934,"mutability":"mutable","name":"name","nameLocation":"2597:4:9","nodeType":"VariableDeclaration","scope":1939,"src":"2590:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":1933,"name":"bytes8","nodeType":"ElementaryTypeName","src":"2590:6:9","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"visibility":"internal"},{"constant":false,"id":1936,"mutability":"mutable","name":"currency","nameLocation":"2612:8:9","nodeType":"VariableDeclaration","scope":1939,"src":"2605:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":1935,"name":"bytes8","nodeType":"ElementaryTypeName","src":"2605:6:9","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"visibility":"internal"},{"constant":false,"id":1938,"mutability":"mutable","name":"liquidityProviderID","nameLocation":"2632:19:9","nodeType":"VariableDeclaration","scope":1939,"src":"2624:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"2624:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"TransactionMetadata","nameLocation":"2523:19:9","nodeType":"StructDefinition","scope":2051,"src":"2516:139:9","visibility":"public"},{"canonicalName":"IGateway.Order","id":1960,"members":[{"constant":false,"id":1941,"mutability":"mutable","name":"sender","nameLocation":"3277:6:9","nodeType":"VariableDeclaration","scope":1960,"src":"3269:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1940,"name":"address","nodeType":"ElementaryTypeName","src":"3269:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1943,"mutability":"mutable","name":"token","nameLocation":"3295:5:9","nodeType":"VariableDeclaration","scope":1960,"src":"3287:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1942,"name":"address","nodeType":"ElementaryTypeName","src":"3287:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1945,"mutability":"mutable","name":"senderFeeRecipient","nameLocation":"3312:18:9","nodeType":"VariableDeclaration","scope":1960,"src":"3304:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1944,"name":"address","nodeType":"ElementaryTypeName","src":"3304:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1947,"mutability":"mutable","name":"senderFee","nameLocation":"3342:9:9","nodeType":"VariableDeclaration","scope":1960,"src":"3334:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1946,"name":"uint256","nodeType":"ElementaryTypeName","src":"3334:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1949,"mutability":"mutable","name":"protocolFee","nameLocation":"3363:11:9","nodeType":"VariableDeclaration","scope":1960,"src":"3355:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1948,"name":"uint256","nodeType":"ElementaryTypeName","src":"3355:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1951,"mutability":"mutable","name":"isFulfilled","nameLocation":"3383:11:9","nodeType":"VariableDeclaration","scope":1960,"src":"3378:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1950,"name":"bool","nodeType":"ElementaryTypeName","src":"3378:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1953,"mutability":"mutable","name":"isRefunded","nameLocation":"3403:10:9","nodeType":"VariableDeclaration","scope":1960,"src":"3398:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1952,"name":"bool","nodeType":"ElementaryTypeName","src":"3398:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1955,"mutability":"mutable","name":"refundAddress","nameLocation":"3425:13:9","nodeType":"VariableDeclaration","scope":1960,"src":"3417:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1954,"name":"address","nodeType":"ElementaryTypeName","src":"3417:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1957,"mutability":"mutable","name":"currentBPS","nameLocation":"3449:10:9","nodeType":"VariableDeclaration","scope":1960,"src":"3442:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1956,"name":"uint96","nodeType":"ElementaryTypeName","src":"3442:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1959,"mutability":"mutable","name":"amount","nameLocation":"3471:6:9","nodeType":"VariableDeclaration","scope":1960,"src":"3463:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1958,"name":"uint256","nodeType":"ElementaryTypeName","src":"3463:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Order","nameLocation":"3259:5:9","nodeType":"StructDefinition","scope":2051,"src":"3252:229:9","visibility":"public"},{"documentation":{"id":1961,"nodeType":"StructuredDocumentation","src":"3676:1028:9","text":" @notice Locks the sender's amount of token into Gateway.\n @dev Requirements:\n - `msg.sender` must approve Gateway contract on `_token` of at least `amount` before function call.\n - `_token` must be an acceptable token. See {isTokenSupported}.\n - `amount` must be greater than minimum.\n - `_refundAddress` refund address must not be zero address.\n @param _token The address of the token.\n @param _amount The amount in the decimal of `_token` to be locked.\n @param _institutionCode The institution code of the sender.\n @param _rate The rate at which the sender intends to sell `_amount` of `_token`.\n @param _senderFeeRecipient The address that will receive `_senderFee` in `_token`.\n @param _senderFee The amount in the decimal of `_token` that will be paid to `_senderFeeRecipient`.\n @param _refundAddress The address that will receive `_amount` in `_token` when there is a need to refund.\n @param messageHash The hash of the message.\n @return _orderId The ID of the order."},"functionSelector":"d12ff20a","id":1982,"implemented":false,"kind":"function","modifiers":[],"name":"createOrder","nameLocation":"4715:11:9","nodeType":"FunctionDefinition","parameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1963,"mutability":"mutable","name":"_token","nameLocation":"4738:6:9","nodeType":"VariableDeclaration","scope":1982,"src":"4730:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1962,"name":"address","nodeType":"ElementaryTypeName","src":"4730:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1965,"mutability":"mutable","name":"_amount","nameLocation":"4756:7:9","nodeType":"VariableDeclaration","scope":1982,"src":"4748:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1964,"name":"uint256","nodeType":"ElementaryTypeName","src":"4748:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1967,"mutability":"mutable","name":"_institutionCode","nameLocation":"4775:16:9","nodeType":"VariableDeclaration","scope":1982,"src":"4767:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1966,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4767:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1969,"mutability":"mutable","name":"_rate","nameLocation":"4802:5:9","nodeType":"VariableDeclaration","scope":1982,"src":"4795:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1968,"name":"uint96","nodeType":"ElementaryTypeName","src":"4795:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1971,"mutability":"mutable","name":"_senderFeeRecipient","nameLocation":"4819:19:9","nodeType":"VariableDeclaration","scope":1982,"src":"4811:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1970,"name":"address","nodeType":"ElementaryTypeName","src":"4811:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1973,"mutability":"mutable","name":"_senderFee","nameLocation":"4850:10:9","nodeType":"VariableDeclaration","scope":1982,"src":"4842:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1972,"name":"uint256","nodeType":"ElementaryTypeName","src":"4842:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1975,"mutability":"mutable","name":"_refundAddress","nameLocation":"4872:14:9","nodeType":"VariableDeclaration","scope":1982,"src":"4864:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1974,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1977,"mutability":"mutable","name":"messageHash","nameLocation":"4906:11:9","nodeType":"VariableDeclaration","scope":1982,"src":"4890:27:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1976,"name":"string","nodeType":"ElementaryTypeName","src":"4890:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4726:194:9"},"returnParameters":{"id":1981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"_orderId","nameLocation":"4947:8:9","nodeType":"VariableDeclaration","scope":1982,"src":"4939:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1979,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4939:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4938:18:9"},"scope":2051,"src":"4706:251:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1983,"nodeType":"StructuredDocumentation","src":"4960:366:9","text":" @notice Settles a transaction and distributes rewards accordingly.\n @param _splitOrderId The ID of the split order.\n @param _orderId The ID of the transaction.\n @param _liquidityProvider The address of the liquidity provider.\n @param _settlePercent The rate at which the transaction is settled.\n @return bool the settlement is successful."},"functionSelector":"f22ee704","id":1996,"implemented":false,"kind":"function","modifiers":[],"name":"settle","nameLocation":"5337:6:9","nodeType":"FunctionDefinition","parameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1985,"mutability":"mutable","name":"_splitOrderId","nameLocation":"5355:13:9","nodeType":"VariableDeclaration","scope":1996,"src":"5347:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1984,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5347:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1987,"mutability":"mutable","name":"_orderId","nameLocation":"5380:8:9","nodeType":"VariableDeclaration","scope":1996,"src":"5372:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1986,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5372:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1989,"mutability":"mutable","name":"_liquidityProvider","nameLocation":"5400:18:9","nodeType":"VariableDeclaration","scope":1996,"src":"5392:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1988,"name":"address","nodeType":"ElementaryTypeName","src":"5392:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1991,"mutability":"mutable","name":"_settlePercent","nameLocation":"5429:14:9","nodeType":"VariableDeclaration","scope":1996,"src":"5422:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1990,"name":"uint64","nodeType":"ElementaryTypeName","src":"5422:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"5343:103:9"},"returnParameters":{"id":1995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1996,"src":"5465:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1993,"name":"bool","nodeType":"ElementaryTypeName","src":"5465:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5464:6:9"},"scope":2051,"src":"5328:143:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1997,"nodeType":"StructuredDocumentation","src":"5474:299:9","text":" @notice Refunds to the specified refundable address.\n @dev Requirements:\n - Only aggregators can call this function.\n @param _fee The amount to be deducted from the amount to be refunded.\n @param _orderId The ID of the transaction.\n @return bool the refund is successful."},"functionSelector":"71eedb88","id":2006,"implemented":false,"kind":"function","modifiers":[],"name":"refund","nameLocation":"5784:6:9","nodeType":"FunctionDefinition","parameters":{"id":2002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1999,"mutability":"mutable","name":"_fee","nameLocation":"5799:4:9","nodeType":"VariableDeclaration","scope":2006,"src":"5791:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1998,"name":"uint256","nodeType":"ElementaryTypeName","src":"5791:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2001,"mutability":"mutable","name":"_orderId","nameLocation":"5813:8:9","nodeType":"VariableDeclaration","scope":2006,"src":"5805:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2000,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5805:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5790:32:9"},"returnParameters":{"id":2005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2006,"src":"5841:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2003,"name":"bool","nodeType":"ElementaryTypeName","src":"5841:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5840:6:9"},"scope":2051,"src":"5775:72:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2007,"nodeType":"StructuredDocumentation","src":"5850:157:9","text":" @notice Checks if a token is supported by Gateway.\n @param _token The address of the token to check.\n @return bool the token is supported."},"functionSelector":"75151b63","id":2014,"implemented":false,"kind":"function","modifiers":[],"name":"isTokenSupported","nameLocation":"6018:16:9","nodeType":"FunctionDefinition","parameters":{"id":2010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2009,"mutability":"mutable","name":"_token","nameLocation":"6043:6:9","nodeType":"VariableDeclaration","scope":2014,"src":"6035:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2008,"name":"address","nodeType":"ElementaryTypeName","src":"6035:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6034:16:9"},"returnParameters":{"id":2013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2014,"src":"6074:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2011,"name":"bool","nodeType":"ElementaryTypeName","src":"6074:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6073:6:9"},"scope":2051,"src":"6009:71:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2015,"nodeType":"StructuredDocumentation","src":"6083:128:9","text":" @notice Gets the details of an order.\n @param _orderId The ID of the order.\n @return Order The order details."},"functionSelector":"768c6ec0","id":2023,"implemented":false,"kind":"function","modifiers":[],"name":"getOrderInfo","nameLocation":"6222:12:9","nodeType":"FunctionDefinition","parameters":{"id":2018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2017,"mutability":"mutable","name":"_orderId","nameLocation":"6243:8:9","nodeType":"VariableDeclaration","scope":2023,"src":"6235:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2016,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6235:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6234:18:9"},"returnParameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2023,"src":"6276:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_memory_ptr","typeString":"struct IGateway.Order"},"typeName":{"id":2020,"nodeType":"UserDefinedTypeName","pathNode":{"id":2019,"name":"Order","nameLocations":["6276:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":1960,"src":"6276:5:9"},"referencedDeclaration":1960,"src":"6276:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$1960_storage_ptr","typeString":"struct IGateway.Order"}},"visibility":"internal"}],"src":"6275:14:9"},"scope":2051,"src":"6213:77:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2024,"nodeType":"StructuredDocumentation","src":"6293:154:9","text":" @notice Gets the fee details of Gateway.\n @return protocolReward The protocol reward amount.\n @return max_bps The maximum basis points."},"functionSelector":"b810c636","id":2031,"implemented":false,"kind":"function","modifiers":[],"name":"getFeeDetails","nameLocation":"6458:13:9","nodeType":"FunctionDefinition","parameters":{"id":2025,"nodeType":"ParameterList","parameters":[],"src":"6471:2:9"},"returnParameters":{"id":2030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2027,"mutability":"mutable","name":"protocolReward","nameLocation":"6504:14:9","nodeType":"VariableDeclaration","scope":2031,"src":"6497:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2026,"name":"uint64","nodeType":"ElementaryTypeName","src":"6497:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2029,"mutability":"mutable","name":"max_bps","nameLocation":"6528:7:9","nodeType":"VariableDeclaration","scope":2031,"src":"6520:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2028,"name":"uint256","nodeType":"ElementaryTypeName","src":"6520:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6496:40:9"},"scope":2051,"src":"6449:88:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2032,"nodeType":"StructuredDocumentation","src":"6540:167:9","text":" @notice Gets the details of a supported institution by code.\n @param _code The institution code.\n @return InstitutionByCode The institution details."},"functionSelector":"c2280103","id":2040,"implemented":false,"kind":"function","modifiers":[],"name":"getSupportedInstitutionByCode","nameLocation":"6718:29:9","nodeType":"FunctionDefinition","parameters":{"id":2035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2034,"mutability":"mutable","name":"_code","nameLocation":"6759:5:9","nodeType":"VariableDeclaration","scope":2040,"src":"6751:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2033,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6751:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6747:20:9"},"returnParameters":{"id":2039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2040,"src":"6791:38:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_InstitutionByCode_$2063_memory_ptr","typeString":"struct SharedStructs.InstitutionByCode"},"typeName":{"id":2037,"nodeType":"UserDefinedTypeName","pathNode":{"id":2036,"name":"SharedStructs.InstitutionByCode","nameLocations":["6791:13:9","6805:17:9"],"nodeType":"IdentifierPath","referencedDeclaration":2063,"src":"6791:31:9"},"referencedDeclaration":2063,"src":"6791:31:9","typeDescriptions":{"typeIdentifier":"t_struct$_InstitutionByCode_$2063_storage_ptr","typeString":"struct SharedStructs.InstitutionByCode"}},"visibility":"internal"}],"src":"6790:40:9"},"scope":2051,"src":"6709:122:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2041,"nodeType":"StructuredDocumentation","src":"6834:167:9","text":" @notice Gets the details of supported institutions by currency.\n @param _currency The currency code.\n @return Institutions An array of institutions."},"functionSelector":"02621338","id":2050,"implemented":false,"kind":"function","modifiers":[],"name":"getSupportedInstitutions","nameLocation":"7012:24:9","nodeType":"FunctionDefinition","parameters":{"id":2044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2043,"mutability":"mutable","name":"_currency","nameLocation":"7048:9:9","nodeType":"VariableDeclaration","scope":2050,"src":"7040:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2042,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7040:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7036:24:9"},"returnParameters":{"id":2049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2050,"src":"7084:34:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr","typeString":"struct SharedStructs.Institution[]"},"typeName":{"baseType":{"id":2046,"nodeType":"UserDefinedTypeName","pathNode":{"id":2045,"name":"SharedStructs.Institution","nameLocations":["7084:13:9","7098:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":2058,"src":"7084:25:9"},"referencedDeclaration":2058,"src":"7084:25:9","typeDescriptions":{"typeIdentifier":"t_struct$_Institution_$2058_storage_ptr","typeString":"struct SharedStructs.Institution"}},"id":2047,"nodeType":"ArrayTypeName","src":"7084:27:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Institution_$2058_storage_$dyn_storage_ptr","typeString":"struct SharedStructs.Institution[]"}},"visibility":"internal"}],"src":"7083:36:9"},"scope":2051,"src":"7003:117:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2052,"src":"274:6848:9","usedErrors":[]}],"src":"39:7084:9"},"id":9},"contracts/libraries/SharedStructs.sol":{"ast":{"absolutePath":"contracts/libraries/SharedStructs.sol","exportedSymbols":{"SharedStructs":[2064]},"id":2065,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":2053,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"39:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"SharedStructs","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":2064,"linearizedBaseContracts":[2064],"name":"SharedStructs","nameLocation":"73:13:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"SharedStructs.Institution","id":2058,"members":[{"constant":false,"id":2055,"mutability":"mutable","name":"code","nameLocation":"290:4:10","nodeType":"VariableDeclaration","scope":2058,"src":"282:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"282:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2057,"mutability":"mutable","name":"name","nameLocation":"312:4:10","nodeType":"VariableDeclaration","scope":2058,"src":"304:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2056,"name":"bytes32","nodeType":"ElementaryTypeName","src":"304:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Institution","nameLocation":"260:11:10","nodeType":"StructDefinition","scope":2064,"src":"253:70:10","visibility":"public"},{"canonicalName":"SharedStructs.InstitutionByCode","id":2063,"members":[{"constant":false,"id":2060,"mutability":"mutable","name":"name","nameLocation":"548:4:10","nodeType":"VariableDeclaration","scope":2063,"src":"540:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2059,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2062,"mutability":"mutable","name":"currency","nameLocation":"570:8:10","nodeType":"VariableDeclaration","scope":2063,"src":"562:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"562:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"InstitutionByCode","nameLocation":"512:17:10","nodeType":"StructDefinition","scope":2064,"src":"505:80:10","visibility":"public"}],"scope":2065,"src":"65:522:10","usedErrors":[]}],"src":"39:548:10"},"id":10}},"contracts":{"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol":{"Ownable2StepUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"acceptOwnership()":{"details":"The new owner accepts the ownership transfer."},"owner()":{"details":"Returns the address of the current owner."},"pendingOwner()":{"details":"Returns the address of the pending owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","pendingOwner()":"e30c3978","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":\"Ownable2StepUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable2Step.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./OwnableUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership} and {acceptOwnership}.\\n *\\n * This module is used through inheritance. It will make available all functions\\n * from parent (Ownable).\\n */\\nabstract contract Ownable2StepUpgradeable is Initializable, OwnableUpgradeable {\\n    address private _pendingOwner;\\n\\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\\n\\n    function __Ownable2Step_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable2Step_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Returns the address of the pending owner.\\n     */\\n    function pendingOwner() public view virtual returns (address) {\\n        return _pendingOwner;\\n    }\\n\\n    /**\\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\\n        _pendingOwner = newOwner;\\n        emit OwnershipTransferStarted(owner(), newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual override {\\n        delete _pendingOwner;\\n        super._transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev The new owner accepts the ownership transfer.\\n     */\\n    function acceptOwnership() public virtual {\\n        address sender = _msgSender();\\n        require(pendingOwner() == sender, \\\"Ownable2Step: caller is not the new owner\\\");\\n        _transferOwnership(sender);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x9140dabc466abab21b48b72dbda26736b1183a310d0e677d3719d201df026510\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":246,"contract":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":249,"contract":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":916,"contract":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":118,"contract":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":238,"contract":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":11,"contract":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable","label":"_pendingOwner","offset":0,"slot":"101","type":"t_address"},{"astId":105,"contract":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":246,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":249,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":916,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":118,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":238,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"_initialized":{"custom:oz-retyped-from":"bool","details":"Indicates that the contract has been initialized."},"_initializing":{"details":"Indicates that the contract is in the process of being initialized."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":246,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":249,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"paused()":{"details":"Returns true if the contract is paused, and false otherwise."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal onlyInitializing {\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal onlyInitializing {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":246,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":249,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":916,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":430,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_paused","offset":0,"slot":"51","type":"t_bool"},{"astId":535,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220df70283ff728a1a88debad8b56cd6b31b858a143aff601e8f42a16699317e70d64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF PUSH17 0x283FF728A1A88DEBAD8B56CD6B31B858A1 NUMBER 0xAF 0xF6 ADD 0xE8 DELEGATECALL 0x2A AND PUSH10 0x9317E70D64736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"194:9180:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220df70283ff728a1a88debad8b56cd6b31b858a143aff601e8f42a16699317e70d64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF PUSH17 0x283FF728A1A88DEBAD8B56CD6B31B858A1 NUMBER 0xAF 0xF6 ADD 0xE8 DELEGATECALL 0x2A AND PUSH10 0x9317E70D64736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"194:9180:4:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":246,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":249,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":916,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Gateway.sol":{"Gateway":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"protocolFee","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"rate","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"institutionCode","type":"bytes32"},{"indexed":false,"internalType":"string","name":"messageHash","type":"string"}],"name":"OrderCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"fee","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"}],"name":"OrderRefunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"splitOrderId","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"liquidityProvider","type":"address"},{"indexed":false,"internalType":"uint96","name":"settlePercent","type":"uint96"}],"name":"OrderSettled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"what","type":"bytes32"},{"indexed":true,"internalType":"address","name":"treasuryAddress","type":"address"}],"name":"ProtocolAddressUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"protocolFee","type":"uint64"}],"name":"ProtocolFeeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"SenderFeeTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"treasuryAddress","type":"address"}],"name":"SetFeeRecipient","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"what","type":"bytes32"},{"indexed":true,"internalType":"address","name":"value","type":"address"},{"indexed":false,"internalType":"uint256","name":"status","type":"uint256"}],"name":"SettingManagerBool","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"currency","type":"bytes32"},{"components":[{"internalType":"bytes32","name":"code","type":"bytes32"},{"internalType":"bytes32","name":"name","type":"bytes32"}],"indexed":false,"internalType":"struct SharedStructs.Institution[]","name":"institutions","type":"tuple[]"}],"name":"SupportedInstitutionsUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes32","name":"_institutionCode","type":"bytes32"},{"internalType":"uint96","name":"_rate","type":"uint96"},{"internalType":"address","name":"_senderFeeRecipient","type":"address"},{"internalType":"uint256","name":"_senderFee","type":"uint256"},{"internalType":"address","name":"_refundAddress","type":"address"},{"internalType":"string","name":"messageHash","type":"string"}],"name":"createOrder","outputs":[{"internalType":"bytes32","name":"orderId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getFeeDetails","outputs":[{"internalType":"uint64","name":"","type":"uint64"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_orderId","type":"bytes32"}],"name":"getOrderInfo","outputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"senderFeeRecipient","type":"address"},{"internalType":"uint256","name":"senderFee","type":"uint256"},{"internalType":"uint256","name":"protocolFee","type":"uint256"},{"internalType":"bool","name":"isFulfilled","type":"bool"},{"internalType":"bool","name":"isRefunded","type":"bool"},{"internalType":"address","name":"refundAddress","type":"address"},{"internalType":"uint96","name":"currentBPS","type":"uint96"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IGateway.Order","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_code","type":"bytes32"}],"name":"getSupportedInstitutionByCode","outputs":[{"components":[{"internalType":"bytes32","name":"name","type":"bytes32"},{"internalType":"bytes32","name":"currency","type":"bytes32"}],"internalType":"struct SharedStructs.InstitutionByCode","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_currency","type":"bytes32"}],"name":"getSupportedInstitutions","outputs":[{"components":[{"internalType":"bytes32","name":"code","type":"bytes32"},{"internalType":"bytes32","name":"name","type":"bytes32"}],"internalType":"struct SharedStructs.Institution[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"isTokenSupported","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_fee","type":"uint256"},{"internalType":"bytes32","name":"_orderId","type":"bytes32"}],"name":"refund","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"currency","type":"bytes32"},{"components":[{"internalType":"bytes32","name":"code","type":"bytes32"},{"internalType":"bytes32","name":"name","type":"bytes32"}],"internalType":"struct SharedStructs.Institution[]","name":"institutions","type":"tuple[]"}],"name":"setSupportedInstitutions","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"address","name":"value","type":"address"},{"internalType":"uint256","name":"status","type":"uint256"}],"name":"settingManagerBool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_splitOrderId","type":"bytes32"},{"internalType":"bytes32","name":"_orderId","type":"bytes32"},{"internalType":"address","name":"_liquidityProvider","type":"address"},{"internalType":"uint64","name":"_settlePercent","type":"uint64"}],"name":"settle","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"address","name":"value","type":"address"}],"name":"updateProtocolAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_protocolFeePercent","type":"uint64"}],"name":"updateProtocolFee","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."},"OrderCreated(address,address,uint256,uint256,bytes32,uint256,bytes32,string)":{"details":"Emitted when a deposit is made.","params":{"amount":"The amount of the deposit.","institutionCode":"The code of the institution.","messageHash":"The hash of the message.","orderId":"The ID of the order.","rate":"The rate at which the deposit is made.","sender":"The address of the sender.","token":"The address of the deposited token."}},"OrderRefunded(uint256,bytes32)":{"details":"Emitted when an aggregator refunds a transaction.","params":{"fee":"The fee deducted from the refund amount.","orderId":"The ID of the order."}},"OrderSettled(bytes32,bytes32,address,uint96)":{"details":"Emitted when an aggregator settles a transaction.","params":{"liquidityProvider":"The address of the liquidity provider.","orderId":"The ID of the order.","settlePercent":"The percentage at which the transaction is settled.","splitOrderId":"The ID of the split order."}},"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"SenderFeeTransferred(address,uint256)":{"details":"Emitted when the sender's fee is transferred.","params":{"amount":"The amount of the fee transferred.","sender":"The address of the sender."}},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"acceptOwnership()":{"details":"The new owner accepts the ownership transfer."},"constructor":{"custom:oz-upgrades-unsafe-allow":"constructor"},"createOrder(address,uint256,bytes32,uint96,address,uint256,address,string)":{"details":"See {createOrder-IGateway}. "},"getFeeDetails()":{"details":"See {getFeeDetails-IGateway}. "},"getOrderInfo(bytes32)":{"details":"See {getOrderInfo-IGateway}. "},"getSupportedInstitutionByCode(bytes32)":{"details":"See {getSupportedInstitutionByCode-IGateway}. "},"getSupportedInstitutions(bytes32)":{"details":"See {getSupportedInstitutions-IGateway}. "},"initialize()":{"details":"Initialize function."},"isTokenSupported(address)":{"details":"See {isTokenSupported-IGateway}. "},"owner()":{"details":"Returns the address of the current owner."},"pause()":{"details":"Pause the contract."},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"pendingOwner()":{"details":"Returns the address of the pending owner."},"refund(uint256,bytes32)":{"details":"See {refund-IGateway}. "},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setSupportedInstitutions(bytes32,(bytes32,bytes32)[])":{"details":"Sets the supported institutions for a specific currency.","params":{"currency":"The currency for which the institutions are being set.","institutions":"The array of institutions to be set."}},"settingManagerBool(bytes32,address,uint256)":{"details":"Sets the boolean value for a specific setting.","params":{"status":"The boolean value to be set. Requirements: - The value must not be a zero address.","value":"The address or value associated with the setting.","what":"The setting to be updated."}},"settle(bytes32,bytes32,address,uint64)":{"details":"See {settle-IGateway}. "},"transferOwnership(address)":{"details":"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."},"unpause()":{"details":"Unpause the contract."},"updateProtocolAddress(bytes32,address)":{"details":"Updates a protocol address.","params":{"value":"The new address to be set. Requirements: - The value must not be a zero address.","what":"The address type to be updated (treasury or aggregator)."}},"updateProtocolFee(uint64)":{"details":"Updates the protocol fee percentage.","params":{"_protocolFeePercent":"The new protocol fee percentage to be set."}}},"title":"Gateway","version":1},"evm":{"bytecode":{"functionDebugData":{"@_1038":{"entryPoint":null,"id":1038,"parameterSlots":0,"returnSlots":0},"@_disableInitializers_389":{"entryPoint":40,"id":389,"parameterSlots":0,"returnSlots":0},"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack":{"entryPoint":334,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":420,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":373,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":437,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":238,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":407,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a":{"entryPoint":255,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1638:11","statements":[{"body":{"nodeType":"YulBlock","src":"103:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"120:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"125:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"113:6:11"},"nodeType":"YulFunctionCall","src":"113:19:11"},"nodeType":"YulExpressionStatement","src":"113:19:11"},{"nodeType":"YulAssignment","src":"141:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"160:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"165:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"156:3:11"},"nodeType":"YulFunctionCall","src":"156:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"141:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"75:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"91:11:11","type":""}],"src":"7:169:11"},{"body":{"nodeType":"YulBlock","src":"288:120:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"310:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"318:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"306:3:11"},"nodeType":"YulFunctionCall","src":"306:14:11"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469","kind":"string","nodeType":"YulLiteral","src":"322:34:11","type":"","value":"Initializable: contract is initi"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"299:6:11"},"nodeType":"YulFunctionCall","src":"299:58:11"},"nodeType":"YulExpressionStatement","src":"299:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"378:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"386:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"374:3:11"},"nodeType":"YulFunctionCall","src":"374:15:11"},{"hexValue":"616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"391:9:11","type":"","value":"alizing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"367:6:11"},"nodeType":"YulFunctionCall","src":"367:34:11"},"nodeType":"YulExpressionStatement","src":"367:34:11"}]},"name":"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"280:6:11","type":""}],"src":"182:226:11"},{"body":{"nodeType":"YulBlock","src":"560:220:11","statements":[{"nodeType":"YulAssignment","src":"570:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"636:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"641:2:11","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"577:58:11"},"nodeType":"YulFunctionCall","src":"577:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"570:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"742:3:11"}],"functionName":{"name":"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","nodeType":"YulIdentifier","src":"653:88:11"},"nodeType":"YulFunctionCall","src":"653:93:11"},"nodeType":"YulExpressionStatement","src":"653:93:11"},{"nodeType":"YulAssignment","src":"755:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"766:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"771:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"762:3:11"},"nodeType":"YulFunctionCall","src":"762:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"755:3:11"}]}]},"name":"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"548:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"556:3:11","type":""}],"src":"414:366:11"},{"body":{"nodeType":"YulBlock","src":"957:248:11","statements":[{"nodeType":"YulAssignment","src":"967:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"979:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"990:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"975:3:11"},"nodeType":"YulFunctionCall","src":"975:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"967:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1014:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1025:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1010:3:11"},"nodeType":"YulFunctionCall","src":"1010:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1033:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1039:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1029:3:11"},"nodeType":"YulFunctionCall","src":"1029:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1003:6:11"},"nodeType":"YulFunctionCall","src":"1003:47:11"},"nodeType":"YulExpressionStatement","src":"1003:47:11"},{"nodeType":"YulAssignment","src":"1059:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1193:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1067:124:11"},"nodeType":"YulFunctionCall","src":"1067:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1059:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"937:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"952:4:11","type":""}],"src":"786:419:11"},{"body":{"nodeType":"YulBlock","src":"1254:43:11","statements":[{"nodeType":"YulAssignment","src":"1264:27:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1279:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"1286:4:11","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1275:3:11"},"nodeType":"YulFunctionCall","src":"1275:16:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1264:7:11"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1236:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1246:7:11","type":""}],"src":"1211:86:11"},{"body":{"nodeType":"YulBlock","src":"1364:51:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1381:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1402:5:11"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"1386:15:11"},"nodeType":"YulFunctionCall","src":"1386:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1374:6:11"},"nodeType":"YulFunctionCall","src":"1374:35:11"},"nodeType":"YulExpressionStatement","src":"1374:35:11"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1352:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1359:3:11","type":""}],"src":"1303:112:11"},{"body":{"nodeType":"YulBlock","src":"1515:120:11","statements":[{"nodeType":"YulAssignment","src":"1525:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1537:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1548:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1533:3:11"},"nodeType":"YulFunctionCall","src":"1533:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1525:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1601:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1614:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1625:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1610:3:11"},"nodeType":"YulFunctionCall","src":"1610:17:11"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"1561:39:11"},"nodeType":"YulFunctionCall","src":"1561:67:11"},"nodeType":"YulExpressionStatement","src":"1561:67:11"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1487:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1499:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1510:4:11","type":""}],"src":"1421:214:11"}]},"contents":"{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is initi\")\n\n        mstore(add(memPtr, 32), \"alizing\")\n\n    }\n\n    function abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50620000226200002860201b60201c565b620001d2565b600060019054906101000a900460ff16156200007b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000729062000175565b60405180910390fd5b60ff801660008054906101000a900460ff1660ff1614620000ec5760ff6000806101000a81548160ff021916908360ff1602179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860ff604051620000e39190620001b5565b60405180910390a15b565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320696e69746960008201527f616c697a696e6700000000000000000000000000000000000000000000000000602082015250565b60006200015d602783620000ee565b91506200016a82620000ff565b604082019050919050565b6000602082019050818103600083015262000190816200014e565b9050919050565b600060ff82169050919050565b620001af8162000197565b82525050565b6000602082019050620001cc6000830184620001a4565b92915050565b61407380620001e26000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806379ba5097116100b8578063c22801031161007c578063c2280103146102dd578063cd9924001461030d578063d12ff20a14610329578063e30c397814610359578063f22ee70414610377578063f2fde38b146103a757610137565b806379ba5097146102825780638129fc1c1461028c5780638456cb59146102965780638da5cb5b146102a0578063b810c636146102be57610137565b80635c975abb116100ff5780635c975abb146101ca578063715018a6146101e857806371eedb88146101f257806375151b6314610222578063768c6ec01461025257610137565b8063026213381461013c578063322008821461016c5780633f4ba83a1461018857806340ebc6771461019257806347094e2e146101ae575b600080fd5b6101566004803603810190610151919061285d565b6103c3565b6040516101639190612977565b60405180910390f35b61018660048036038101906101819190612b47565b610449565b005b6101906105be565b005b6101ac60048036038101906101a79190612c01565b6105d0565b005b6101c860048036038101906101c39190612c81565b610898565b005b6101d2610903565b6040516101df9190612cc9565b60405180910390f35b6101f061091a565b005b61020c60048036038101906102079190612d1a565b61092e565b6040516102199190612cc9565b60405180910390f35b61023c60048036038101906102379190612d5a565b610dce565b6040516102499190612cc9565b60405180910390f35b61026c6004803603810190610267919061285d565b610e2a565b6040516102799190612ea7565b60405180910390f35b61028a611043565b005b6102946110d0565b005b61029e611220565b005b6102a8611232565b6040516102b59190612ed2565b60405180910390f35b6102c661125c565b6040516102d4929190612f0b565b60405180910390f35b6102f760048036038101906102f2919061285d565b611281565b6040516103049190612f63565b60405180910390f35b61032760048036038101906103229190612f7e565b6112c2565b005b610343600480360381019061033e9190613058565b611447565b604051610350919061313d565b60405180910390f35b61036161198d565b60405161036e9190612ed2565b60405180910390f35b610391600480360381019061038c9190613158565b6119b7565b60405161039e9190612cc9565b60405180910390f35b6103c160048036038101906103bc9190612d5a565b612013565b005b606060cd6000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561043e578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906103f8565b505050509050919050565b6104516120c0565b60cd6000838152602001908152602001600020600061047091906126eb565b60005b815181101561056f5760cd60008481526020019081526020016000208282815181106104a2576104a16131bf565b5b60200260200101519080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550506040518060400160405280838381518110610507576105066131bf565b5b60200260200101516020015181526020018481525060ce6000848481518110610533576105326131bf565b5b60200260200101516000015181526020019081526020016000206000820151816000015560208201518160010155905050806001019050610473565b50817f58f3a30ec15a8d3e09fa65f9ef10219bc7a9a99d872a4ed895c37c2e761ac2ac60cd60008581526020019081526020016000206040516105b29190613308565b60405180910390a25050565b6105c66120c0565b6105ce61213e565b565b6105d86120c0565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610647576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063e90613387565b60405180910390fd5b60007f7472656173757279000000000000000000000000000000000000000000000000830361074a578173ffffffffffffffffffffffffffffffffffffffff16609860089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610700576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f790613419565b60405180910390fd5b81609860086101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050610848565b7f61676772656761746f72000000000000000000000000000000000000000000008303610847578173ffffffffffffffffffffffffffffffffffffffff16609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610801576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f8906134ab565b60405180910390fd5b81609960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190505b5b8015610893578173ffffffffffffffffffffffffffffffffffffffff16837fbbc5b96e57cfecb3dbeeadf92e87f15e58e64fcd75cbe256dcc5d9ef2e51e8a460405160405180910390a35b505050565b6108a06120c0565b80609860006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507f1ce29a697a4765bd17d91df93ba75b250b629ecf030553ff1f6ab59f15ae6c7b816040516108f891906134cb565b60405180910390a150565b600060cf60009054906101000a900460ff16905090565b6109226120c0565b61092c60006121a1565b565b6000609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b790613532565b60405180910390fd5b610101600083815260200190815260200160002060050160009054906101000a900460ff1615610a25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1c9061359e565b60405180910390fd5b610101600083815260200190815260200160002060050160019054906101000a900460ff1615610a8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a819061360a565b60405180910390fd5b826101016000848152602001908152602001600020600401541015610ae4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610adb90613676565b60405180910390fd5b610101600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb609860089054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff1660e01b8152600401610b78929190613696565b6020604051808303816000875af1158015610b97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbb91906136eb565b506001610101600084815260200190815260200160002060050160016101000a81548160ff0219169083151502179055506000610101600084815260200190815260200160002060060160006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550600083610101600085815260200190815260200160002060040154610101600086815260200190815260200160002060070154610c709190613747565b610c7a919061377b565b9050610101600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610101600086815260200190815260200160002060050160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661010160008781526020019081526020016000206003015484610d2a9190613747565b6040518363ffffffff1660e01b8152600401610d47929190613696565b6020604051808303816000875af1158015610d66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8a91906136eb565b50827f0736fe428e1747ca8d387c2e6fa1a31a0cde62d3a167c40a46ade59a3cdc828e85604051610dbb91906137af565b60405180910390a2600191505092915050565b6000600160cc60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610e205760019050610e25565b600090505b919050565b610e3261270f565b6101016000838152602001908152602001600020604051806101400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff161515151581526020016005820160019054906101000a900460ff161515151581526020016005820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820160009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020016007820154815250509050919050565b600061104d6121d2565b90508073ffffffffffffffffffffffffffffffffffffffff1661106e61198d565b73ffffffffffffffffffffffffffffffffffffffff16146110c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110bb9061383c565b60405180910390fd5b6110cd816121a1565b50565b60008060019054906101000a900460ff161590508080156111015750600160008054906101000a900460ff1660ff16105b8061112e5750611110306121da565b15801561112d5750600160008054906101000a900460ff1660ff16145b5b61116d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611164906138ce565b60405180910390fd5b60016000806101000a81548160ff021916908360ff16021790555080156111aa576001600060016101000a81548160ff0219169083151502179055505b620186a06097819055506111bc6121fd565b6111c4612256565b801561121d5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516112149190613940565b60405180910390a15b50565b6112286120c0565b6112306122af565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080609860009054906101000a900467ffffffffffffffff16609754915091509091565b6112896127cc565b60ce6000838152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050919050565b6112ca6120c0565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611339576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133090613387565b60405180910390fd5b60018114806113485750600281145b611387576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137e906139a7565b60405180910390fd5b7f746f6b656e0000000000000000000000000000000000000000000000000000008303611442578060cc60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16837fcfa976492af7c14a916cc3a239f4c9c75bbd7f5f0e398beb41d892c7eeccae4c8360405161143991906137af565b60405180910390a35b505050565b6000611451612312565b61145e8a8a86898961235c565b600083839050036114a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149b90613a13565b60405180910390fd5b8973ffffffffffffffffffffffffffffffffffffffff166323b872dd3330888d6114ce9190613747565b6040518463ffffffff1660e01b81526004016114ec93929190613a33565b6020604051808303816000875af115801561150b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152f91906136eb565b5061010260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061158190613a6a565b91905055503361010260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040516020016115d9929190613696565b6040516020818303038152906040528051906020012090506000609754609860009054906101000a900467ffffffffffffffff1667ffffffffffffffff168b6116229190613ab2565b61162c9190613b23565b90506040518061014001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018c73ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018281526020016000151581526020016000151581526020018673ffffffffffffffffffffffffffffffffffffffff16815260200160975467ffffffffffffffff166bffffffffffffffffffffffff168152602001828c6116f4919061377b565b815250610101600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548160ff02191690831515021790555060e08201518160050160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101008201518160060160006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555061012082015181600701559050506101016000838152602001908152602001600020600701548b73ffffffffffffffffffffffffffffffffffffffff16610101600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f3bdd0d86e09a22d7ce596118bd3ca5ec73ea47533a465be37621e913ed2bf33384868d8f8b8b60405161197796959493929190613bc1565b60405180910390a4509998505050505050505050565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611a49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a4090613532565b60405180910390fd5b610101600085815260200190815260200160002060050160009054906101000a900460ff1615611aae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aa59061359e565b60405180910390fd5b610101600085815260200190815260200160002060050160019054906101000a900460ff1615611b13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b0a9061360a565b60405180910390fd5b6000610101600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508267ffffffffffffffff16610101600087815260200190815260200160002060060160008282829054906101000a90046bffffffffffffffffffffffff16611b979190613c1d565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055506000610101600087815260200190815260200160002060060160009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff1603611ec9576001610101600087815260200190815260200160002060050160006101000a81548160ff021916908315150217905550600061010160008781526020019081526020016000206003015414611df057610101600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610101600088815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166101016000898152602001908152602001600020600301546040518363ffffffff1660e01b8152600401611d19929190613696565b6020604051808303816000875af1158015611d38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d5c91906136eb565b50610101600086815260200190815260200160002060030154610101600087815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f44f6938ca4a10313aabb76f874cced61e35710a734a126e4afb34461bf8c250160405160405180910390a35b600061010160008781526020019081526020016000206004015414611ec8578073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb609860089054906101000a900473ffffffffffffffffffffffffffffffffffffffff166101016000898152602001908152602001600020600401546040518363ffffffff1660e01b8152600401611e83929190613696565b6020604051808303816000875af1158015611ea2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ec691906136eb565b505b5b60006097548467ffffffffffffffff16610101600089815260200190815260200160002060070154611efb9190613ab2565b611f059190613b23565b90508061010160008881526020019081526020016000206007016000828254611f2e919061377b565b925050819055508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86836040518363ffffffff1660e01b8152600401611f70929190613696565b6020604051808303816000875af1158015611f8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fb391906136eb565b508473ffffffffffffffffffffffffffffffffffffffff16867f98ece21e01a01cbe1d1c0dad3b053c8fbd368f99be78be958fcf1d1d13fd249a8987604051611ffd929190613c8e565b60405180910390a3600192505050949350505050565b61201b6120c0565b80606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1661207b611232565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6120c86121d2565b73ffffffffffffffffffffffffffffffffffffffff166120e6611232565b73ffffffffffffffffffffffffffffffffffffffff161461213c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161213390613d03565b60405180910390fd5b565b61214661250f565b600060cf60006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61218a6121d2565b6040516121979190612ed2565b60405180910390a1565b606560006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556121cf81612558565b50565b600033905090565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff1661224c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161224390613d95565b60405180910390fd5b61225461261e565b565b600060019054906101000a900460ff166122a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161229c90613d95565b60405180910390fd5b6122ad61267f565b565b6122b7612312565b600160cf60006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586122fb6121d2565b6040516123089190612ed2565b60405180910390a1565b61231a610903565b1561235a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161235190613e01565b60405180910390fd5b565b600160cc60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146123de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123d590613e6d565b60405180910390fd5b60008403612421576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161241890613ed9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612490576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161248790613f45565b60405180910390fd5b6000811461250857600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612507576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124fe90613fb1565b60405180910390fd5b5b5050505050565b612517610903565b612556576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161254d9061401d565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019054906101000a900460ff1661266d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161266490613d95565b60405180910390fd5b61267d6126786121d2565b6121a1565b565b600060019054906101000a900460ff166126ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126c590613d95565b60405180910390fd5b600060cf60006101000a81548160ff021916908315150217905550565b508054600082556002029060005260206000209081019061270c91906127ec565b50565b604051806101400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600015158152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160006bffffffffffffffffffffffff168152602001600081525090565b604051806040016040528060008019168152602001600080191681525090565b5b8082111561280f576000808201600090556001820160009055506002016127ed565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61283a81612827565b811461284557600080fd5b50565b60008135905061285781612831565b92915050565b6000602082840312156128735761287261281d565b5b600061288184828501612848565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6128bf81612827565b82525050565b6040820160008201516128db60008501826128b6565b5060208201516128ee60208501826128b6565b50505050565b600061290083836128c5565b60408301905092915050565b6000602082019050919050565b60006129248261288a565b61292e8185612895565b9350612939836128a6565b8060005b8381101561296a57815161295188826128f4565b975061295c8361290c565b92505060018101905061293d565b5085935050505092915050565b600060208201905081810360008301526129918184612919565b905092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6129e78261299e565b810181811067ffffffffffffffff82111715612a0657612a056129af565b5b80604052505050565b6000612a19612813565b9050612a2582826129de565b919050565b600067ffffffffffffffff821115612a4557612a446129af565b5b602082029050602081019050919050565b600080fd5b600080fd5b600060408284031215612a7657612a75612a5b565b5b612a806040612a0f565b90506000612a9084828501612848565b6000830152506020612aa484828501612848565b60208301525092915050565b6000612ac3612abe84612a2a565b612a0f565b90508083825260208201905060408402830185811115612ae657612ae5612a56565b5b835b81811015612b0f5780612afb8882612a60565b845260208401935050604081019050612ae8565b5050509392505050565b600082601f830112612b2e57612b2d612999565b5b8135612b3e848260208601612ab0565b91505092915050565b60008060408385031215612b5e57612b5d61281d565b5b6000612b6c85828601612848565b925050602083013567ffffffffffffffff811115612b8d57612b8c612822565b5b612b9985828601612b19565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612bce82612ba3565b9050919050565b612bde81612bc3565b8114612be957600080fd5b50565b600081359050612bfb81612bd5565b92915050565b60008060408385031215612c1857612c1761281d565b5b6000612c2685828601612848565b9250506020612c3785828601612bec565b9150509250929050565b600067ffffffffffffffff82169050919050565b612c5e81612c41565b8114612c6957600080fd5b50565b600081359050612c7b81612c55565b92915050565b600060208284031215612c9757612c9661281d565b5b6000612ca584828501612c6c565b91505092915050565b60008115159050919050565b612cc381612cae565b82525050565b6000602082019050612cde6000830184612cba565b92915050565b6000819050919050565b612cf781612ce4565b8114612d0257600080fd5b50565b600081359050612d1481612cee565b92915050565b60008060408385031215612d3157612d3061281d565b5b6000612d3f85828601612d05565b9250506020612d5085828601612848565b9150509250929050565b600060208284031215612d7057612d6f61281d565b5b6000612d7e84828501612bec565b91505092915050565b612d9081612bc3565b82525050565b612d9f81612ce4565b82525050565b612dae81612cae565b82525050565b60006bffffffffffffffffffffffff82169050919050565b612dd581612db4565b82525050565b61014082016000820151612df26000850182612d87565b506020820151612e056020850182612d87565b506040820151612e186040850182612d87565b506060820151612e2b6060850182612d96565b506080820151612e3e6080850182612d96565b5060a0820151612e5160a0850182612da5565b5060c0820151612e6460c0850182612da5565b5060e0820151612e7760e0850182612d87565b50610100820151612e8c610100850182612dcc565b50610120820151612ea1610120850182612d96565b50505050565b600061014082019050612ebd6000830184612ddb565b92915050565b612ecc81612bc3565b82525050565b6000602082019050612ee76000830184612ec3565b92915050565b612ef681612c41565b82525050565b612f0581612ce4565b82525050565b6000604082019050612f206000830185612eed565b612f2d6020830184612efc565b9392505050565b604082016000820151612f4a60008501826128b6565b506020820151612f5d60208501826128b6565b50505050565b6000604082019050612f786000830184612f34565b92915050565b600080600060608486031215612f9757612f9661281d565b5b6000612fa586828701612848565b9350506020612fb686828701612bec565b9250506040612fc786828701612d05565b9150509250925092565b612fda81612db4565b8114612fe557600080fd5b50565b600081359050612ff781612fd1565b92915050565b600080fd5b60008083601f84011261301857613017612999565b5b8235905067ffffffffffffffff81111561303557613034612ffd565b5b60208301915083600182028301111561305157613050612a56565b5b9250929050565b60008060008060008060008060006101008a8c03121561307b5761307a61281d565b5b60006130898c828d01612bec565b995050602061309a8c828d01612d05565b98505060406130ab8c828d01612848565b97505060606130bc8c828d01612fe8565b96505060806130cd8c828d01612bec565b95505060a06130de8c828d01612d05565b94505060c06130ef8c828d01612bec565b93505060e08a013567ffffffffffffffff8111156131105761310f612822565b5b61311c8c828d01613002565b92509250509295985092959850929598565b61313781612827565b82525050565b6000602082019050613152600083018461312e565b92915050565b600080600080608085870312156131725761317161281d565b5b600061318087828801612848565b945050602061319187828801612848565b93505060406131a287828801612bec565b92505060606131b387828801612c6c565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081549050919050565b60008190508160005260206000209050919050565b60008160001c9050919050565b6000819050919050565b60006132386132338361320e565b61321b565b9050919050565b60408201600080830154905061325481613225565b61326160008601826128b6565b506001830154905061327281613225565b61327f60208601826128b6565b5050505050565b6000613292838361323f565b60408301905092915050565b6000600282019050919050565b60006132b6826131ee565b6132c08185612895565b93506132cb836131f9565b8060005b838110156132fb57816132e28882613286565b97506132ed8361329e565b9250506001810190506132cf565b5085935050505092915050565b6000602082019050818103600083015261332281846132ab565b905092915050565b600082825260208201905092915050565b7f476174657761793a207a65726f20616464726573730000000000000000000000600082015250565b600061337160158361332a565b915061337c8261333b565b602082019050919050565b600060208201905081810360008301526133a081613364565b9050919050565b7f476174657761793a207472656173757279206164647265737320616c7265616460008201527f7920736574000000000000000000000000000000000000000000000000000000602082015250565b600061340360258361332a565b915061340e826133a7565b604082019050919050565b60006020820190508181036000830152613432816133f6565b9050919050565b7f476174657761793a2061676772656761746f72206164647265737320616c726560008201527f6164792073657400000000000000000000000000000000000000000000000000602082015250565b600061349560278361332a565b91506134a082613439565b604082019050919050565b600060208201905081810360008301526134c481613488565b9050919050565b60006020820190506134e06000830184612eed565b92915050565b7f4f6e6c7941676772656761746f72000000000000000000000000000000000000600082015250565b600061351c600e8361332a565b9150613527826134e6565b602082019050919050565b6000602082019050818103600083015261354b8161350f565b9050919050565b7f4f7264657246756c66696c6c6564000000000000000000000000000000000000600082015250565b6000613588600e8361332a565b915061359382613552565b602082019050919050565b600060208201905081810360008301526135b78161357b565b9050919050565b7f4f72646572526566756e64656400000000000000000000000000000000000000600082015250565b60006135f4600d8361332a565b91506135ff826135be565b602082019050919050565b60006020820190508181036000830152613623816135e7565b9050919050565b7f4665654578636565647350726f746f636f6c4665650000000000000000000000600082015250565b600061366060158361332a565b915061366b8261362a565b602082019050919050565b6000602082019050818103600083015261368f81613653565b9050919050565b60006040820190506136ab6000830185612ec3565b6136b86020830184612efc565b9392505050565b6136c881612cae565b81146136d357600080fd5b50565b6000815190506136e5816136bf565b92915050565b6000602082840312156137015761370061281d565b5b600061370f848285016136d6565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061375282612ce4565b915061375d83612ce4565b925082820190508082111561377557613774613718565b5b92915050565b600061378682612ce4565b915061379183612ce4565b92508282039050818111156137a9576137a8613718565b5b92915050565b60006020820190506137c46000830184612efc565b92915050565b7f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060008201527f6e6577206f776e65720000000000000000000000000000000000000000000000602082015250565b600061382660298361332a565b9150613831826137ca565b604082019050919050565b6000602082019050818103600083015261385581613819565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b60006138b8602e8361332a565b91506138c38261385c565b604082019050919050565b600060208201905081810360008301526138e7816138ab565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b600061392a613925613920846138ee565b613905565b6138f8565b9050919050565b61393a8161390f565b82525050565b60006020820190506139556000830184613931565b92915050565b7f476174657761793a20696e76616c696420737461747573000000000000000000600082015250565b600061399160178361332a565b915061399c8261395b565b602082019050919050565b600060208201905081810360008301526139c081613984565b9050919050565b7f496e76616c69644d657373616765486173680000000000000000000000000000600082015250565b60006139fd60128361332a565b9150613a08826139c7565b602082019050919050565b60006020820190508181036000830152613a2c816139f0565b9050919050565b6000606082019050613a486000830186612ec3565b613a556020830185612ec3565b613a626040830184612efc565b949350505050565b6000613a7582612ce4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613aa757613aa6613718565b5b600182019050919050565b6000613abd82612ce4565b9150613ac883612ce4565b9250828202613ad681612ce4565b91508282048414831517613aed57613aec613718565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613b2e82612ce4565b9150613b3983612ce4565b925082613b4957613b48613af4565b5b828204905092915050565b6000613b6f613b6a613b6584612db4565b613905565b612ce4565b9050919050565b613b7f81613b54565b82525050565b82818337600083830152505050565b6000613ba0838561332a565b9350613bad838584613b85565b613bb68361299e565b840190509392505050565b600060a082019050613bd66000830189612efc565b613be3602083018861312e565b613bf06040830187613b76565b613bfd606083018661312e565b8181036080830152613c10818486613b94565b9050979650505050505050565b6000613c2882612db4565b9150613c3383612db4565b925082820390506bffffffffffffffffffffffff811115613c5757613c56613718565b5b92915050565b6000613c78613c73613c6e84612c41565b613905565b612db4565b9050919050565b613c8881613c5d565b82525050565b6000604082019050613ca3600083018561312e565b613cb06020830184613c7f565b9392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000613ced60208361332a565b9150613cf882613cb7565b602082019050919050565b60006020820190508181036000830152613d1c81613ce0565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000613d7f602b8361332a565b9150613d8a82613d23565b604082019050919050565b60006020820190508181036000830152613dae81613d72565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000613deb60108361332a565b9150613df682613db5565b602082019050919050565b60006020820190508181036000830152613e1a81613dde565b9050919050565b7f546f6b656e4e6f74537570706f72746564000000000000000000000000000000600082015250565b6000613e5760118361332a565b9150613e6282613e21565b602082019050919050565b60006020820190508181036000830152613e8681613e4a565b9050919050565b7f416d6f756e7449735a65726f0000000000000000000000000000000000000000600082015250565b6000613ec3600c8361332a565b9150613ece82613e8d565b602082019050919050565b60006020820190508181036000830152613ef281613eb6565b9050919050565b7f5468726f775a65726f4164647265737300000000000000000000000000000000600082015250565b6000613f2f60108361332a565b9150613f3a82613ef9565b602082019050919050565b60006020820190508181036000830152613f5e81613f22565b9050919050565b7f496e76616c696453656e646572466565526563697069656e7400000000000000600082015250565b6000613f9b60198361332a565b9150613fa682613f65565b602082019050919050565b60006020820190508181036000830152613fca81613f8e565b9050919050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b600061400760148361332a565b915061401282613fd1565b602082019050919050565b6000602082019050818103600083015261403681613ffa565b905091905056fea26469706673582212207dab2d8943229ee0ffe5f5e542da3ea20341c382d0e9de16603ee6cdba0d8e8f64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x22 PUSH3 0x28 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1D2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x72 SWAP1 PUSH3 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF DUP1 AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ PUSH3 0xEC JUMPI PUSH1 0xFF PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0xFF PUSH1 0x40 MLOAD PUSH3 0xE3 SWAP2 SWAP1 PUSH3 0x1B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C697A696E6700000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15D PUSH1 0x27 DUP4 PUSH3 0xEE JUMP JUMPDEST SWAP2 POP PUSH3 0x16A DUP3 PUSH3 0xFF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x190 DUP2 PUSH3 0x14E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1AF DUP2 PUSH3 0x197 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1CC PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4073 DUP1 PUSH3 0x1E2 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xC2280103 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC2280103 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xCD992400 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xD12FF20A EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xF22EE704 EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A7 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0xB810C636 EQ PUSH2 0x2BE JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x71EEDB88 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x75151B63 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x768C6EC0 EQ PUSH2 0x252 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x2621338 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x32200882 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x40EBC677 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x47094E2E EQ PUSH2 0x1AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x285D JUMP JUMPDEST PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x2977 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x186 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x2B47 JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x190 PUSH2 0x5BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x2C01 JUMP JUMPDEST PUSH2 0x5D0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x2C81 JUMP JUMPDEST PUSH2 0x898 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D2 PUSH2 0x903 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x2CC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH2 0x91A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH2 0x92E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x2CC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x2D5A JUMP JUMPDEST PUSH2 0xDCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x2CC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x285D JUMP JUMPDEST PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x2EA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28A PUSH2 0x1043 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x294 PUSH2 0x10D0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29E PUSH2 0x1220 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A8 PUSH2 0x1232 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH2 0x125C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x285D JUMP JUMPDEST PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x2F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x2F7E JUMP JUMPDEST PUSH2 0x12C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x343 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x3058 JUMP JUMPDEST PUSH2 0x1447 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x313D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x361 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x391 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x3158 JUMP JUMPDEST PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x2CC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x2D5A JUMP JUMPDEST PUSH2 0x2013 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0xCD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x43E JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3F8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x451 PUSH2 0x20C0 JUMP JUMPDEST PUSH1 0xCD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x470 SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x56F JUMPI PUSH1 0xCD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A2 JUMPI PUSH2 0x4A1 PUSH2 0x31BF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x507 JUMPI PUSH2 0x506 PUSH2 0x31BF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0xCE PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x533 JUMPI PUSH2 0x532 PUSH2 0x31BF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x473 JUMP JUMPDEST POP DUP2 PUSH32 0x58F3A30EC15A8D3E09FA65F9EF10219BC7A9A99D872A4ED895C37C2E761AC2AC PUSH1 0xCD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x3308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x5C6 PUSH2 0x20C0 JUMP JUMPDEST PUSH2 0x5CE PUSH2 0x213E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5D8 PUSH2 0x20C0 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x647 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63E SWAP1 PUSH2 0x3387 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x7472656173757279000000000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x74A JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x98 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F7 SWAP1 PUSH2 0x3419 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x98 PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x848 JUMP JUMPDEST PUSH32 0x61676772656761746F7200000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x847 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x801 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F8 SWAP1 PUSH2 0x34AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x99 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST DUP1 ISZERO PUSH2 0x893 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xBBC5B96E57CFECB3DBEEADF92E87F15E58E64FCD75CBE256DCC5D9EF2E51E8A4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x8A0 PUSH2 0x20C0 JUMP JUMPDEST DUP1 PUSH1 0x98 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x1CE29A697A4765BD17D91DF93BA75B250B629ECF030553FF1F6AB59F15AE6C7B DUP2 PUSH1 0x40 MLOAD PUSH2 0x8F8 SWAP2 SWAP1 PUSH2 0x34CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xCF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x922 PUSH2 0x20C0 JUMP JUMPDEST PUSH2 0x92C PUSH1 0x0 PUSH2 0x21A1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B7 SWAP1 PUSH2 0x3532 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1C SWAP1 PUSH2 0x359E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA81 SWAP1 PUSH2 0x360A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH2 0x101 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD LT ISZERO PUSH2 0xAE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADB SWAP1 PUSH2 0x3676 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x98 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB78 SWAP3 SWAP2 SWAP1 PUSH2 0x3696 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB97 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBBB SWAP2 SWAP1 PUSH2 0x36EB JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x101 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x101 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP4 PUSH2 0x101 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x101 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH2 0xC70 SWAP2 SWAP1 PUSH2 0x3747 JUMP JUMPDEST PUSH2 0xC7A SWAP2 SWAP1 PUSH2 0x377B JUMP JUMPDEST SWAP1 POP PUSH2 0x101 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x101 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x101 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP5 PUSH2 0xD2A SWAP2 SWAP1 PUSH2 0x3747 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD47 SWAP3 SWAP2 SWAP1 PUSH2 0x3696 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD66 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD8A SWAP2 SWAP1 PUSH2 0x36EB JUMP JUMPDEST POP DUP3 PUSH32 0x736FE428E1747CA8D387C2E6FA1A31A0CDE62D3A167C40A46ADE59A3CDC828E DUP6 PUSH1 0x40 MLOAD PUSH2 0xDBB SWAP2 SWAP1 PUSH2 0x37AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xCC PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0xE20 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE32 PUSH2 0x270F JUMP JUMPDEST PUSH2 0x101 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104D PUSH2 0x21D2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x106E PUSH2 0x198D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BB SWAP1 PUSH2 0x383C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10CD DUP2 PUSH2 0x21A1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x1101 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x112E JUMPI POP PUSH2 0x1110 ADDRESS PUSH2 0x21DA JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x112D JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x116D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1164 SWAP1 PUSH2 0x38CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x11AA JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH3 0x186A0 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH2 0x11BC PUSH2 0x21FD JUMP JUMPDEST PUSH2 0x11C4 PUSH2 0x2256 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x121D JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1214 SWAP2 SWAP1 PUSH2 0x3940 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x1228 PUSH2 0x20C0 JUMP JUMPDEST PUSH2 0x1230 PUSH2 0x22AF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x98 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x97 SLOAD SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x1289 PUSH2 0x27CC JUMP JUMPDEST PUSH1 0xCE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12CA PUSH2 0x20C0 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1339 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1330 SWAP1 PUSH2 0x3387 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 EQ DUP1 PUSH2 0x1348 JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST PUSH2 0x1387 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x137E SWAP1 PUSH2 0x39A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x746F6B656E000000000000000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x1442 JUMPI DUP1 PUSH1 0xCC PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xCFA976492AF7C14A916CC3A239F4C9C75BBD7F5F0E398BEB41D892C7EECCAE4C DUP4 PUSH1 0x40 MLOAD PUSH2 0x1439 SWAP2 SWAP1 PUSH2 0x37AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1451 PUSH2 0x2312 JUMP JUMPDEST PUSH2 0x145E DUP11 DUP11 DUP7 DUP10 DUP10 PUSH2 0x235C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 SWAP1 POP SUB PUSH2 0x14A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x149B SWAP1 PUSH2 0x3A13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 DUP14 PUSH2 0x14CE SWAP2 SWAP1 PUSH2 0x3747 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14EC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A33 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x150B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x152F SWAP2 SWAP1 PUSH2 0x36EB JUMP JUMPDEST POP PUSH2 0x102 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1581 SWAP1 PUSH2 0x3A6A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH2 0x102 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x15D9 SWAP3 SWAP2 SWAP1 PUSH2 0x3696 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x97 SLOAD PUSH1 0x98 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP12 PUSH2 0x1622 SWAP2 SWAP1 PUSH2 0x3AB2 JUMP JUMPDEST PUSH2 0x162C SWAP2 SWAP1 PUSH2 0x3B23 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x97 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP13 PUSH2 0x16F4 SWAP2 SWAP1 PUSH2 0x377B JUMP JUMPDEST DUP2 MSTORE POP PUSH2 0x101 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE SWAP1 POP POP PUSH2 0x101 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x101 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3BDD0D86E09A22D7CE596118BD3CA5EC73EA47533A465BE37621E913ED2BF333 DUP5 DUP7 DUP14 DUP16 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH2 0x1977 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A40 SWAP1 PUSH2 0x3532 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1AAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA5 SWAP1 PUSH2 0x359E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1B13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B0A SWAP1 PUSH2 0x360A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x101 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x101 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B97 SWAP2 SWAP1 PUSH2 0x3C1D JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x101 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EC9 JUMPI PUSH1 0x1 PUSH2 0x101 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x101 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD EQ PUSH2 0x1DF0 JUMPI PUSH2 0x101 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x101 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x101 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D19 SWAP3 SWAP2 SWAP1 PUSH2 0x3696 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D38 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D5C SWAP2 SWAP1 PUSH2 0x36EB JUMP JUMPDEST POP PUSH2 0x101 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x101 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x44F6938CA4A10313AABB76F874CCED61E35710A734A126E4AFB34461BF8C2501 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x0 PUSH2 0x101 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD EQ PUSH2 0x1EC8 JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x98 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x101 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E83 SWAP3 SWAP2 SWAP1 PUSH2 0x3696 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EA2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EC6 SWAP2 SWAP1 PUSH2 0x36EB JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x97 SLOAD DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x101 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH2 0x1EFB SWAP2 SWAP1 PUSH2 0x3AB2 JUMP JUMPDEST PUSH2 0x1F05 SWAP2 SWAP1 PUSH2 0x3B23 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x101 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1F2E SWAP2 SWAP1 PUSH2 0x377B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP7 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F70 SWAP3 SWAP2 SWAP1 PUSH2 0x3696 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F8F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FB3 SWAP2 SWAP1 PUSH2 0x36EB JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH32 0x98ECE21E01A01CBE1D1C0DAD3B053C8FBD368F99BE78BE958FCF1D1D13FD249A DUP10 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1FFD SWAP3 SWAP2 SWAP1 PUSH2 0x3C8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x201B PUSH2 0x20C0 JUMP JUMPDEST DUP1 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x207B PUSH2 0x1232 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x20C8 PUSH2 0x21D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x20E6 PUSH2 0x1232 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x213C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2133 SWAP1 PUSH2 0x3D03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2146 PUSH2 0x250F JUMP JUMPDEST PUSH1 0x0 PUSH1 0xCF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x218A PUSH2 0x21D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2197 SWAP2 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x21CF DUP2 PUSH2 0x2558 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x224C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2243 SWAP1 PUSH2 0x3D95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2254 PUSH2 0x261E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x22A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229C SWAP1 PUSH2 0x3D95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22AD PUSH2 0x267F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x22B7 PUSH2 0x2312 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xCF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x22FB PUSH2 0x21D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2308 SWAP2 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x231A PUSH2 0x903 JUMP JUMPDEST ISZERO PUSH2 0x235A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2351 SWAP1 PUSH2 0x3E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0xCC PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x23DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23D5 SWAP1 PUSH2 0x3E6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 SUB PUSH2 0x2421 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2418 SWAP1 PUSH2 0x3ED9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2490 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2487 SWAP1 PUSH2 0x3F45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x2508 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2507 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24FE SWAP1 PUSH2 0x3FB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2517 PUSH2 0x903 JUMP JUMPDEST PUSH2 0x2556 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x254D SWAP1 PUSH2 0x401D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x266D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2664 SWAP1 PUSH2 0x3D95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x267D PUSH2 0x2678 PUSH2 0x21D2 JUMP JUMPDEST PUSH2 0x21A1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x26CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26C5 SWAP1 PUSH2 0x3D95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xCF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE PUSH1 0x2 MUL SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x270C SWAP2 SWAP1 PUSH2 0x27EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x280F JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x2 ADD PUSH2 0x27ED JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x283A DUP2 PUSH2 0x2827 JUMP JUMPDEST DUP2 EQ PUSH2 0x2845 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2857 DUP2 PUSH2 0x2831 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2873 JUMPI PUSH2 0x2872 PUSH2 0x281D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2881 DUP5 DUP3 DUP6 ADD PUSH2 0x2848 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28BF DUP2 PUSH2 0x2827 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x28DB PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x28B6 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x28EE PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x28B6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2900 DUP4 DUP4 PUSH2 0x28C5 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2924 DUP3 PUSH2 0x288A JUMP JUMPDEST PUSH2 0x292E DUP2 DUP6 PUSH2 0x2895 JUMP JUMPDEST SWAP4 POP PUSH2 0x2939 DUP4 PUSH2 0x28A6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x296A JUMPI DUP2 MLOAD PUSH2 0x2951 DUP9 DUP3 PUSH2 0x28F4 JUMP JUMPDEST SWAP8 POP PUSH2 0x295C DUP4 PUSH2 0x290C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x293D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2991 DUP2 DUP5 PUSH2 0x2919 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x29E7 DUP3 PUSH2 0x299E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2A06 JUMPI PUSH2 0x2A05 PUSH2 0x29AF JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A19 PUSH2 0x2813 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A25 DUP3 DUP3 PUSH2 0x29DE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2A45 JUMPI PUSH2 0x2A44 PUSH2 0x29AF JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A76 JUMPI PUSH2 0x2A75 PUSH2 0x2A5B JUMP JUMPDEST JUMPDEST PUSH2 0x2A80 PUSH1 0x40 PUSH2 0x2A0F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2A90 DUP5 DUP3 DUP6 ADD PUSH2 0x2848 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x2AA4 DUP5 DUP3 DUP6 ADD PUSH2 0x2848 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AC3 PUSH2 0x2ABE DUP5 PUSH2 0x2A2A JUMP JUMPDEST PUSH2 0x2A0F JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x40 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2AE6 JUMPI PUSH2 0x2AE5 PUSH2 0x2A56 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2B0F JUMPI DUP1 PUSH2 0x2AFB DUP9 DUP3 PUSH2 0x2A60 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x40 DUP2 ADD SWAP1 POP PUSH2 0x2AE8 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2B2E JUMPI PUSH2 0x2B2D PUSH2 0x2999 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2B3E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2AB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B5E JUMPI PUSH2 0x2B5D PUSH2 0x281D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B6C DUP6 DUP3 DUP7 ADD PUSH2 0x2848 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B8D JUMPI PUSH2 0x2B8C PUSH2 0x2822 JUMP JUMPDEST JUMPDEST PUSH2 0x2B99 DUP6 DUP3 DUP7 ADD PUSH2 0x2B19 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BCE DUP3 PUSH2 0x2BA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BDE DUP2 PUSH2 0x2BC3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2BFB DUP2 PUSH2 0x2BD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C18 JUMPI PUSH2 0x2C17 PUSH2 0x281D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C26 DUP6 DUP3 DUP7 ADD PUSH2 0x2848 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2C37 DUP6 DUP3 DUP7 ADD PUSH2 0x2BEC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C5E DUP2 PUSH2 0x2C41 JUMP JUMPDEST DUP2 EQ PUSH2 0x2C69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C7B DUP2 PUSH2 0x2C55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C97 JUMPI PUSH2 0x2C96 PUSH2 0x281D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CA5 DUP5 DUP3 DUP6 ADD PUSH2 0x2C6C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CC3 DUP2 PUSH2 0x2CAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CDE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2CBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CF7 DUP2 PUSH2 0x2CE4 JUMP JUMPDEST DUP2 EQ PUSH2 0x2D02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2D14 DUP2 PUSH2 0x2CEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D31 JUMPI PUSH2 0x2D30 PUSH2 0x281D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D3F DUP6 DUP3 DUP7 ADD PUSH2 0x2D05 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2D50 DUP6 DUP3 DUP7 ADD PUSH2 0x2848 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D70 JUMPI PUSH2 0x2D6F PUSH2 0x281D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D7E DUP5 DUP3 DUP6 ADD PUSH2 0x2BEC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2D90 DUP2 PUSH2 0x2BC3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D9F DUP2 PUSH2 0x2CE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2DAE DUP2 PUSH2 0x2CAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DD5 DUP2 PUSH2 0x2DB4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x140 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2DF2 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2D87 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2E05 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2D87 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2E18 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2D87 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2E2B PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2D96 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2E3E PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x2D96 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x2E51 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x2DA5 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x2E64 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x2DA5 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x2E77 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x2D87 JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x2E8C PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x2DCC JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x2EA1 PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x2D96 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH2 0x2EBD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2DDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2ECC DUP2 PUSH2 0x2BC3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2EE7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2EC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2EF6 DUP2 PUSH2 0x2C41 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2F05 DUP2 PUSH2 0x2CE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2F20 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2EED JUMP JUMPDEST PUSH2 0x2F2D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2EFC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2F4A PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x28B6 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2F5D PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x28B6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2F78 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2F97 JUMPI PUSH2 0x2F96 PUSH2 0x281D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FA5 DUP7 DUP3 DUP8 ADD PUSH2 0x2848 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2FB6 DUP7 DUP3 DUP8 ADD PUSH2 0x2BEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2FC7 DUP7 DUP3 DUP8 ADD PUSH2 0x2D05 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2FDA DUP2 PUSH2 0x2DB4 JUMP JUMPDEST DUP2 EQ PUSH2 0x2FE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FF7 DUP2 PUSH2 0x2FD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3018 JUMPI PUSH2 0x3017 PUSH2 0x2999 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3035 JUMPI PUSH2 0x3034 PUSH2 0x2FFD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3051 JUMPI PUSH2 0x3050 PUSH2 0x2A56 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x307B JUMPI PUSH2 0x307A PUSH2 0x281D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3089 DUP13 DUP3 DUP14 ADD PUSH2 0x2BEC JUMP JUMPDEST SWAP10 POP POP PUSH1 0x20 PUSH2 0x309A DUP13 DUP3 DUP14 ADD PUSH2 0x2D05 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x40 PUSH2 0x30AB DUP13 DUP3 DUP14 ADD PUSH2 0x2848 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x60 PUSH2 0x30BC DUP13 DUP3 DUP14 ADD PUSH2 0x2FE8 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x80 PUSH2 0x30CD DUP13 DUP3 DUP14 ADD PUSH2 0x2BEC JUMP JUMPDEST SWAP6 POP POP PUSH1 0xA0 PUSH2 0x30DE DUP13 DUP3 DUP14 ADD PUSH2 0x2D05 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xC0 PUSH2 0x30EF DUP13 DUP3 DUP14 ADD PUSH2 0x2BEC JUMP JUMPDEST SWAP4 POP POP PUSH1 0xE0 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3110 JUMPI PUSH2 0x310F PUSH2 0x2822 JUMP JUMPDEST JUMPDEST PUSH2 0x311C DUP13 DUP3 DUP14 ADD PUSH2 0x3002 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH2 0x3137 DUP2 PUSH2 0x2827 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3152 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x312E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3172 JUMPI PUSH2 0x3171 PUSH2 0x281D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3180 DUP8 DUP3 DUP9 ADD PUSH2 0x2848 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3191 DUP8 DUP3 DUP9 ADD PUSH2 0x2848 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x31A2 DUP8 DUP3 DUP9 ADD PUSH2 0x2BEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x31B3 DUP8 DUP3 DUP9 ADD PUSH2 0x2C6C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3238 PUSH2 0x3233 DUP4 PUSH2 0x320E JUMP JUMPDEST PUSH2 0x321B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP1 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x3254 DUP2 PUSH2 0x3225 JUMP JUMPDEST PUSH2 0x3261 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x28B6 JUMP JUMPDEST POP PUSH1 0x1 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x3272 DUP2 PUSH2 0x3225 JUMP JUMPDEST PUSH2 0x327F PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x28B6 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3292 DUP4 DUP4 PUSH2 0x323F JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32B6 DUP3 PUSH2 0x31EE JUMP JUMPDEST PUSH2 0x32C0 DUP2 DUP6 PUSH2 0x2895 JUMP JUMPDEST SWAP4 POP PUSH2 0x32CB DUP4 PUSH2 0x31F9 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x32FB JUMPI DUP2 PUSH2 0x32E2 DUP9 DUP3 PUSH2 0x3286 JUMP JUMPDEST SWAP8 POP PUSH2 0x32ED DUP4 PUSH2 0x329E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x32CF JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3322 DUP2 DUP5 PUSH2 0x32AB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x476174657761793A207A65726F20616464726573730000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3371 PUSH1 0x15 DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x337C DUP3 PUSH2 0x333B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33A0 DUP2 PUSH2 0x3364 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A207472656173757279206164647265737320616C72656164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7920736574000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3403 PUSH1 0x25 DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x340E DUP3 PUSH2 0x33A7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3432 DUP2 PUSH2 0x33F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A2061676772656761746F72206164647265737320616C7265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6164792073657400000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3495 PUSH1 0x27 DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x34A0 DUP3 PUSH2 0x3439 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34C4 DUP2 PUSH2 0x3488 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34E0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2EED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7941676772656761746F72000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x351C PUSH1 0xE DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x3527 DUP3 PUSH2 0x34E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x354B DUP2 PUSH2 0x350F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F7264657246756C66696C6C6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3588 PUSH1 0xE DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x3593 DUP3 PUSH2 0x3552 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35B7 DUP2 PUSH2 0x357B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F72646572526566756E64656400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F4 PUSH1 0xD DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x35FF DUP3 PUSH2 0x35BE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3623 DUP2 PUSH2 0x35E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4665654578636565647350726F746F636F6C4665650000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3660 PUSH1 0x15 DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x366B DUP3 PUSH2 0x362A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x368F DUP2 PUSH2 0x3653 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x36AB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2EC3 JUMP JUMPDEST PUSH2 0x36B8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2EFC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x36C8 DUP2 PUSH2 0x2CAE JUMP JUMPDEST DUP2 EQ PUSH2 0x36D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x36E5 DUP2 PUSH2 0x36BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3701 JUMPI PUSH2 0x3700 PUSH2 0x281D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x370F DUP5 DUP3 DUP6 ADD PUSH2 0x36D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3752 DUP3 PUSH2 0x2CE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x375D DUP4 PUSH2 0x2CE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3775 JUMPI PUSH2 0x3774 PUSH2 0x3718 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3786 DUP3 PUSH2 0x2CE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3791 DUP4 PUSH2 0x2CE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x37A9 JUMPI PUSH2 0x37A8 PUSH2 0x3718 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x37C4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2EFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6577206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3826 PUSH1 0x29 DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x3831 DUP3 PUSH2 0x37CA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3855 DUP2 PUSH2 0x3819 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38B8 PUSH1 0x2E DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x38C3 DUP3 PUSH2 0x385C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38E7 DUP2 PUSH2 0x38AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x392A PUSH2 0x3925 PUSH2 0x3920 DUP5 PUSH2 0x38EE JUMP JUMPDEST PUSH2 0x3905 JUMP JUMPDEST PUSH2 0x38F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x393A DUP2 PUSH2 0x390F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3955 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3931 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x476174657761793A20696E76616C696420737461747573000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3991 PUSH1 0x17 DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x399C DUP3 PUSH2 0x395B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x39C0 DUP2 PUSH2 0x3984 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69644D657373616765486173680000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39FD PUSH1 0x12 DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x3A08 DUP3 PUSH2 0x39C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A2C DUP2 PUSH2 0x39F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3A48 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2EC3 JUMP JUMPDEST PUSH2 0x3A55 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2EC3 JUMP JUMPDEST PUSH2 0x3A62 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2EFC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A75 DUP3 PUSH2 0x2CE4 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3AA7 JUMPI PUSH2 0x3AA6 PUSH2 0x3718 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ABD DUP3 PUSH2 0x2CE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AC8 DUP4 PUSH2 0x2CE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3AD6 DUP2 PUSH2 0x2CE4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3AED JUMPI PUSH2 0x3AEC PUSH2 0x3718 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3B2E DUP3 PUSH2 0x2CE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B39 DUP4 PUSH2 0x2CE4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3B49 JUMPI PUSH2 0x3B48 PUSH2 0x3AF4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B6F PUSH2 0x3B6A PUSH2 0x3B65 DUP5 PUSH2 0x2DB4 JUMP JUMPDEST PUSH2 0x3905 JUMP JUMPDEST PUSH2 0x2CE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B7F DUP2 PUSH2 0x3B54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BA0 DUP4 DUP6 PUSH2 0x332A JUMP JUMPDEST SWAP4 POP PUSH2 0x3BAD DUP4 DUP6 DUP5 PUSH2 0x3B85 JUMP JUMPDEST PUSH2 0x3BB6 DUP4 PUSH2 0x299E JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3BD6 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2EFC JUMP JUMPDEST PUSH2 0x3BE3 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x312E JUMP JUMPDEST PUSH2 0x3BF0 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x3B76 JUMP JUMPDEST PUSH2 0x3BFD PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x312E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x3C10 DUP2 DUP5 DUP7 PUSH2 0x3B94 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C28 DUP3 PUSH2 0x2DB4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C33 DUP4 PUSH2 0x2DB4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C57 JUMPI PUSH2 0x3C56 PUSH2 0x3718 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C78 PUSH2 0x3C73 PUSH2 0x3C6E DUP5 PUSH2 0x2C41 JUMP JUMPDEST PUSH2 0x3905 JUMP JUMPDEST PUSH2 0x2DB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C88 DUP2 PUSH2 0x3C5D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3CA3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x312E JUMP JUMPDEST PUSH2 0x3CB0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3C7F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CED PUSH1 0x20 DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x3CF8 DUP3 PUSH2 0x3CB7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D1C DUP2 PUSH2 0x3CE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D7F PUSH1 0x2B DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x3D8A DUP3 PUSH2 0x3D23 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DAE DUP2 PUSH2 0x3D72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DEB PUSH1 0x10 DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x3DF6 DUP3 PUSH2 0x3DB5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E1A DUP2 PUSH2 0x3DDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E4E6F74537570706F72746564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E57 PUSH1 0x11 DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x3E62 DUP3 PUSH2 0x3E21 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E86 DUP2 PUSH2 0x3E4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E7449735A65726F0000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EC3 PUSH1 0xC DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x3ECE DUP3 PUSH2 0x3E8D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EF2 DUP2 PUSH2 0x3EB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5468726F775A65726F4164647265737300000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F2F PUSH1 0x10 DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x3F3A DUP3 PUSH2 0x3EF9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F5E DUP2 PUSH2 0x3F22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696453656E646572466565526563697069656E7400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F9B PUSH1 0x19 DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x3FA6 DUP3 PUSH2 0x3F65 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FCA DUP2 PUSH2 0x3F8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4007 PUSH1 0x14 DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x4012 DUP3 PUSH2 0x3FD1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4036 DUP2 PUSH2 0x3FFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0xAB2D8943229EE0FFE5F5E542DA3EA20341C382D0E9DE16603EE6CDBA0D8E DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"451:7373:7:-:0;;;769:44;;;;;;;;;;787:22;:20;;;:22;;:::i;:::-;451:7373;;5939:280:2;6007:13;;;;;;;;;;;6006:14;5998:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;6094:15;6078:31;;:12;;;;;;;;;;:31;;;6074:139;;6140:15;6125:12;;:30;;;;;;;;;;;;;;;;;;6174:28;6186:15;6174:28;;;;;;:::i;:::-;;;;;;;;6074:139;5939:280::o;7:169:11:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:226::-;322:34;318:1;310:6;306:14;299:58;391:9;386:2;378:6;374:15;367:34;182:226;:::o;414:366::-;556:3;577:67;641:2;636:3;577:67;:::i;:::-;570:74;;653:93;742:3;653:93;:::i;:::-;771:2;766:3;762:12;755:19;;414:366;;;:::o;786:419::-;952:4;990:2;979:9;975:18;967:26;;1039:9;1033:4;1029:20;1025:1;1014:9;1010:17;1003:47;1067:131;1193:4;1067:131;:::i;:::-;1059:139;;786:419;;;:::o;1211:86::-;1246:7;1286:4;1279:5;1275:16;1264:27;;1211:86;;;:::o;1303:112::-;1386:22;1402:5;1386:22;:::i;:::-;1381:3;1374:35;1303:112;;:::o;1421:214::-;1510:4;1548:2;1537:9;1533:18;1525:26;;1561:67;1625:1;1614:9;1610:17;1601:6;1561:67;:::i;:::-;1421:214;;;;:::o;451:7373:7:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@__Ownable2Step_init_26":{"entryPoint":8701,"id":26,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_unchained_145":{"entryPoint":9758,"id":145,"parameterSlots":0,"returnSlots":0},"@__Pausable_init_440":{"entryPoint":8790,"id":440,"parameterSlots":0,"returnSlots":0},"@__Pausable_init_unchained_450":{"entryPoint":9855,"id":450,"parameterSlots":0,"returnSlots":0},"@_checkOwner_176":{"entryPoint":8384,"id":176,"parameterSlots":0,"returnSlots":0},"@_handler_1272":{"entryPoint":9052,"id":1272,"parameterSlots":5,"returnSlots":0},"@_msgSender_894":{"entryPoint":8658,"id":894,"parameterSlots":0,"returnSlots":1},"@_pause_514":{"entryPoint":8879,"id":514,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_487":{"entryPoint":8978,"id":487,"parameterSlots":0,"returnSlots":0},"@_requirePaused_498":{"entryPoint":9487,"id":498,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_233":{"entryPoint":9560,"id":233,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_78":{"entryPoint":8609,"id":78,"parameterSlots":1,"returnSlots":0},"@_unpause_530":{"entryPoint":8510,"id":530,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_100":{"entryPoint":4163,"id":100,"parameterSlots":0,"returnSlots":0},"@createOrder_1216":{"entryPoint":5191,"id":1216,"parameterSlots":9,"returnSlots":1},"@getFeeDetails_1608":{"entryPoint":4700,"id":1608,"parameterSlots":0,"returnSlots":2},"@getOrderInfo_1547":{"entryPoint":3626,"id":1547,"parameterSlots":1,"returnSlots":1},"@getSupportedInstitutionByCode_1580":{"entryPoint":4737,"id":1580,"parameterSlots":1,"returnSlots":1},"@getSupportedInstitutions_1595":{"entryPoint":963,"id":1595,"parameterSlots":1,"returnSlots":1},"@initialize_1055":{"entryPoint":4304,"id":1055,"parameterSlots":0,"returnSlots":0},"@isContract_554":{"entryPoint":8666,"id":554,"parameterSlots":1,"returnSlots":1},"@isTokenSupported_1566":{"entryPoint":3534,"id":1566,"parameterSlots":1,"returnSlots":1},"@owner_162":{"entryPoint":4658,"id":162,"parameterSlots":0,"returnSlots":1},"@pause_1078":{"entryPoint":4640,"id":1078,"parameterSlots":0,"returnSlots":0},"@paused_475":{"entryPoint":2307,"id":475,"parameterSlots":0,"returnSlots":1},"@pendingOwner_41":{"entryPoint":6541,"id":41,"parameterSlots":0,"returnSlots":1},"@refund_1533":{"entryPoint":2350,"id":1533,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_190":{"entryPoint":2330,"id":190,"parameterSlots":0,"returnSlots":0},"@setSupportedInstitutions_1787":{"entryPoint":1097,"id":1787,"parameterSlots":2,"returnSlots":0},"@settingManagerBool_1724":{"entryPoint":4802,"id":1724,"parameterSlots":3,"returnSlots":0},"@settle_1427":{"entryPoint":6583,"id":1427,"parameterSlots":4,"returnSlots":1},"@transferOwnership_61":{"entryPoint":8211,"id":61,"parameterSlots":1,"returnSlots":0},"@unpause_1088":{"entryPoint":1470,"id":1088,"parameterSlots":0,"returnSlots":0},"@updateProtocolAddress_1876":{"entryPoint":1488,"id":1876,"parameterSlots":2,"returnSlots":0},"@updateProtocolFee_1804":{"entryPoint":2200,"id":1804,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr":{"entryPoint":10928,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":11244,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr":{"entryPoint":11033,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":14038,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":10312,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_calldata_ptr":{"entryPoint":12290,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_struct$_Institution_$2058_memory_ptr":{"entryPoint":10848,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":11525,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64":{"entryPoint":11372,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint96":{"entryPoint":12264,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":11610,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_bytes32t_uint96t_addresst_uint256t_addresst_string_calldata_ptr":{"entryPoint":12376,"id":null,"parameterSlots":2,"returnSlots":9},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":14059,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":10333,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":11265,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_addresst_uint256":{"entryPoint":12158,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes32t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr":{"entryPoint":11079,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_bytes32t_addresst_uint64":{"entryPoint":12632,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_bytes32":{"entryPoint":11546,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint64":{"entryPoint":11393,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_struct$_Institution_$2058_memory_ptr_to_t_struct$_Institution_$2058_memory_ptr":{"entryPoint":10484,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_struct$_Institution_$2058_storage_to_t_struct$_Institution_$2058_memory_ptr":{"entryPoint":12934,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":11655,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":11971,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":10521,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage_to_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":12971,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool":{"entryPoint":11685,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":11450,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32":{"entryPoint":10422,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":12590,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack":{"entryPoint":14641,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":15252,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd_to_t_string_memory_ptr_fromStack":{"entryPoint":13799,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack":{"entryPoint":16378,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack":{"entryPoint":13156,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack":{"entryPoint":14361,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2_to_t_string_memory_ptr_fromStack":{"entryPoint":16054,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack":{"entryPoint":15838,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack":{"entryPoint":14507,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack":{"entryPoint":14724,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5_to_t_string_memory_ptr_fromStack":{"entryPoint":13691,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":15584,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack":{"entryPoint":13302,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de_to_t_string_memory_ptr_fromStack":{"entryPoint":13907,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7_to_t_string_memory_ptr_fromStack":{"entryPoint":16162,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4_to_t_string_memory_ptr_fromStack":{"entryPoint":14832,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1_to_t_string_memory_ptr_fromStack":{"entryPoint":15946,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack":{"entryPoint":15730,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack":{"entryPoint":13448,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243_to_t_string_memory_ptr_fromStack":{"entryPoint":13583,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8_to_t_string_memory_ptr_fromStack":{"entryPoint":16270,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_InstitutionByCode_$2063_memory_ptr_to_t_struct$_InstitutionByCode_$2063_memory_ptr_fromStack":{"entryPoint":12084,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_struct$_Institution_$2058_memory_ptr_to_t_struct$_Institution_$2058_memory_ptr":{"entryPoint":10437,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_struct$_Institution_$2058_storage_to_t_struct$_Institution_$2058_memory_ptr":{"entryPoint":12863,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_struct$_Order_$1960_memory_ptr_to_t_struct$_Order_$1960_memory_ptr_fromStack":{"entryPoint":11739,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":11670,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":12028,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":12013,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint96_fromStack":{"entryPoint":15487,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint256_fromStack":{"entryPoint":15222,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint96":{"entryPoint":11724,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":11986,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":14899,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":13974,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":10615,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage__to_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13064,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":11465,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":12605,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint64__to_t_bytes32_t_uint96__fromStack_reversed":{"entryPoint":15502,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":14656,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13834,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16413,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13191,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14396,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16089,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15873,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14542,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14759,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13726,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15619,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13337,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13942,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16197,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14867,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15981,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15765,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13483,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13618,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16305,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_InstitutionByCode_$2063_memory_ptr__to_t_struct$_InstitutionByCode_$2063_memory_ptr__fromStack_reversed":{"entryPoint":12131,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_Order_$1960_memory_ptr__to_t_struct$_Order_$1960_memory_ptr__fromStack_reversed":{"entryPoint":11943,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":14255,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bytes32_t_uint96_t_bytes32_t_string_calldata_ptr__to_t_uint256_t_bytes32_t_uint256_t_bytes32_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15297,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":13515,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64_t_uint256__to_t_uint64_t_uint256__fromStack_reversed":{"entryPoint":12043,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":10767,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":10259,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr":{"entryPoint":10794,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr":{"entryPoint":10406,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage":{"entryPoint":12793,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr":{"entryPoint":10378,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage":{"entryPoint":12782,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr":{"entryPoint":10508,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage":{"entryPoint":12958,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":10389,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":13098,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":14151,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":15139,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":15026,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":14203,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint96":{"entryPoint":15389,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_from_storage_t_bytes32":{"entryPoint":12827,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address":{"entryPoint":11203,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":11438,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":10279,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":14574,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":11171,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":11492,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":11329,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":14584,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":11700,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_1_by_1_to_t_uint8":{"entryPoint":14607,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint64_to_t_uint96":{"entryPoint":15453,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint96_to_t_uint256":{"entryPoint":15188,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":15237,"id":null,"parameterSlots":3,"returnSlots":0},"extract_from_storage_value_offset_0t_bytes32":{"entryPoint":12837,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":10718,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":14597,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":14954,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":14104,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":15092,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":12735,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":10671,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":12285,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":10649,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":10843,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":10838,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":10274,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":10269,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":10654,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":12814,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd":{"entryPoint":13758,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a":{"entryPoint":16337,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf":{"entryPoint":13115,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc":{"entryPoint":14282,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2":{"entryPoint":16013,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a":{"entryPoint":15797,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759":{"entryPoint":14428,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338":{"entryPoint":14683,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5":{"entryPoint":13650,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":15543,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead":{"entryPoint":13223,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de":{"entryPoint":13866,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7":{"entryPoint":16121,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4":{"entryPoint":14791,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1":{"entryPoint":15905,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b":{"entryPoint":15651,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4":{"entryPoint":13369,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243":{"entryPoint":13542,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8":{"entryPoint":16229,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":11221,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":14015,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":10289,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":11502,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":11349,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint96":{"entryPoint":12241,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:50065:11","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:11","statements":[{"nodeType":"YulAssignment","src":"57:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:11"},"nodeType":"YulFunctionCall","src":"67:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:11","type":""}],"src":"7:75:11"},{"body":{"nodeType":"YulBlock","src":"177:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:11"},"nodeType":"YulFunctionCall","src":"187:12:11"},"nodeType":"YulExpressionStatement","src":"187:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:11"},{"body":{"nodeType":"YulBlock","src":"300:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:11"},"nodeType":"YulFunctionCall","src":"310:12:11"},"nodeType":"YulExpressionStatement","src":"310:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:11"},{"body":{"nodeType":"YulBlock","src":"379:32:11","statements":[{"nodeType":"YulAssignment","src":"389:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:11"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:11","type":""}],"src":"334:77:11"},{"body":{"nodeType":"YulBlock","src":"460:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:11"},"nodeType":"YulFunctionCall","src":"519:12:11"},"nodeType":"YulExpressionStatement","src":"519:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:11"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"490:17:11"},"nodeType":"YulFunctionCall","src":"490:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:11"},"nodeType":"YulFunctionCall","src":"480:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:11"},"nodeType":"YulFunctionCall","src":"473:43:11"},"nodeType":"YulIf","src":"470:63:11"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:11","type":""}],"src":"417:122:11"},{"body":{"nodeType":"YulBlock","src":"597:87:11","statements":[{"nodeType":"YulAssignment","src":"607:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"629:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"616:12:11"},"nodeType":"YulFunctionCall","src":"616:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"607:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"672:5:11"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"645:26:11"},"nodeType":"YulFunctionCall","src":"645:33:11"},"nodeType":"YulExpressionStatement","src":"645:33:11"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"575:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"583:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"591:5:11","type":""}],"src":"545:139:11"},{"body":{"nodeType":"YulBlock","src":"756:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"802:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"804:77:11"},"nodeType":"YulFunctionCall","src":"804:79:11"},"nodeType":"YulExpressionStatement","src":"804:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"777:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"786:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"773:3:11"},"nodeType":"YulFunctionCall","src":"773:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"798:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"769:3:11"},"nodeType":"YulFunctionCall","src":"769:32:11"},"nodeType":"YulIf","src":"766:119:11"},{"nodeType":"YulBlock","src":"895:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"910:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"924:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"914:6:11","type":""}]},{"nodeType":"YulAssignment","src":"939:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"974:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"985:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"970:3:11"},"nodeType":"YulFunctionCall","src":"970:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"994:7:11"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"949:20:11"},"nodeType":"YulFunctionCall","src":"949:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"939:6:11"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"726:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"737:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"749:6:11","type":""}],"src":"690:329:11"},{"body":{"nodeType":"YulBlock","src":"1128:40:11","statements":[{"nodeType":"YulAssignment","src":"1139:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1155:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1149:5:11"},"nodeType":"YulFunctionCall","src":"1149:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1139:6:11"}]}]},"name":"array_length_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1111:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1121:6:11","type":""}],"src":"1025:143:11"},{"body":{"nodeType":"YulBlock","src":"1314:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1331:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"1336:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1324:6:11"},"nodeType":"YulFunctionCall","src":"1324:19:11"},"nodeType":"YulExpressionStatement","src":"1324:19:11"},{"nodeType":"YulAssignment","src":"1352:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1371:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"1376:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1367:3:11"},"nodeType":"YulFunctionCall","src":"1367:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1352:11:11"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1286:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"1291:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1302:11:11","type":""}],"src":"1174:213:11"},{"body":{"nodeType":"YulBlock","src":"1494:60:11","statements":[{"nodeType":"YulAssignment","src":"1504:11:11","value":{"name":"ptr","nodeType":"YulIdentifier","src":"1512:3:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1504:4:11"}]},{"nodeType":"YulAssignment","src":"1525:22:11","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1537:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"1542:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1533:3:11"},"nodeType":"YulFunctionCall","src":"1533:14:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1525:4:11"}]}]},"name":"array_dataslot_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1481:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1489:4:11","type":""}],"src":"1393:161:11"},{"body":{"nodeType":"YulBlock","src":"1615:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1632:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1655:5:11"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1637:17:11"},"nodeType":"YulFunctionCall","src":"1637:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1625:6:11"},"nodeType":"YulFunctionCall","src":"1625:37:11"},"nodeType":"YulExpressionStatement","src":"1625:37:11"}]},"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1603:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1610:3:11","type":""}],"src":"1560:108:11"},{"body":{"nodeType":"YulBlock","src":"1864:391:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1874:26:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1890:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"1895:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1886:3:11"},"nodeType":"YulFunctionCall","src":"1886:14:11"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"1878:4:11","type":""}]},{"nodeType":"YulBlock","src":"1910:164:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1945:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1975:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"1982:4:11","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1971:3:11"},"nodeType":"YulFunctionCall","src":"1971:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1965:5:11"},"nodeType":"YulFunctionCall","src":"1965:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"1949:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"2035:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2053:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"2058:4:11","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2049:3:11"},"nodeType":"YulFunctionCall","src":"2049:14:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"2001:33:11"},"nodeType":"YulFunctionCall","src":"2001:63:11"},"nodeType":"YulExpressionStatement","src":"2001:63:11"}]},{"nodeType":"YulBlock","src":"2084:164:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2119:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2149:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"2156:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2145:3:11"},"nodeType":"YulFunctionCall","src":"2145:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2139:5:11"},"nodeType":"YulFunctionCall","src":"2139:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"2123:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"2209:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2227:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"2232:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2223:3:11"},"nodeType":"YulFunctionCall","src":"2223:14:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"2175:33:11"},"nodeType":"YulFunctionCall","src":"2175:63:11"},"nodeType":"YulExpressionStatement","src":"2175:63:11"}]}]},"name":"abi_encode_t_struct$_Institution_$2058_memory_ptr_to_t_struct$_Institution_$2058_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1851:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1858:3:11","type":""}],"src":"1750:505:11"},{"body":{"nodeType":"YulBlock","src":"2399:157:11","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2501:6:11"},{"name":"pos","nodeType":"YulIdentifier","src":"2509:3:11"}],"functionName":{"name":"abi_encode_t_struct$_Institution_$2058_memory_ptr_to_t_struct$_Institution_$2058_memory_ptr","nodeType":"YulIdentifier","src":"2409:91:11"},"nodeType":"YulFunctionCall","src":"2409:104:11"},"nodeType":"YulExpressionStatement","src":"2409:104:11"},{"nodeType":"YulAssignment","src":"2522:28:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2540:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"2545:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2536:3:11"},"nodeType":"YulFunctionCall","src":"2536:14:11"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"2522:10:11"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_Institution_$2058_memory_ptr_to_t_struct$_Institution_$2058_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"2372:6:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2380:3:11","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"2388:10:11","type":""}],"src":"2261:295:11"},{"body":{"nodeType":"YulBlock","src":"2666:38:11","statements":[{"nodeType":"YulAssignment","src":"2676:22:11","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2688:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"2693:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2684:3:11"},"nodeType":"YulFunctionCall","src":"2684:14:11"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"2676:4:11"}]}]},"name":"array_nextElement_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2653:3:11","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"2661:4:11","type":""}],"src":"2562:142:11"},{"body":{"nodeType":"YulBlock","src":"2972:782:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2982:97:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3073:5:11"}],"functionName":{"name":"array_length_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2996:76:11"},"nodeType":"YulFunctionCall","src":"2996:83:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2986:6:11","type":""}]},{"nodeType":"YulAssignment","src":"3088:122:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3198:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"3203:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3095:102:11"},"nodeType":"YulFunctionCall","src":"3095:115:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3088:3:11"}]},{"nodeType":"YulVariableDeclaration","src":"3219:100:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3313:5:11"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3234:78:11"},"nodeType":"YulFunctionCall","src":"3234:85:11"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"3223:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3328:21:11","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"3342:7:11"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"3332:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3418:311:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3432:34:11","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3459:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3453:5:11"},"nodeType":"YulFunctionCall","src":"3453:13:11"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"3436:13:11","type":""}]},{"nodeType":"YulAssignment","src":"3479:128:11","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"3588:13:11"},{"name":"pos","nodeType":"YulIdentifier","src":"3603:3:11"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_Institution_$2058_memory_ptr_to_t_struct$_Institution_$2058_memory_ptr","nodeType":"YulIdentifier","src":"3486:101:11"},"nodeType":"YulFunctionCall","src":"3486:121:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3479:3:11"}]},{"nodeType":"YulAssignment","src":"3620:99:11","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3712:6:11"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3630:81:11"},"nodeType":"YulFunctionCall","src":"3630:89:11"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3620:6:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3380:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"3383:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3377:2:11"},"nodeType":"YulFunctionCall","src":"3377:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3391:18:11","statements":[{"nodeType":"YulAssignment","src":"3393:14:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3402:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"3405:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3398:3:11"},"nodeType":"YulFunctionCall","src":"3398:9:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3393:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"3362:14:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3364:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3373:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3368:1:11","type":""}]}]},"src":"3358:371:11"},{"nodeType":"YulAssignment","src":"3738:10:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"3745:3:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3738:3:11"}]}]},"name":"abi_encode_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2951:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2958:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2967:3:11","type":""}],"src":"2790:964:11"},{"body":{"nodeType":"YulBlock","src":"3966:283:11","statements":[{"nodeType":"YulAssignment","src":"3976:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3988:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3999:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3984:3:11"},"nodeType":"YulFunctionCall","src":"3984:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3976:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4023:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4034:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4019:3:11"},"nodeType":"YulFunctionCall","src":"4019:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4042:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4048:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4038:3:11"},"nodeType":"YulFunctionCall","src":"4038:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4012:6:11"},"nodeType":"YulFunctionCall","src":"4012:47:11"},"nodeType":"YulExpressionStatement","src":"4012:47:11"},{"nodeType":"YulAssignment","src":"4068:174:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4228:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"4237:4:11"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4076:151:11"},"nodeType":"YulFunctionCall","src":"4076:166:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4068:4:11"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3938:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3950:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3961:4:11","type":""}],"src":"3760:489:11"},{"body":{"nodeType":"YulBlock","src":"4344:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4361:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4364:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4354:6:11"},"nodeType":"YulFunctionCall","src":"4354:12:11"},"nodeType":"YulExpressionStatement","src":"4354:12:11"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"4255:117:11"},{"body":{"nodeType":"YulBlock","src":"4426:54:11","statements":[{"nodeType":"YulAssignment","src":"4436:38:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4454:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"4461:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4450:3:11"},"nodeType":"YulFunctionCall","src":"4450:14:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4470:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4466:3:11"},"nodeType":"YulFunctionCall","src":"4466:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4446:3:11"},"nodeType":"YulFunctionCall","src":"4446:28:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4436:6:11"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4409:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4419:6:11","type":""}],"src":"4378:102:11"},{"body":{"nodeType":"YulBlock","src":"4514:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4531:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4534:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4524:6:11"},"nodeType":"YulFunctionCall","src":"4524:88:11"},"nodeType":"YulExpressionStatement","src":"4524:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4628:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4631:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4621:6:11"},"nodeType":"YulFunctionCall","src":"4621:15:11"},"nodeType":"YulExpressionStatement","src":"4621:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4652:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4655:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4645:6:11"},"nodeType":"YulFunctionCall","src":"4645:15:11"},"nodeType":"YulExpressionStatement","src":"4645:15:11"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"4486:180:11"},{"body":{"nodeType":"YulBlock","src":"4715:238:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4725:58:11","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4747:6:11"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4777:4:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4755:21:11"},"nodeType":"YulFunctionCall","src":"4755:27:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4743:3:11"},"nodeType":"YulFunctionCall","src":"4743:40:11"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4729:10:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"4894:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4896:16:11"},"nodeType":"YulFunctionCall","src":"4896:18:11"},"nodeType":"YulExpressionStatement","src":"4896:18:11"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4837:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"4849:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4834:2:11"},"nodeType":"YulFunctionCall","src":"4834:34:11"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4873:10:11"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4885:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4870:2:11"},"nodeType":"YulFunctionCall","src":"4870:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4831:2:11"},"nodeType":"YulFunctionCall","src":"4831:62:11"},"nodeType":"YulIf","src":"4828:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4932:2:11","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4936:10:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4925:6:11"},"nodeType":"YulFunctionCall","src":"4925:22:11"},"nodeType":"YulExpressionStatement","src":"4925:22:11"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4701:6:11","type":""},{"name":"size","nodeType":"YulTypedName","src":"4709:4:11","type":""}],"src":"4672:281:11"},{"body":{"nodeType":"YulBlock","src":"5000:88:11","statements":[{"nodeType":"YulAssignment","src":"5010:30:11","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"5020:18:11"},"nodeType":"YulFunctionCall","src":"5020:20:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5010:6:11"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5069:6:11"},{"name":"size","nodeType":"YulIdentifier","src":"5077:4:11"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"5049:19:11"},"nodeType":"YulFunctionCall","src":"5049:33:11"},"nodeType":"YulExpressionStatement","src":"5049:33:11"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"4984:4:11","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4993:6:11","type":""}],"src":"4959:129:11"},{"body":{"nodeType":"YulBlock","src":"5205:229:11","statements":[{"body":{"nodeType":"YulBlock","src":"5310:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5312:16:11"},"nodeType":"YulFunctionCall","src":"5312:18:11"},"nodeType":"YulExpressionStatement","src":"5312:18:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5282:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"5290:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5279:2:11"},"nodeType":"YulFunctionCall","src":"5279:30:11"},"nodeType":"YulIf","src":"5276:56:11"},{"nodeType":"YulAssignment","src":"5342:25:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5354:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"5362:4:11","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5350:3:11"},"nodeType":"YulFunctionCall","src":"5350:17:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5342:4:11"}]},{"nodeType":"YulAssignment","src":"5404:23:11","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5416:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"5422:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5412:3:11"},"nodeType":"YulFunctionCall","src":"5412:15:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5404:4:11"}]}]},"name":"array_allocation_size_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"5189:6:11","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"5200:4:11","type":""}],"src":"5094:340:11"},{"body":{"nodeType":"YulBlock","src":"5529:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5546:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5549:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5539:6:11"},"nodeType":"YulFunctionCall","src":"5539:12:11"},"nodeType":"YulExpressionStatement","src":"5539:12:11"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"5440:117:11"},{"body":{"nodeType":"YulBlock","src":"5652:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5669:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5672:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5662:6:11"},"nodeType":"YulFunctionCall","src":"5662:12:11"},"nodeType":"YulExpressionStatement","src":"5662:12:11"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"5563:117:11"},{"body":{"nodeType":"YulBlock","src":"5775:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5792:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5795:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5785:6:11"},"nodeType":"YulFunctionCall","src":"5785:12:11"},"nodeType":"YulExpressionStatement","src":"5785:12:11"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"5686:117:11"},{"body":{"nodeType":"YulBlock","src":"5933:494:11","statements":[{"body":{"nodeType":"YulBlock","src":"5977:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"5979:77:11"},"nodeType":"YulFunctionCall","src":"5979:79:11"},"nodeType":"YulExpressionStatement","src":"5979:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5954:3:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"5959:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5950:3:11"},"nodeType":"YulFunctionCall","src":"5950:19:11"},{"kind":"number","nodeType":"YulLiteral","src":"5971:4:11","type":"","value":"0x40"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5946:3:11"},"nodeType":"YulFunctionCall","src":"5946:30:11"},"nodeType":"YulIf","src":"5943:117:11"},{"nodeType":"YulAssignment","src":"6069:30:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6094:4:11","type":"","value":"0x40"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6078:15:11"},"nodeType":"YulFunctionCall","src":"6078:21:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6069:5:11"}]},{"nodeType":"YulBlock","src":"6109:150:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6144:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6158:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6148:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6184:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"6191:4:11","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6180:3:11"},"nodeType":"YulFunctionCall","src":"6180:16:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6223:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"6234:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6219:3:11"},"nodeType":"YulFunctionCall","src":"6219:22:11"},{"name":"end","nodeType":"YulIdentifier","src":"6243:3:11"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"6198:20:11"},"nodeType":"YulFunctionCall","src":"6198:49:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6173:6:11"},"nodeType":"YulFunctionCall","src":"6173:75:11"},"nodeType":"YulExpressionStatement","src":"6173:75:11"}]},{"nodeType":"YulBlock","src":"6269:151:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6304:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6318:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6308:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6345:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"6352:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6341:3:11"},"nodeType":"YulFunctionCall","src":"6341:16:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6384:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"6395:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6380:3:11"},"nodeType":"YulFunctionCall","src":"6380:22:11"},{"name":"end","nodeType":"YulIdentifier","src":"6404:3:11"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"6359:20:11"},"nodeType":"YulFunctionCall","src":"6359:49:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6334:6:11"},"nodeType":"YulFunctionCall","src":"6334:75:11"},"nodeType":"YulExpressionStatement","src":"6334:75:11"}]}]},"name":"abi_decode_t_struct$_Institution_$2058_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5908:9:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"5919:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5927:5:11","type":""}],"src":"5849:578:11"},{"body":{"nodeType":"YulBlock","src":"6606:666:11","statements":[{"nodeType":"YulAssignment","src":"6616:119:11","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6727:6:11"}],"functionName":{"name":"array_allocation_size_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6641:85:11"},"nodeType":"YulFunctionCall","src":"6641:93:11"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6625:15:11"},"nodeType":"YulFunctionCall","src":"6625:110:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6616:5:11"}]},{"nodeType":"YulVariableDeclaration","src":"6744:16:11","value":{"name":"array","nodeType":"YulIdentifier","src":"6755:5:11"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6748:3:11","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6777:5:11"},{"name":"length","nodeType":"YulIdentifier","src":"6784:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6770:6:11"},"nodeType":"YulFunctionCall","src":"6770:21:11"},"nodeType":"YulExpressionStatement","src":"6770:21:11"},{"nodeType":"YulAssignment","src":"6800:23:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6811:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"6818:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6807:3:11"},"nodeType":"YulFunctionCall","src":"6807:16:11"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6800:3:11"}]},{"nodeType":"YulVariableDeclaration","src":"6833:44:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6851:6:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6863:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6871:4:11","type":"","value":"0x40"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6859:3:11"},"nodeType":"YulFunctionCall","src":"6859:17:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6847:3:11"},"nodeType":"YulFunctionCall","src":"6847:30:11"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"6837:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"6905:103:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6919:77:11"},"nodeType":"YulFunctionCall","src":"6919:79:11"},"nodeType":"YulExpressionStatement","src":"6919:79:11"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"6892:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"6900:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6889:2:11"},"nodeType":"YulFunctionCall","src":"6889:15:11"},"nodeType":"YulIf","src":"6886:122:11"},{"body":{"nodeType":"YulBlock","src":"7093:173:11","statements":[{"nodeType":"YulVariableDeclaration","src":"7108:21:11","value":{"name":"src","nodeType":"YulIdentifier","src":"7126:3:11"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"7112:10:11","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7150:3:11"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"7205:10:11"},{"name":"end","nodeType":"YulIdentifier","src":"7217:3:11"}],"functionName":{"name":"abi_decode_t_struct$_Institution_$2058_memory_ptr","nodeType":"YulIdentifier","src":"7155:49:11"},"nodeType":"YulFunctionCall","src":"7155:66:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7143:6:11"},"nodeType":"YulFunctionCall","src":"7143:79:11"},"nodeType":"YulExpressionStatement","src":"7143:79:11"},{"nodeType":"YulAssignment","src":"7235:21:11","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7246:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"7251:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7242:3:11"},"nodeType":"YulFunctionCall","src":"7242:14:11"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7235:3:11"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7046:3:11"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"7051:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7043:2:11"},"nodeType":"YulFunctionCall","src":"7043:15:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7059:25:11","statements":[{"nodeType":"YulAssignment","src":"7061:21:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7072:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"7077:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7068:3:11"},"nodeType":"YulFunctionCall","src":"7068:14:11"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"7061:3:11"}]}]},"pre":{"nodeType":"YulBlock","src":"7021:21:11","statements":[{"nodeType":"YulVariableDeclaration","src":"7023:17:11","value":{"name":"offset","nodeType":"YulIdentifier","src":"7034:6:11"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"7027:3:11","type":""}]}]},"src":"7017:249:11"}]},"name":"abi_decode_available_length_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6576:6:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"6584:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"6592:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6600:5:11","type":""}],"src":"6475:797:11"},{"body":{"nodeType":"YulBlock","src":"7426:322:11","statements":[{"body":{"nodeType":"YulBlock","src":"7475:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"7477:77:11"},"nodeType":"YulFunctionCall","src":"7477:79:11"},"nodeType":"YulExpressionStatement","src":"7477:79:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7454:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7462:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7450:3:11"},"nodeType":"YulFunctionCall","src":"7450:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"7469:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7446:3:11"},"nodeType":"YulFunctionCall","src":"7446:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7439:6:11"},"nodeType":"YulFunctionCall","src":"7439:35:11"},"nodeType":"YulIf","src":"7436:122:11"},{"nodeType":"YulVariableDeclaration","src":"7567:34:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7594:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7581:12:11"},"nodeType":"YulFunctionCall","src":"7581:20:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7571:6:11","type":""}]},{"nodeType":"YulAssignment","src":"7610:132:11","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7715:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7723:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7711:3:11"},"nodeType":"YulFunctionCall","src":"7711:17:11"},{"name":"length","nodeType":"YulIdentifier","src":"7730:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"7738:3:11"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7619:91:11"},"nodeType":"YulFunctionCall","src":"7619:123:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7610:5:11"}]}]},"name":"abi_decode_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7404:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"7412:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7420:5:11","type":""}],"src":"7320:428:11"},{"body":{"nodeType":"YulBlock","src":"7891:605:11","statements":[{"body":{"nodeType":"YulBlock","src":"7937:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7939:77:11"},"nodeType":"YulFunctionCall","src":"7939:79:11"},"nodeType":"YulExpressionStatement","src":"7939:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7912:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"7921:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7908:3:11"},"nodeType":"YulFunctionCall","src":"7908:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"7933:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7904:3:11"},"nodeType":"YulFunctionCall","src":"7904:32:11"},"nodeType":"YulIf","src":"7901:119:11"},{"nodeType":"YulBlock","src":"8030:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8045:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"8059:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8049:6:11","type":""}]},{"nodeType":"YulAssignment","src":"8074:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8109:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"8120:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8105:3:11"},"nodeType":"YulFunctionCall","src":"8105:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8129:7:11"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"8084:20:11"},"nodeType":"YulFunctionCall","src":"8084:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8074:6:11"}]}]},{"nodeType":"YulBlock","src":"8157:332:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8172:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8203:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8214:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8199:3:11"},"nodeType":"YulFunctionCall","src":"8199:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8186:12:11"},"nodeType":"YulFunctionCall","src":"8186:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8176:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"8265:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8267:77:11"},"nodeType":"YulFunctionCall","src":"8267:79:11"},"nodeType":"YulExpressionStatement","src":"8267:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8237:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8245:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8234:2:11"},"nodeType":"YulFunctionCall","src":"8234:30:11"},"nodeType":"YulIf","src":"8231:117:11"},{"nodeType":"YulAssignment","src":"8362:117:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8451:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"8462:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8447:3:11"},"nodeType":"YulFunctionCall","src":"8447:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8471:7:11"}],"functionName":{"name":"abi_decode_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8372:74:11"},"nodeType":"YulFunctionCall","src":"8372:107:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8362:6:11"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7853:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7864:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7876:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7884:6:11","type":""}],"src":"7754:742:11"},{"body":{"nodeType":"YulBlock","src":"8547:81:11","statements":[{"nodeType":"YulAssignment","src":"8557:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8572:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"8579:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8568:3:11"},"nodeType":"YulFunctionCall","src":"8568:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8557:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8529:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8539:7:11","type":""}],"src":"8502:126:11"},{"body":{"nodeType":"YulBlock","src":"8679:51:11","statements":[{"nodeType":"YulAssignment","src":"8689:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8718:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"8700:17:11"},"nodeType":"YulFunctionCall","src":"8700:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8689:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8661:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8671:7:11","type":""}],"src":"8634:96:11"},{"body":{"nodeType":"YulBlock","src":"8779:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"8836:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8845:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8848:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8838:6:11"},"nodeType":"YulFunctionCall","src":"8838:12:11"},"nodeType":"YulExpressionStatement","src":"8838:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8802:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8827:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8809:17:11"},"nodeType":"YulFunctionCall","src":"8809:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8799:2:11"},"nodeType":"YulFunctionCall","src":"8799:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8792:6:11"},"nodeType":"YulFunctionCall","src":"8792:43:11"},"nodeType":"YulIf","src":"8789:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8772:5:11","type":""}],"src":"8736:122:11"},{"body":{"nodeType":"YulBlock","src":"8916:87:11","statements":[{"nodeType":"YulAssignment","src":"8926:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8948:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8935:12:11"},"nodeType":"YulFunctionCall","src":"8935:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8926:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8991:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"8964:26:11"},"nodeType":"YulFunctionCall","src":"8964:33:11"},"nodeType":"YulExpressionStatement","src":"8964:33:11"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8894:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"8902:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8910:5:11","type":""}],"src":"8864:139:11"},{"body":{"nodeType":"YulBlock","src":"9092:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"9138:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9140:77:11"},"nodeType":"YulFunctionCall","src":"9140:79:11"},"nodeType":"YulExpressionStatement","src":"9140:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9113:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"9122:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9109:3:11"},"nodeType":"YulFunctionCall","src":"9109:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"9134:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9105:3:11"},"nodeType":"YulFunctionCall","src":"9105:32:11"},"nodeType":"YulIf","src":"9102:119:11"},{"nodeType":"YulBlock","src":"9231:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"9246:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"9260:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9250:6:11","type":""}]},{"nodeType":"YulAssignment","src":"9275:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9310:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"9321:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9306:3:11"},"nodeType":"YulFunctionCall","src":"9306:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9330:7:11"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"9285:20:11"},"nodeType":"YulFunctionCall","src":"9285:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9275:6:11"}]}]},{"nodeType":"YulBlock","src":"9358:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"9373:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"9387:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9377:6:11","type":""}]},{"nodeType":"YulAssignment","src":"9403:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9438:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"9449:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9434:3:11"},"nodeType":"YulFunctionCall","src":"9434:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9458:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9413:20:11"},"nodeType":"YulFunctionCall","src":"9413:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9403:6:11"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9054:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9065:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9077:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9085:6:11","type":""}],"src":"9009:474:11"},{"body":{"nodeType":"YulBlock","src":"9533:57:11","statements":[{"nodeType":"YulAssignment","src":"9543:41:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9558:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"9565:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9554:3:11"},"nodeType":"YulFunctionCall","src":"9554:30:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9543:7:11"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9515:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9525:7:11","type":""}],"src":"9489:101:11"},{"body":{"nodeType":"YulBlock","src":"9638:78:11","statements":[{"body":{"nodeType":"YulBlock","src":"9694:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9703:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9706:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9696:6:11"},"nodeType":"YulFunctionCall","src":"9696:12:11"},"nodeType":"YulExpressionStatement","src":"9696:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9661:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9685:5:11"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"9668:16:11"},"nodeType":"YulFunctionCall","src":"9668:23:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9658:2:11"},"nodeType":"YulFunctionCall","src":"9658:34:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9651:6:11"},"nodeType":"YulFunctionCall","src":"9651:42:11"},"nodeType":"YulIf","src":"9648:62:11"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9631:5:11","type":""}],"src":"9596:120:11"},{"body":{"nodeType":"YulBlock","src":"9773:86:11","statements":[{"nodeType":"YulAssignment","src":"9783:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9805:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9792:12:11"},"nodeType":"YulFunctionCall","src":"9792:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9783:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9847:5:11"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"9821:25:11"},"nodeType":"YulFunctionCall","src":"9821:32:11"},"nodeType":"YulExpressionStatement","src":"9821:32:11"}]},"name":"abi_decode_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9751:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"9759:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9767:5:11","type":""}],"src":"9722:137:11"},{"body":{"nodeType":"YulBlock","src":"9930:262:11","statements":[{"body":{"nodeType":"YulBlock","src":"9976:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9978:77:11"},"nodeType":"YulFunctionCall","src":"9978:79:11"},"nodeType":"YulExpressionStatement","src":"9978:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9951:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"9960:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9947:3:11"},"nodeType":"YulFunctionCall","src":"9947:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"9972:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9943:3:11"},"nodeType":"YulFunctionCall","src":"9943:32:11"},"nodeType":"YulIf","src":"9940:119:11"},{"nodeType":"YulBlock","src":"10069:116:11","statements":[{"nodeType":"YulVariableDeclaration","src":"10084:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"10098:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10088:6:11","type":""}]},{"nodeType":"YulAssignment","src":"10113:62:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10147:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"10158:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10143:3:11"},"nodeType":"YulFunctionCall","src":"10143:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10167:7:11"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"10123:19:11"},"nodeType":"YulFunctionCall","src":"10123:52:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10113:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9900:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9911:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9923:6:11","type":""}],"src":"9865:327:11"},{"body":{"nodeType":"YulBlock","src":"10240:48:11","statements":[{"nodeType":"YulAssignment","src":"10250:32:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10275:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10268:6:11"},"nodeType":"YulFunctionCall","src":"10268:13:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10261:6:11"},"nodeType":"YulFunctionCall","src":"10261:21:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10250:7:11"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10222:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10232:7:11","type":""}],"src":"10198:90:11"},{"body":{"nodeType":"YulBlock","src":"10353:50:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10370:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10390:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"10375:14:11"},"nodeType":"YulFunctionCall","src":"10375:21:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10363:6:11"},"nodeType":"YulFunctionCall","src":"10363:34:11"},"nodeType":"YulExpressionStatement","src":"10363:34:11"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10341:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10348:3:11","type":""}],"src":"10294:109:11"},{"body":{"nodeType":"YulBlock","src":"10501:118:11","statements":[{"nodeType":"YulAssignment","src":"10511:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10523:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10534:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10519:3:11"},"nodeType":"YulFunctionCall","src":"10519:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10511:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10585:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10598:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10609:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10594:3:11"},"nodeType":"YulFunctionCall","src":"10594:17:11"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"10547:37:11"},"nodeType":"YulFunctionCall","src":"10547:65:11"},"nodeType":"YulExpressionStatement","src":"10547:65:11"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10473:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10485:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10496:4:11","type":""}],"src":"10409:210:11"},{"body":{"nodeType":"YulBlock","src":"10670:32:11","statements":[{"nodeType":"YulAssignment","src":"10680:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"10691:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10680:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10652:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10662:7:11","type":""}],"src":"10625:77:11"},{"body":{"nodeType":"YulBlock","src":"10751:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"10808:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10817:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10820:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10810:6:11"},"nodeType":"YulFunctionCall","src":"10810:12:11"},"nodeType":"YulExpressionStatement","src":"10810:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10774:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10799:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10781:17:11"},"nodeType":"YulFunctionCall","src":"10781:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10771:2:11"},"nodeType":"YulFunctionCall","src":"10771:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10764:6:11"},"nodeType":"YulFunctionCall","src":"10764:43:11"},"nodeType":"YulIf","src":"10761:63:11"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10744:5:11","type":""}],"src":"10708:122:11"},{"body":{"nodeType":"YulBlock","src":"10888:87:11","statements":[{"nodeType":"YulAssignment","src":"10898:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10920:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10907:12:11"},"nodeType":"YulFunctionCall","src":"10907:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10898:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10963:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"10936:26:11"},"nodeType":"YulFunctionCall","src":"10936:33:11"},"nodeType":"YulExpressionStatement","src":"10936:33:11"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10866:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"10874:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10882:5:11","type":""}],"src":"10836:139:11"},{"body":{"nodeType":"YulBlock","src":"11064:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"11110:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11112:77:11"},"nodeType":"YulFunctionCall","src":"11112:79:11"},"nodeType":"YulExpressionStatement","src":"11112:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11085:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"11094:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11081:3:11"},"nodeType":"YulFunctionCall","src":"11081:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"11106:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11077:3:11"},"nodeType":"YulFunctionCall","src":"11077:32:11"},"nodeType":"YulIf","src":"11074:119:11"},{"nodeType":"YulBlock","src":"11203:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"11218:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"11232:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11222:6:11","type":""}]},{"nodeType":"YulAssignment","src":"11247:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11282:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"11293:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11278:3:11"},"nodeType":"YulFunctionCall","src":"11278:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11302:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11257:20:11"},"nodeType":"YulFunctionCall","src":"11257:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11247:6:11"}]}]},{"nodeType":"YulBlock","src":"11330:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"11345:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"11359:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11349:6:11","type":""}]},{"nodeType":"YulAssignment","src":"11375:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11410:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"11421:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11406:3:11"},"nodeType":"YulFunctionCall","src":"11406:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11430:7:11"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"11385:20:11"},"nodeType":"YulFunctionCall","src":"11385:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11375:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11026:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11037:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11049:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11057:6:11","type":""}],"src":"10981:474:11"},{"body":{"nodeType":"YulBlock","src":"11527:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"11573:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11575:77:11"},"nodeType":"YulFunctionCall","src":"11575:79:11"},"nodeType":"YulExpressionStatement","src":"11575:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11548:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"11557:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11544:3:11"},"nodeType":"YulFunctionCall","src":"11544:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"11569:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11540:3:11"},"nodeType":"YulFunctionCall","src":"11540:32:11"},"nodeType":"YulIf","src":"11537:119:11"},{"nodeType":"YulBlock","src":"11666:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"11681:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"11695:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11685:6:11","type":""}]},{"nodeType":"YulAssignment","src":"11710:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11745:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"11756:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11741:3:11"},"nodeType":"YulFunctionCall","src":"11741:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11765:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11720:20:11"},"nodeType":"YulFunctionCall","src":"11720:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11710:6:11"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11497:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11508:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11520:6:11","type":""}],"src":"11461:329:11"},{"body":{"nodeType":"YulBlock","src":"11851:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11868:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11891:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"11873:17:11"},"nodeType":"YulFunctionCall","src":"11873:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11861:6:11"},"nodeType":"YulFunctionCall","src":"11861:37:11"},"nodeType":"YulExpressionStatement","src":"11861:37:11"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11839:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11846:3:11","type":""}],"src":"11796:108:11"},{"body":{"nodeType":"YulBlock","src":"11965:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11982:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12005:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11987:17:11"},"nodeType":"YulFunctionCall","src":"11987:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11975:6:11"},"nodeType":"YulFunctionCall","src":"11975:37:11"},"nodeType":"YulExpressionStatement","src":"11975:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11953:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11960:3:11","type":""}],"src":"11910:108:11"},{"body":{"nodeType":"YulBlock","src":"12073:50:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12090:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12110:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"12095:14:11"},"nodeType":"YulFunctionCall","src":"12095:21:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12083:6:11"},"nodeType":"YulFunctionCall","src":"12083:34:11"},"nodeType":"YulExpressionStatement","src":"12083:34:11"}]},"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12061:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12068:3:11","type":""}],"src":"12024:99:11"},{"body":{"nodeType":"YulBlock","src":"12173:65:11","statements":[{"nodeType":"YulAssignment","src":"12183:49:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12198:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"12205:26:11","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12194:3:11"},"nodeType":"YulFunctionCall","src":"12194:38:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12183:7:11"}]}]},"name":"cleanup_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12155:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12165:7:11","type":""}],"src":"12129:109:11"},{"body":{"nodeType":"YulBlock","src":"12297:52:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12314:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12336:5:11"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"12319:16:11"},"nodeType":"YulFunctionCall","src":"12319:23:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12307:6:11"},"nodeType":"YulFunctionCall","src":"12307:36:11"},"nodeType":"YulExpressionStatement","src":"12307:36:11"}]},"name":"abi_encode_t_uint96_to_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12285:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12292:3:11","type":""}],"src":"12244:105:11"},{"body":{"nodeType":"YulBlock","src":"12521:1838:11","statements":[{"nodeType":"YulVariableDeclaration","src":"12531:28:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12547:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"12552:6:11","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12543:3:11"},"nodeType":"YulFunctionCall","src":"12543:16:11"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"12535:4:11","type":""}]},{"nodeType":"YulBlock","src":"12569:166:11","statements":[{"nodeType":"YulVariableDeclaration","src":"12606:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12636:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"12643:4:11","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12632:3:11"},"nodeType":"YulFunctionCall","src":"12632:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12626:5:11"},"nodeType":"YulFunctionCall","src":"12626:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12610:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12696:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12714:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"12719:4:11","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12710:3:11"},"nodeType":"YulFunctionCall","src":"12710:14:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"12662:33:11"},"nodeType":"YulFunctionCall","src":"12662:63:11"},"nodeType":"YulExpressionStatement","src":"12662:63:11"}]},{"nodeType":"YulBlock","src":"12745:165:11","statements":[{"nodeType":"YulVariableDeclaration","src":"12781:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12811:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"12818:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12807:3:11"},"nodeType":"YulFunctionCall","src":"12807:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12801:5:11"},"nodeType":"YulFunctionCall","src":"12801:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12785:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12871:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12889:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"12894:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12885:3:11"},"nodeType":"YulFunctionCall","src":"12885:14:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"12837:33:11"},"nodeType":"YulFunctionCall","src":"12837:63:11"},"nodeType":"YulExpressionStatement","src":"12837:63:11"}]},{"nodeType":"YulBlock","src":"12920:178:11","statements":[{"nodeType":"YulVariableDeclaration","src":"12969:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12999:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"13006:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12995:3:11"},"nodeType":"YulFunctionCall","src":"12995:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12989:5:11"},"nodeType":"YulFunctionCall","src":"12989:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12973:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13059:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13077:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13082:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13073:3:11"},"nodeType":"YulFunctionCall","src":"13073:14:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"13025:33:11"},"nodeType":"YulFunctionCall","src":"13025:63:11"},"nodeType":"YulExpressionStatement","src":"13025:63:11"}]},{"nodeType":"YulBlock","src":"13108:169:11","statements":[{"nodeType":"YulVariableDeclaration","src":"13148:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13178:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"13185:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13174:3:11"},"nodeType":"YulFunctionCall","src":"13174:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13168:5:11"},"nodeType":"YulFunctionCall","src":"13168:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13152:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13238:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13256:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13261:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13252:3:11"},"nodeType":"YulFunctionCall","src":"13252:14:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"13204:33:11"},"nodeType":"YulFunctionCall","src":"13204:63:11"},"nodeType":"YulExpressionStatement","src":"13204:63:11"}]},{"nodeType":"YulBlock","src":"13287:171:11","statements":[{"nodeType":"YulVariableDeclaration","src":"13329:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13359:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"13366:4:11","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13355:3:11"},"nodeType":"YulFunctionCall","src":"13355:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13349:5:11"},"nodeType":"YulFunctionCall","src":"13349:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13333:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13419:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13437:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13442:4:11","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13433:3:11"},"nodeType":"YulFunctionCall","src":"13433:14:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"13385:33:11"},"nodeType":"YulFunctionCall","src":"13385:63:11"},"nodeType":"YulExpressionStatement","src":"13385:63:11"}]},{"nodeType":"YulBlock","src":"13468:165:11","statements":[{"nodeType":"YulVariableDeclaration","src":"13510:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13540:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"13547:4:11","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13536:3:11"},"nodeType":"YulFunctionCall","src":"13536:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13530:5:11"},"nodeType":"YulFunctionCall","src":"13530:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13514:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13594:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13612:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13617:4:11","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13608:3:11"},"nodeType":"YulFunctionCall","src":"13608:14:11"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"13566:27:11"},"nodeType":"YulFunctionCall","src":"13566:57:11"},"nodeType":"YulExpressionStatement","src":"13566:57:11"}]},{"nodeType":"YulBlock","src":"13643:164:11","statements":[{"nodeType":"YulVariableDeclaration","src":"13684:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13714:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"13721:4:11","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13710:3:11"},"nodeType":"YulFunctionCall","src":"13710:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13704:5:11"},"nodeType":"YulFunctionCall","src":"13704:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13688:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13768:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13786:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13791:4:11","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13782:3:11"},"nodeType":"YulFunctionCall","src":"13782:14:11"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"13740:27:11"},"nodeType":"YulFunctionCall","src":"13740:57:11"},"nodeType":"YulExpressionStatement","src":"13740:57:11"}]},{"nodeType":"YulBlock","src":"13817:173:11","statements":[{"nodeType":"YulVariableDeclaration","src":"13861:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13891:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"13898:4:11","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13887:3:11"},"nodeType":"YulFunctionCall","src":"13887:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13881:5:11"},"nodeType":"YulFunctionCall","src":"13881:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13865:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13951:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13969:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13974:4:11","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13965:3:11"},"nodeType":"YulFunctionCall","src":"13965:14:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"13917:33:11"},"nodeType":"YulFunctionCall","src":"13917:63:11"},"nodeType":"YulExpressionStatement","src":"13917:63:11"}]},{"nodeType":"YulBlock","src":"14000:172:11","statements":[{"nodeType":"YulVariableDeclaration","src":"14041:45:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14071:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"14078:6:11","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14067:3:11"},"nodeType":"YulFunctionCall","src":"14067:18:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14061:5:11"},"nodeType":"YulFunctionCall","src":"14061:25:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14045:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14131:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14149:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"14154:6:11","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14145:3:11"},"nodeType":"YulFunctionCall","src":"14145:16:11"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96","nodeType":"YulIdentifier","src":"14099:31:11"},"nodeType":"YulFunctionCall","src":"14099:63:11"},"nodeType":"YulExpressionStatement","src":"14099:63:11"}]},{"nodeType":"YulBlock","src":"14182:170:11","statements":[{"nodeType":"YulVariableDeclaration","src":"14219:45:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14249:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"14256:6:11","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14245:3:11"},"nodeType":"YulFunctionCall","src":"14245:18:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14239:5:11"},"nodeType":"YulFunctionCall","src":"14239:25:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14223:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14311:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14329:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"14334:6:11","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14325:3:11"},"nodeType":"YulFunctionCall","src":"14325:16:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"14277:33:11"},"nodeType":"YulFunctionCall","src":"14277:65:11"},"nodeType":"YulExpressionStatement","src":"14277:65:11"}]}]},"name":"abi_encode_t_struct$_Order_$1960_memory_ptr_to_t_struct$_Order_$1960_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12508:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12515:3:11","type":""}],"src":"12409:1950:11"},{"body":{"nodeType":"YulBlock","src":"14509:171:11","statements":[{"nodeType":"YulAssignment","src":"14519:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14531:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14542:3:11","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14527:3:11"},"nodeType":"YulFunctionCall","src":"14527:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14519:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14646:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14659:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14670:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14655:3:11"},"nodeType":"YulFunctionCall","src":"14655:17:11"}],"functionName":{"name":"abi_encode_t_struct$_Order_$1960_memory_ptr_to_t_struct$_Order_$1960_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14556:89:11"},"nodeType":"YulFunctionCall","src":"14556:117:11"},"nodeType":"YulExpressionStatement","src":"14556:117:11"}]},"name":"abi_encode_tuple_t_struct$_Order_$1960_memory_ptr__to_t_struct$_Order_$1960_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14481:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14493:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14504:4:11","type":""}],"src":"14365:315:11"},{"body":{"nodeType":"YulBlock","src":"14751:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14768:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14791:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"14773:17:11"},"nodeType":"YulFunctionCall","src":"14773:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14761:6:11"},"nodeType":"YulFunctionCall","src":"14761:37:11"},"nodeType":"YulExpressionStatement","src":"14761:37:11"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14739:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14746:3:11","type":""}],"src":"14686:118:11"},{"body":{"nodeType":"YulBlock","src":"14908:124:11","statements":[{"nodeType":"YulAssignment","src":"14918:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14930:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14941:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14926:3:11"},"nodeType":"YulFunctionCall","src":"14926:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14918:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14998:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15011:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15022:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15007:3:11"},"nodeType":"YulFunctionCall","src":"15007:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14954:43:11"},"nodeType":"YulFunctionCall","src":"14954:71:11"},"nodeType":"YulExpressionStatement","src":"14954:71:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14880:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14892:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14903:4:11","type":""}],"src":"14810:222:11"},{"body":{"nodeType":"YulBlock","src":"15101:52:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15118:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15140:5:11"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"15123:16:11"},"nodeType":"YulFunctionCall","src":"15123:23:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15111:6:11"},"nodeType":"YulFunctionCall","src":"15111:36:11"},"nodeType":"YulExpressionStatement","src":"15111:36:11"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15089:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15096:3:11","type":""}],"src":"15038:115:11"},{"body":{"nodeType":"YulBlock","src":"15224:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15241:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15264:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15246:17:11"},"nodeType":"YulFunctionCall","src":"15246:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15234:6:11"},"nodeType":"YulFunctionCall","src":"15234:37:11"},"nodeType":"YulExpressionStatement","src":"15234:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15212:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15219:3:11","type":""}],"src":"15159:118:11"},{"body":{"nodeType":"YulBlock","src":"15407:204:11","statements":[{"nodeType":"YulAssignment","src":"15417:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15429:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15440:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15425:3:11"},"nodeType":"YulFunctionCall","src":"15425:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15417:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15495:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15508:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15519:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15504:3:11"},"nodeType":"YulFunctionCall","src":"15504:17:11"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"15453:41:11"},"nodeType":"YulFunctionCall","src":"15453:69:11"},"nodeType":"YulExpressionStatement","src":"15453:69:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15576:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15589:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15600:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15585:3:11"},"nodeType":"YulFunctionCall","src":"15585:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15532:43:11"},"nodeType":"YulFunctionCall","src":"15532:72:11"},"nodeType":"YulExpressionStatement","src":"15532:72:11"}]},"name":"abi_encode_tuple_t_uint64_t_uint256__to_t_uint64_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15371:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15383:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15391:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15402:4:11","type":""}],"src":"15283:328:11"},{"body":{"nodeType":"YulBlock","src":"15841:395:11","statements":[{"nodeType":"YulVariableDeclaration","src":"15851:26:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15867:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"15872:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15863:3:11"},"nodeType":"YulFunctionCall","src":"15863:14:11"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"15855:4:11","type":""}]},{"nodeType":"YulBlock","src":"15887:164:11","statements":[{"nodeType":"YulVariableDeclaration","src":"15922:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15952:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"15959:4:11","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15948:3:11"},"nodeType":"YulFunctionCall","src":"15948:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15942:5:11"},"nodeType":"YulFunctionCall","src":"15942:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15926:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"16012:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16030:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"16035:4:11","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16026:3:11"},"nodeType":"YulFunctionCall","src":"16026:14:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"15978:33:11"},"nodeType":"YulFunctionCall","src":"15978:63:11"},"nodeType":"YulExpressionStatement","src":"15978:63:11"}]},{"nodeType":"YulBlock","src":"16061:168:11","statements":[{"nodeType":"YulVariableDeclaration","src":"16100:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16130:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"16137:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16126:3:11"},"nodeType":"YulFunctionCall","src":"16126:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16120:5:11"},"nodeType":"YulFunctionCall","src":"16120:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"16104:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"16190:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16208:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"16213:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16204:3:11"},"nodeType":"YulFunctionCall","src":"16204:14:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"16156:33:11"},"nodeType":"YulFunctionCall","src":"16156:63:11"},"nodeType":"YulExpressionStatement","src":"16156:63:11"}]}]},"name":"abi_encode_t_struct$_InstitutionByCode_$2063_memory_ptr_to_t_struct$_InstitutionByCode_$2063_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15828:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15835:3:11","type":""}],"src":"15705:531:11"},{"body":{"nodeType":"YulBlock","src":"16410:194:11","statements":[{"nodeType":"YulAssignment","src":"16420:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16432:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16443:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16428:3:11"},"nodeType":"YulFunctionCall","src":"16428:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16420:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16570:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16583:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16594:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16579:3:11"},"nodeType":"YulFunctionCall","src":"16579:17:11"}],"functionName":{"name":"abi_encode_t_struct$_InstitutionByCode_$2063_memory_ptr_to_t_struct$_InstitutionByCode_$2063_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16456:113:11"},"nodeType":"YulFunctionCall","src":"16456:141:11"},"nodeType":"YulExpressionStatement","src":"16456:141:11"}]},"name":"abi_encode_tuple_t_struct$_InstitutionByCode_$2063_memory_ptr__to_t_struct$_InstitutionByCode_$2063_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16382:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16394:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16405:4:11","type":""}],"src":"16242:362:11"},{"body":{"nodeType":"YulBlock","src":"16710:519:11","statements":[{"body":{"nodeType":"YulBlock","src":"16756:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16758:77:11"},"nodeType":"YulFunctionCall","src":"16758:79:11"},"nodeType":"YulExpressionStatement","src":"16758:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16731:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"16740:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16727:3:11"},"nodeType":"YulFunctionCall","src":"16727:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"16752:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16723:3:11"},"nodeType":"YulFunctionCall","src":"16723:32:11"},"nodeType":"YulIf","src":"16720:119:11"},{"nodeType":"YulBlock","src":"16849:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"16864:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"16878:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16868:6:11","type":""}]},{"nodeType":"YulAssignment","src":"16893:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16928:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"16939:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16924:3:11"},"nodeType":"YulFunctionCall","src":"16924:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16948:7:11"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"16903:20:11"},"nodeType":"YulFunctionCall","src":"16903:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16893:6:11"}]}]},{"nodeType":"YulBlock","src":"16976:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"16991:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"17005:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16995:6:11","type":""}]},{"nodeType":"YulAssignment","src":"17021:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17056:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"17067:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17052:3:11"},"nodeType":"YulFunctionCall","src":"17052:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17076:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"17031:20:11"},"nodeType":"YulFunctionCall","src":"17031:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"17021:6:11"}]}]},{"nodeType":"YulBlock","src":"17104:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"17119:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"17133:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17123:6:11","type":""}]},{"nodeType":"YulAssignment","src":"17149:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17184:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"17195:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17180:3:11"},"nodeType":"YulFunctionCall","src":"17180:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17204:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"17159:20:11"},"nodeType":"YulFunctionCall","src":"17159:53:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"17149:6:11"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16664:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16675:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16687:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16695:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16703:6:11","type":""}],"src":"16610:619:11"},{"body":{"nodeType":"YulBlock","src":"17277:78:11","statements":[{"body":{"nodeType":"YulBlock","src":"17333:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17342:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17345:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17335:6:11"},"nodeType":"YulFunctionCall","src":"17335:12:11"},"nodeType":"YulExpressionStatement","src":"17335:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17300:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17324:5:11"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"17307:16:11"},"nodeType":"YulFunctionCall","src":"17307:23:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17297:2:11"},"nodeType":"YulFunctionCall","src":"17297:34:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17290:6:11"},"nodeType":"YulFunctionCall","src":"17290:42:11"},"nodeType":"YulIf","src":"17287:62:11"}]},"name":"validator_revert_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17270:5:11","type":""}],"src":"17235:120:11"},{"body":{"nodeType":"YulBlock","src":"17412:86:11","statements":[{"nodeType":"YulAssignment","src":"17422:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17444:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17431:12:11"},"nodeType":"YulFunctionCall","src":"17431:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17422:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17486:5:11"}],"functionName":{"name":"validator_revert_t_uint96","nodeType":"YulIdentifier","src":"17460:25:11"},"nodeType":"YulFunctionCall","src":"17460:32:11"},"nodeType":"YulExpressionStatement","src":"17460:32:11"}]},"name":"abi_decode_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"17390:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"17398:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"17406:5:11","type":""}],"src":"17361:137:11"},{"body":{"nodeType":"YulBlock","src":"17593:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17610:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17613:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17603:6:11"},"nodeType":"YulFunctionCall","src":"17603:12:11"},"nodeType":"YulExpressionStatement","src":"17603:12:11"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"17504:117:11"},{"body":{"nodeType":"YulBlock","src":"17716:478:11","statements":[{"body":{"nodeType":"YulBlock","src":"17765:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"17767:77:11"},"nodeType":"YulFunctionCall","src":"17767:79:11"},"nodeType":"YulExpressionStatement","src":"17767:79:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17744:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"17752:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17740:3:11"},"nodeType":"YulFunctionCall","src":"17740:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"17759:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17736:3:11"},"nodeType":"YulFunctionCall","src":"17736:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17729:6:11"},"nodeType":"YulFunctionCall","src":"17729:35:11"},"nodeType":"YulIf","src":"17726:122:11"},{"nodeType":"YulAssignment","src":"17857:30:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17880:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17867:12:11"},"nodeType":"YulFunctionCall","src":"17867:20:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17857:6:11"}]},{"body":{"nodeType":"YulBlock","src":"17930:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"17932:77:11"},"nodeType":"YulFunctionCall","src":"17932:79:11"},"nodeType":"YulExpressionStatement","src":"17932:79:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17902:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"17910:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17899:2:11"},"nodeType":"YulFunctionCall","src":"17899:30:11"},"nodeType":"YulIf","src":"17896:117:11"},{"nodeType":"YulAssignment","src":"18022:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18038:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"18046:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18034:3:11"},"nodeType":"YulFunctionCall","src":"18034:17:11"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"18022:8:11"}]},{"body":{"nodeType":"YulBlock","src":"18105:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"18107:77:11"},"nodeType":"YulFunctionCall","src":"18107:79:11"},"nodeType":"YulExpressionStatement","src":"18107:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"18070:8:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18084:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"18092:4:11","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18080:3:11"},"nodeType":"YulFunctionCall","src":"18080:17:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18066:3:11"},"nodeType":"YulFunctionCall","src":"18066:32:11"},{"name":"end","nodeType":"YulIdentifier","src":"18100:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18063:2:11"},"nodeType":"YulFunctionCall","src":"18063:41:11"},"nodeType":"YulIf","src":"18060:128:11"}]},"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"17683:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"17691:3:11","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"17699:8:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"17709:6:11","type":""}],"src":"17641:553:11"},{"body":{"nodeType":"YulBlock","src":"18404:1343:11","statements":[{"body":{"nodeType":"YulBlock","src":"18451:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18453:77:11"},"nodeType":"YulFunctionCall","src":"18453:79:11"},"nodeType":"YulExpressionStatement","src":"18453:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18425:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"18434:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18421:3:11"},"nodeType":"YulFunctionCall","src":"18421:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"18446:3:11","type":"","value":"256"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18417:3:11"},"nodeType":"YulFunctionCall","src":"18417:33:11"},"nodeType":"YulIf","src":"18414:120:11"},{"nodeType":"YulBlock","src":"18544:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"18559:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"18573:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18563:6:11","type":""}]},{"nodeType":"YulAssignment","src":"18588:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18623:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"18634:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18619:3:11"},"nodeType":"YulFunctionCall","src":"18619:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18643:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"18598:20:11"},"nodeType":"YulFunctionCall","src":"18598:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18588:6:11"}]}]},{"nodeType":"YulBlock","src":"18671:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"18686:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"18700:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18690:6:11","type":""}]},{"nodeType":"YulAssignment","src":"18716:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18751:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"18762:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18747:3:11"},"nodeType":"YulFunctionCall","src":"18747:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18771:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"18726:20:11"},"nodeType":"YulFunctionCall","src":"18726:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18716:6:11"}]}]},{"nodeType":"YulBlock","src":"18799:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"18814:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"18828:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18818:6:11","type":""}]},{"nodeType":"YulAssignment","src":"18844:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18879:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"18890:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18875:3:11"},"nodeType":"YulFunctionCall","src":"18875:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18899:7:11"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"18854:20:11"},"nodeType":"YulFunctionCall","src":"18854:53:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"18844:6:11"}]}]},{"nodeType":"YulBlock","src":"18927:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"18942:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"18956:2:11","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18946:6:11","type":""}]},{"nodeType":"YulAssignment","src":"18972:62:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19006:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"19017:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19002:3:11"},"nodeType":"YulFunctionCall","src":"19002:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19026:7:11"}],"functionName":{"name":"abi_decode_t_uint96","nodeType":"YulIdentifier","src":"18982:19:11"},"nodeType":"YulFunctionCall","src":"18982:52:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"18972:6:11"}]}]},{"nodeType":"YulBlock","src":"19054:119:11","statements":[{"nodeType":"YulVariableDeclaration","src":"19069:17:11","value":{"kind":"number","nodeType":"YulLiteral","src":"19083:3:11","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19073:6:11","type":""}]},{"nodeType":"YulAssignment","src":"19100:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19135:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"19146:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19131:3:11"},"nodeType":"YulFunctionCall","src":"19131:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19155:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"19110:20:11"},"nodeType":"YulFunctionCall","src":"19110:53:11"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"19100:6:11"}]}]},{"nodeType":"YulBlock","src":"19183:119:11","statements":[{"nodeType":"YulVariableDeclaration","src":"19198:17:11","value":{"kind":"number","nodeType":"YulLiteral","src":"19212:3:11","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19202:6:11","type":""}]},{"nodeType":"YulAssignment","src":"19229:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19264:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"19275:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19260:3:11"},"nodeType":"YulFunctionCall","src":"19260:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19284:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"19239:20:11"},"nodeType":"YulFunctionCall","src":"19239:53:11"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"19229:6:11"}]}]},{"nodeType":"YulBlock","src":"19312:119:11","statements":[{"nodeType":"YulVariableDeclaration","src":"19327:17:11","value":{"kind":"number","nodeType":"YulLiteral","src":"19341:3:11","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19331:6:11","type":""}]},{"nodeType":"YulAssignment","src":"19358:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19393:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"19404:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19389:3:11"},"nodeType":"YulFunctionCall","src":"19389:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19413:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"19368:20:11"},"nodeType":"YulFunctionCall","src":"19368:53:11"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"19358:6:11"}]}]},{"nodeType":"YulBlock","src":"19441:299:11","statements":[{"nodeType":"YulVariableDeclaration","src":"19456:47:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19487:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19498:3:11","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19483:3:11"},"nodeType":"YulFunctionCall","src":"19483:19:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19470:12:11"},"nodeType":"YulFunctionCall","src":"19470:33:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19460:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"19550:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19552:77:11"},"nodeType":"YulFunctionCall","src":"19552:79:11"},"nodeType":"YulExpressionStatement","src":"19552:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19522:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"19530:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19519:2:11"},"nodeType":"YulFunctionCall","src":"19519:30:11"},"nodeType":"YulIf","src":"19516:117:11"},{"nodeType":"YulAssignment","src":"19647:83:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19702:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"19713:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19698:3:11"},"nodeType":"YulFunctionCall","src":"19698:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19722:7:11"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"19665:32:11"},"nodeType":"YulFunctionCall","src":"19665:65:11"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"19647:6:11"},{"name":"value8","nodeType":"YulIdentifier","src":"19655:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes32t_uint96t_addresst_uint256t_addresst_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18310:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18321:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18333:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18341:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18349:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18357:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"18365:6:11","type":""},{"name":"value5","nodeType":"YulTypedName","src":"18373:6:11","type":""},{"name":"value6","nodeType":"YulTypedName","src":"18381:6:11","type":""},{"name":"value7","nodeType":"YulTypedName","src":"18389:6:11","type":""},{"name":"value8","nodeType":"YulTypedName","src":"18397:6:11","type":""}],"src":"18200:1547:11"},{"body":{"nodeType":"YulBlock","src":"19818:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19835:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19858:5:11"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"19840:17:11"},"nodeType":"YulFunctionCall","src":"19840:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19828:6:11"},"nodeType":"YulFunctionCall","src":"19828:37:11"},"nodeType":"YulExpressionStatement","src":"19828:37:11"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19806:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19813:3:11","type":""}],"src":"19753:118:11"},{"body":{"nodeType":"YulBlock","src":"19975:124:11","statements":[{"nodeType":"YulAssignment","src":"19985:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19997:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20008:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19993:3:11"},"nodeType":"YulFunctionCall","src":"19993:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19985:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20065:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20078:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20089:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20074:3:11"},"nodeType":"YulFunctionCall","src":"20074:17:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"20021:43:11"},"nodeType":"YulFunctionCall","src":"20021:71:11"},"nodeType":"YulExpressionStatement","src":"20021:71:11"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19947:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19959:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19970:4:11","type":""}],"src":"19877:222:11"},{"body":{"nodeType":"YulBlock","src":"20221:647:11","statements":[{"body":{"nodeType":"YulBlock","src":"20268:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20270:77:11"},"nodeType":"YulFunctionCall","src":"20270:79:11"},"nodeType":"YulExpressionStatement","src":"20270:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20242:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"20251:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20238:3:11"},"nodeType":"YulFunctionCall","src":"20238:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"20263:3:11","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20234:3:11"},"nodeType":"YulFunctionCall","src":"20234:33:11"},"nodeType":"YulIf","src":"20231:120:11"},{"nodeType":"YulBlock","src":"20361:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"20376:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"20390:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20380:6:11","type":""}]},{"nodeType":"YulAssignment","src":"20405:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20440:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"20451:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20436:3:11"},"nodeType":"YulFunctionCall","src":"20436:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20460:7:11"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"20415:20:11"},"nodeType":"YulFunctionCall","src":"20415:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20405:6:11"}]}]},{"nodeType":"YulBlock","src":"20488:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"20503:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"20517:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20507:6:11","type":""}]},{"nodeType":"YulAssignment","src":"20533:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20568:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"20579:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20564:3:11"},"nodeType":"YulFunctionCall","src":"20564:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20588:7:11"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"20543:20:11"},"nodeType":"YulFunctionCall","src":"20543:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"20533:6:11"}]}]},{"nodeType":"YulBlock","src":"20616:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"20631:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"20645:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20635:6:11","type":""}]},{"nodeType":"YulAssignment","src":"20661:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20696:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"20707:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20692:3:11"},"nodeType":"YulFunctionCall","src":"20692:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20716:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"20671:20:11"},"nodeType":"YulFunctionCall","src":"20671:53:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"20661:6:11"}]}]},{"nodeType":"YulBlock","src":"20744:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"20759:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"20773:2:11","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20763:6:11","type":""}]},{"nodeType":"YulAssignment","src":"20789:62:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20823:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"20834:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20819:3:11"},"nodeType":"YulFunctionCall","src":"20819:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20843:7:11"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"20799:19:11"},"nodeType":"YulFunctionCall","src":"20799:52:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"20789:6:11"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes32t_addresst_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20167:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20178:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20190:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20198:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20206:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20214:6:11","type":""}],"src":"20105:763:11"},{"body":{"nodeType":"YulBlock","src":"20902:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20919:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20922:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20912:6:11"},"nodeType":"YulFunctionCall","src":"20912:88:11"},"nodeType":"YulExpressionStatement","src":"20912:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21016:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21019:4:11","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21009:6:11"},"nodeType":"YulFunctionCall","src":"21009:15:11"},"nodeType":"YulExpressionStatement","src":"21009:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21040:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21043:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21033:6:11"},"nodeType":"YulFunctionCall","src":"21033:15:11"},"nodeType":"YulExpressionStatement","src":"21033:15:11"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"20874:180:11"},{"body":{"nodeType":"YulBlock","src":"21157:40:11","statements":[{"nodeType":"YulAssignment","src":"21168:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21184:5:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"21178:5:11"},"nodeType":"YulFunctionCall","src":"21178:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"21168:6:11"}]}]},"name":"array_length_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21140:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"21150:6:11","type":""}],"src":"21060:137:11"},{"body":{"nodeType":"YulBlock","src":"21298:87:11","statements":[{"nodeType":"YulAssignment","src":"21308:11:11","value":{"name":"ptr","nodeType":"YulIdentifier","src":"21316:3:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"21308:4:11"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21336:1:11","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"21339:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21329:6:11"},"nodeType":"YulFunctionCall","src":"21329:14:11"},"nodeType":"YulExpressionStatement","src":"21329:14:11"},{"nodeType":"YulAssignment","src":"21352:26:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21370:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21373:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"21360:9:11"},"nodeType":"YulFunctionCall","src":"21360:18:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"21352:4:11"}]}]},"name":"array_dataslot_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"21285:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"21293:4:11","type":""}],"src":"21203:182:11"},{"body":{"nodeType":"YulBlock","src":"21442:51:11","statements":[{"nodeType":"YulAssignment","src":"21452:34:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21477:1:11","type":"","value":"0"},{"name":"value","nodeType":"YulIdentifier","src":"21480:5:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"21473:3:11"},"nodeType":"YulFunctionCall","src":"21473:13:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"21452:8:11"}]}]},"name":"shift_right_0_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21423:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"21433:8:11","type":""}],"src":"21391:102:11"},{"body":{"nodeType":"YulBlock","src":"21557:32:11","statements":[{"nodeType":"YulAssignment","src":"21567:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"21578:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"21567:7:11"}]}]},"name":"cleanup_from_storage_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21539:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"21549:7:11","type":""}],"src":"21499:90:11"},{"body":{"nodeType":"YulBlock","src":"21670:91:11","statements":[{"nodeType":"YulAssignment","src":"21680:75:11","value":{"arguments":[{"arguments":[{"name":"slot_value","nodeType":"YulIdentifier","src":"21743:10:11"}],"functionName":{"name":"shift_right_0_unsigned","nodeType":"YulIdentifier","src":"21720:22:11"},"nodeType":"YulFunctionCall","src":"21720:34:11"}],"functionName":{"name":"cleanup_from_storage_t_bytes32","nodeType":"YulIdentifier","src":"21689:30:11"},"nodeType":"YulFunctionCall","src":"21689:66:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21680:5:11"}]}]},"name":"extract_from_storage_value_offset_0t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot_value","nodeType":"YulTypedName","src":"21649:10:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"21664:5:11","type":""}],"src":"21595:166:11"},{"body":{"nodeType":"YulBlock","src":"21954:578:11","statements":[{"nodeType":"YulVariableDeclaration","src":"21964:26:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21980:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"21985:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21976:3:11"},"nodeType":"YulFunctionCall","src":"21976:14:11"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"21968:4:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21999:18:11","value":{"kind":"number","nodeType":"YulLiteral","src":"22016:1:11","type":"","value":"0"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"22003:9:11","type":""}]},{"nodeType":"YulBlock","src":"22027:244:11","statements":[{"nodeType":"YulAssignment","src":"22061:36:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22084:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"22091:4:11","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22080:3:11"},"nodeType":"YulFunctionCall","src":"22080:16:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"22074:5:11"},"nodeType":"YulFunctionCall","src":"22074:23:11"},"variableNames":[{"name":"slotValue","nodeType":"YulIdentifier","src":"22061:9:11"}]},{"nodeType":"YulVariableDeclaration","src":"22110:75:11","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"22175:9:11"}],"functionName":{"name":"extract_from_storage_value_offset_0t_bytes32","nodeType":"YulIdentifier","src":"22130:44:11"},"nodeType":"YulFunctionCall","src":"22130:55:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"22114:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"22232:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22250:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"22255:4:11","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22246:3:11"},"nodeType":"YulFunctionCall","src":"22246:14:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"22198:33:11"},"nodeType":"YulFunctionCall","src":"22198:63:11"},"nodeType":"YulExpressionStatement","src":"22198:63:11"}]},{"nodeType":"YulBlock","src":"22281:244:11","statements":[{"nodeType":"YulAssignment","src":"22315:36:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22338:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"22345:4:11","type":"","value":"0x01"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22334:3:11"},"nodeType":"YulFunctionCall","src":"22334:16:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"22328:5:11"},"nodeType":"YulFunctionCall","src":"22328:23:11"},"variableNames":[{"name":"slotValue","nodeType":"YulIdentifier","src":"22315:9:11"}]},{"nodeType":"YulVariableDeclaration","src":"22364:75:11","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"22429:9:11"}],"functionName":{"name":"extract_from_storage_value_offset_0t_bytes32","nodeType":"YulIdentifier","src":"22384:44:11"},"nodeType":"YulFunctionCall","src":"22384:55:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"22368:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"22486:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22504:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"22509:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22500:3:11"},"nodeType":"YulFunctionCall","src":"22500:14:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"22452:33:11"},"nodeType":"YulFunctionCall","src":"22452:63:11"},"nodeType":"YulExpressionStatement","src":"22452:63:11"}]}]},"name":"abi_encode_t_struct$_Institution_$2058_storage_to_t_struct$_Institution_$2058_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21941:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21948:3:11","type":""}],"src":"21843:689:11"},{"body":{"nodeType":"YulBlock","src":"22673:154:11","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22772:6:11"},{"name":"pos","nodeType":"YulIdentifier","src":"22780:3:11"}],"functionName":{"name":"abi_encode_t_struct$_Institution_$2058_storage_to_t_struct$_Institution_$2058_memory_ptr","nodeType":"YulIdentifier","src":"22683:88:11"},"nodeType":"YulFunctionCall","src":"22683:101:11"},"nodeType":"YulExpressionStatement","src":"22683:101:11"},{"nodeType":"YulAssignment","src":"22793:28:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22811:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"22816:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22807:3:11"},"nodeType":"YulFunctionCall","src":"22807:14:11"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"22793:10:11"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_Institution_$2058_storage_to_t_struct$_Institution_$2058_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"22646:6:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22654:3:11","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"22662:10:11","type":""}],"src":"22538:289:11"},{"body":{"nodeType":"YulBlock","src":"22931:38:11","statements":[{"nodeType":"YulAssignment","src":"22941:22:11","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"22953:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"22958:4:11","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22949:3:11"},"nodeType":"YulFunctionCall","src":"22949:14:11"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"22941:4:11"}]}]},"name":"array_nextElement_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"22918:3:11","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"22926:4:11","type":""}],"src":"22833:136:11"},{"body":{"nodeType":"YulBlock","src":"23231:754:11","statements":[{"nodeType":"YulVariableDeclaration","src":"23241:91:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23326:5:11"}],"functionName":{"name":"array_length_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage","nodeType":"YulIdentifier","src":"23255:70:11"},"nodeType":"YulFunctionCall","src":"23255:77:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"23245:6:11","type":""}]},{"nodeType":"YulAssignment","src":"23341:122:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23451:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"23456:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23348:102:11"},"nodeType":"YulFunctionCall","src":"23348:115:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23341:3:11"}]},{"nodeType":"YulVariableDeclaration","src":"23472:94:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23560:5:11"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage","nodeType":"YulIdentifier","src":"23487:72:11"},"nodeType":"YulFunctionCall","src":"23487:79:11"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"23476:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"23575:21:11","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"23589:7:11"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"23579:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"23665:295:11","statements":[{"nodeType":"YulVariableDeclaration","src":"23679:27:11","value":{"name":"srcPtr","nodeType":"YulIdentifier","src":"23700:6:11"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"23683:13:11","type":""}]},{"nodeType":"YulAssignment","src":"23719:125:11","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"23825:13:11"},{"name":"pos","nodeType":"YulIdentifier","src":"23840:3:11"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_Institution_$2058_storage_to_t_struct$_Institution_$2058_memory_ptr","nodeType":"YulIdentifier","src":"23726:98:11"},"nodeType":"YulFunctionCall","src":"23726:118:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23719:3:11"}]},{"nodeType":"YulAssignment","src":"23857:93:11","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"23943:6:11"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage","nodeType":"YulIdentifier","src":"23867:75:11"},"nodeType":"YulFunctionCall","src":"23867:83:11"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"23857:6:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"23627:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"23630:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23624:2:11"},"nodeType":"YulFunctionCall","src":"23624:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"23638:18:11","statements":[{"nodeType":"YulAssignment","src":"23640:14:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"23649:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"23652:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23645:3:11"},"nodeType":"YulFunctionCall","src":"23645:9:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"23640:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"23609:14:11","statements":[{"nodeType":"YulVariableDeclaration","src":"23611:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"23620:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"23615:1:11","type":""}]}]},"src":"23605:355:11"},{"nodeType":"YulAssignment","src":"23969:10:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"23976:3:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23969:3:11"}]}]},"name":"abi_encode_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage_to_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23210:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23217:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23226:3:11","type":""}],"src":"23055:930:11"},{"body":{"nodeType":"YulBlock","src":"24191:277:11","statements":[{"nodeType":"YulAssignment","src":"24201:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24213:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24224:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24209:3:11"},"nodeType":"YulFunctionCall","src":"24209:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24201:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24248:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24259:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24244:3:11"},"nodeType":"YulFunctionCall","src":"24244:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24267:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"24273:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24263:3:11"},"nodeType":"YulFunctionCall","src":"24263:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24237:6:11"},"nodeType":"YulFunctionCall","src":"24237:47:11"},"nodeType":"YulExpressionStatement","src":"24237:47:11"},{"nodeType":"YulAssignment","src":"24293:168:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24447:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"24456:4:11"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage_to_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24301:145:11"},"nodeType":"YulFunctionCall","src":"24301:160:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24293:4:11"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage__to_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24163:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24175:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24186:4:11","type":""}],"src":"23991:477:11"},{"body":{"nodeType":"YulBlock","src":"24570:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24587:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"24592:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24580:6:11"},"nodeType":"YulFunctionCall","src":"24580:19:11"},"nodeType":"YulExpressionStatement","src":"24580:19:11"},{"nodeType":"YulAssignment","src":"24608:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24627:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"24632:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24623:3:11"},"nodeType":"YulFunctionCall","src":"24623:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"24608:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24542:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"24547:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"24558:11:11","type":""}],"src":"24474:169:11"},{"body":{"nodeType":"YulBlock","src":"24755:65:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24777:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"24785:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24773:3:11"},"nodeType":"YulFunctionCall","src":"24773:14:11"},{"hexValue":"476174657761793a207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"24789:23:11","type":"","value":"Gateway: zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24766:6:11"},"nodeType":"YulFunctionCall","src":"24766:47:11"},"nodeType":"YulExpressionStatement","src":"24766:47:11"}]},"name":"store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24747:6:11","type":""}],"src":"24649:171:11"},{"body":{"nodeType":"YulBlock","src":"24972:220:11","statements":[{"nodeType":"YulAssignment","src":"24982:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25048:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"25053:2:11","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24989:58:11"},"nodeType":"YulFunctionCall","src":"24989:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24982:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25154:3:11"}],"functionName":{"name":"store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf","nodeType":"YulIdentifier","src":"25065:88:11"},"nodeType":"YulFunctionCall","src":"25065:93:11"},"nodeType":"YulExpressionStatement","src":"25065:93:11"},{"nodeType":"YulAssignment","src":"25167:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25178:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"25183:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25174:3:11"},"nodeType":"YulFunctionCall","src":"25174:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25167:3:11"}]}]},"name":"abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24960:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24968:3:11","type":""}],"src":"24826:366:11"},{"body":{"nodeType":"YulBlock","src":"25369:248:11","statements":[{"nodeType":"YulAssignment","src":"25379:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25391:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"25402:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25387:3:11"},"nodeType":"YulFunctionCall","src":"25387:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25379:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25426:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"25437:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25422:3:11"},"nodeType":"YulFunctionCall","src":"25422:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25445:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"25451:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25441:3:11"},"nodeType":"YulFunctionCall","src":"25441:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25415:6:11"},"nodeType":"YulFunctionCall","src":"25415:47:11"},"nodeType":"YulExpressionStatement","src":"25415:47:11"},{"nodeType":"YulAssignment","src":"25471:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25605:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25479:124:11"},"nodeType":"YulFunctionCall","src":"25479:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25471:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25349:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25364:4:11","type":""}],"src":"25198:419:11"},{"body":{"nodeType":"YulBlock","src":"25729:118:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25751:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"25759:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25747:3:11"},"nodeType":"YulFunctionCall","src":"25747:14:11"},{"hexValue":"476174657761793a207472656173757279206164647265737320616c72656164","kind":"string","nodeType":"YulLiteral","src":"25763:34:11","type":"","value":"Gateway: treasury address alread"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25740:6:11"},"nodeType":"YulFunctionCall","src":"25740:58:11"},"nodeType":"YulExpressionStatement","src":"25740:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25819:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"25827:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25815:3:11"},"nodeType":"YulFunctionCall","src":"25815:15:11"},{"hexValue":"7920736574","kind":"string","nodeType":"YulLiteral","src":"25832:7:11","type":"","value":"y set"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25808:6:11"},"nodeType":"YulFunctionCall","src":"25808:32:11"},"nodeType":"YulExpressionStatement","src":"25808:32:11"}]},"name":"store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25721:6:11","type":""}],"src":"25623:224:11"},{"body":{"nodeType":"YulBlock","src":"25999:220:11","statements":[{"nodeType":"YulAssignment","src":"26009:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26075:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"26080:2:11","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26016:58:11"},"nodeType":"YulFunctionCall","src":"26016:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26009:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26181:3:11"}],"functionName":{"name":"store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead","nodeType":"YulIdentifier","src":"26092:88:11"},"nodeType":"YulFunctionCall","src":"26092:93:11"},"nodeType":"YulExpressionStatement","src":"26092:93:11"},{"nodeType":"YulAssignment","src":"26194:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26205:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"26210:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26201:3:11"},"nodeType":"YulFunctionCall","src":"26201:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26194:3:11"}]}]},"name":"abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25987:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25995:3:11","type":""}],"src":"25853:366:11"},{"body":{"nodeType":"YulBlock","src":"26396:248:11","statements":[{"nodeType":"YulAssignment","src":"26406:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26418:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"26429:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26414:3:11"},"nodeType":"YulFunctionCall","src":"26414:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26406:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26453:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"26464:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26449:3:11"},"nodeType":"YulFunctionCall","src":"26449:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26472:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"26478:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26468:3:11"},"nodeType":"YulFunctionCall","src":"26468:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26442:6:11"},"nodeType":"YulFunctionCall","src":"26442:47:11"},"nodeType":"YulExpressionStatement","src":"26442:47:11"},{"nodeType":"YulAssignment","src":"26498:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26632:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26506:124:11"},"nodeType":"YulFunctionCall","src":"26506:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26498:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26376:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26391:4:11","type":""}],"src":"26225:419:11"},{"body":{"nodeType":"YulBlock","src":"26756:120:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26778:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"26786:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26774:3:11"},"nodeType":"YulFunctionCall","src":"26774:14:11"},{"hexValue":"476174657761793a2061676772656761746f72206164647265737320616c7265","kind":"string","nodeType":"YulLiteral","src":"26790:34:11","type":"","value":"Gateway: aggregator address alre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26767:6:11"},"nodeType":"YulFunctionCall","src":"26767:58:11"},"nodeType":"YulExpressionStatement","src":"26767:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26846:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"26854:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26842:3:11"},"nodeType":"YulFunctionCall","src":"26842:15:11"},{"hexValue":"61647920736574","kind":"string","nodeType":"YulLiteral","src":"26859:9:11","type":"","value":"ady set"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26835:6:11"},"nodeType":"YulFunctionCall","src":"26835:34:11"},"nodeType":"YulExpressionStatement","src":"26835:34:11"}]},"name":"store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26748:6:11","type":""}],"src":"26650:226:11"},{"body":{"nodeType":"YulBlock","src":"27028:220:11","statements":[{"nodeType":"YulAssignment","src":"27038:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27104:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"27109:2:11","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27045:58:11"},"nodeType":"YulFunctionCall","src":"27045:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27038:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27210:3:11"}],"functionName":{"name":"store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4","nodeType":"YulIdentifier","src":"27121:88:11"},"nodeType":"YulFunctionCall","src":"27121:93:11"},"nodeType":"YulExpressionStatement","src":"27121:93:11"},{"nodeType":"YulAssignment","src":"27223:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27234:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"27239:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27230:3:11"},"nodeType":"YulFunctionCall","src":"27230:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27223:3:11"}]}]},"name":"abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27016:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27024:3:11","type":""}],"src":"26882:366:11"},{"body":{"nodeType":"YulBlock","src":"27425:248:11","statements":[{"nodeType":"YulAssignment","src":"27435:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27447:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"27458:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27443:3:11"},"nodeType":"YulFunctionCall","src":"27443:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27435:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27482:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"27493:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27478:3:11"},"nodeType":"YulFunctionCall","src":"27478:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27501:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"27507:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27497:3:11"},"nodeType":"YulFunctionCall","src":"27497:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27471:6:11"},"nodeType":"YulFunctionCall","src":"27471:47:11"},"nodeType":"YulExpressionStatement","src":"27471:47:11"},{"nodeType":"YulAssignment","src":"27527:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27661:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27535:124:11"},"nodeType":"YulFunctionCall","src":"27535:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27527:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27405:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27420:4:11","type":""}],"src":"27254:419:11"},{"body":{"nodeType":"YulBlock","src":"27775:122:11","statements":[{"nodeType":"YulAssignment","src":"27785:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27797:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"27808:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27793:3:11"},"nodeType":"YulFunctionCall","src":"27793:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27785:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27863:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27876:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"27887:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27872:3:11"},"nodeType":"YulFunctionCall","src":"27872:17:11"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"27821:41:11"},"nodeType":"YulFunctionCall","src":"27821:69:11"},"nodeType":"YulExpressionStatement","src":"27821:69:11"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27747:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27759:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27770:4:11","type":""}],"src":"27679:218:11"},{"body":{"nodeType":"YulBlock","src":"28009:58:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28031:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"28039:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28027:3:11"},"nodeType":"YulFunctionCall","src":"28027:14:11"},{"hexValue":"4f6e6c7941676772656761746f72","kind":"string","nodeType":"YulLiteral","src":"28043:16:11","type":"","value":"OnlyAggregator"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28020:6:11"},"nodeType":"YulFunctionCall","src":"28020:40:11"},"nodeType":"YulExpressionStatement","src":"28020:40:11"}]},"name":"store_literal_in_memory_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28001:6:11","type":""}],"src":"27903:164:11"},{"body":{"nodeType":"YulBlock","src":"28219:220:11","statements":[{"nodeType":"YulAssignment","src":"28229:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28295:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"28300:2:11","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28236:58:11"},"nodeType":"YulFunctionCall","src":"28236:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28229:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28401:3:11"}],"functionName":{"name":"store_literal_in_memory_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243","nodeType":"YulIdentifier","src":"28312:88:11"},"nodeType":"YulFunctionCall","src":"28312:93:11"},"nodeType":"YulExpressionStatement","src":"28312:93:11"},{"nodeType":"YulAssignment","src":"28414:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28425:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"28430:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28421:3:11"},"nodeType":"YulFunctionCall","src":"28421:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28414:3:11"}]}]},"name":"abi_encode_t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28207:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28215:3:11","type":""}],"src":"28073:366:11"},{"body":{"nodeType":"YulBlock","src":"28616:248:11","statements":[{"nodeType":"YulAssignment","src":"28626:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28638:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"28649:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28634:3:11"},"nodeType":"YulFunctionCall","src":"28634:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28626:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28673:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"28684:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28669:3:11"},"nodeType":"YulFunctionCall","src":"28669:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28692:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"28698:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28688:3:11"},"nodeType":"YulFunctionCall","src":"28688:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28662:6:11"},"nodeType":"YulFunctionCall","src":"28662:47:11"},"nodeType":"YulExpressionStatement","src":"28662:47:11"},{"nodeType":"YulAssignment","src":"28718:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28852:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28726:124:11"},"nodeType":"YulFunctionCall","src":"28726:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28718:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28596:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28611:4:11","type":""}],"src":"28445:419:11"},{"body":{"nodeType":"YulBlock","src":"28976:58:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28998:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"29006:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28994:3:11"},"nodeType":"YulFunctionCall","src":"28994:14:11"},{"hexValue":"4f7264657246756c66696c6c6564","kind":"string","nodeType":"YulLiteral","src":"29010:16:11","type":"","value":"OrderFulfilled"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28987:6:11"},"nodeType":"YulFunctionCall","src":"28987:40:11"},"nodeType":"YulExpressionStatement","src":"28987:40:11"}]},"name":"store_literal_in_memory_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28968:6:11","type":""}],"src":"28870:164:11"},{"body":{"nodeType":"YulBlock","src":"29186:220:11","statements":[{"nodeType":"YulAssignment","src":"29196:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29262:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"29267:2:11","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29203:58:11"},"nodeType":"YulFunctionCall","src":"29203:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29196:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29368:3:11"}],"functionName":{"name":"store_literal_in_memory_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5","nodeType":"YulIdentifier","src":"29279:88:11"},"nodeType":"YulFunctionCall","src":"29279:93:11"},"nodeType":"YulExpressionStatement","src":"29279:93:11"},{"nodeType":"YulAssignment","src":"29381:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29392:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"29397:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29388:3:11"},"nodeType":"YulFunctionCall","src":"29388:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29381:3:11"}]}]},"name":"abi_encode_t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29174:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29182:3:11","type":""}],"src":"29040:366:11"},{"body":{"nodeType":"YulBlock","src":"29583:248:11","statements":[{"nodeType":"YulAssignment","src":"29593:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29605:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"29616:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29601:3:11"},"nodeType":"YulFunctionCall","src":"29601:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29593:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29640:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"29651:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29636:3:11"},"nodeType":"YulFunctionCall","src":"29636:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29659:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"29665:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29655:3:11"},"nodeType":"YulFunctionCall","src":"29655:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29629:6:11"},"nodeType":"YulFunctionCall","src":"29629:47:11"},"nodeType":"YulExpressionStatement","src":"29629:47:11"},{"nodeType":"YulAssignment","src":"29685:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29819:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29693:124:11"},"nodeType":"YulFunctionCall","src":"29693:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29685:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29563:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29578:4:11","type":""}],"src":"29412:419:11"},{"body":{"nodeType":"YulBlock","src":"29943:57:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29965:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"29973:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29961:3:11"},"nodeType":"YulFunctionCall","src":"29961:14:11"},{"hexValue":"4f72646572526566756e646564","kind":"string","nodeType":"YulLiteral","src":"29977:15:11","type":"","value":"OrderRefunded"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29954:6:11"},"nodeType":"YulFunctionCall","src":"29954:39:11"},"nodeType":"YulExpressionStatement","src":"29954:39:11"}]},"name":"store_literal_in_memory_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29935:6:11","type":""}],"src":"29837:163:11"},{"body":{"nodeType":"YulBlock","src":"30152:220:11","statements":[{"nodeType":"YulAssignment","src":"30162:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30228:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"30233:2:11","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30169:58:11"},"nodeType":"YulFunctionCall","src":"30169:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30162:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30334:3:11"}],"functionName":{"name":"store_literal_in_memory_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd","nodeType":"YulIdentifier","src":"30245:88:11"},"nodeType":"YulFunctionCall","src":"30245:93:11"},"nodeType":"YulExpressionStatement","src":"30245:93:11"},{"nodeType":"YulAssignment","src":"30347:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30358:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"30363:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30354:3:11"},"nodeType":"YulFunctionCall","src":"30354:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30347:3:11"}]}]},"name":"abi_encode_t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30140:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30148:3:11","type":""}],"src":"30006:366:11"},{"body":{"nodeType":"YulBlock","src":"30549:248:11","statements":[{"nodeType":"YulAssignment","src":"30559:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30571:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"30582:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30567:3:11"},"nodeType":"YulFunctionCall","src":"30567:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30559:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30606:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"30617:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30602:3:11"},"nodeType":"YulFunctionCall","src":"30602:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30625:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"30631:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30621:3:11"},"nodeType":"YulFunctionCall","src":"30621:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30595:6:11"},"nodeType":"YulFunctionCall","src":"30595:47:11"},"nodeType":"YulExpressionStatement","src":"30595:47:11"},{"nodeType":"YulAssignment","src":"30651:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30785:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30659:124:11"},"nodeType":"YulFunctionCall","src":"30659:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30651:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30529:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30544:4:11","type":""}],"src":"30378:419:11"},{"body":{"nodeType":"YulBlock","src":"30909:65:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30931:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"30939:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30927:3:11"},"nodeType":"YulFunctionCall","src":"30927:14:11"},{"hexValue":"4665654578636565647350726f746f636f6c466565","kind":"string","nodeType":"YulLiteral","src":"30943:23:11","type":"","value":"FeeExceedsProtocolFee"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30920:6:11"},"nodeType":"YulFunctionCall","src":"30920:47:11"},"nodeType":"YulExpressionStatement","src":"30920:47:11"}]},"name":"store_literal_in_memory_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30901:6:11","type":""}],"src":"30803:171:11"},{"body":{"nodeType":"YulBlock","src":"31126:220:11","statements":[{"nodeType":"YulAssignment","src":"31136:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31202:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"31207:2:11","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31143:58:11"},"nodeType":"YulFunctionCall","src":"31143:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31136:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31308:3:11"}],"functionName":{"name":"store_literal_in_memory_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de","nodeType":"YulIdentifier","src":"31219:88:11"},"nodeType":"YulFunctionCall","src":"31219:93:11"},"nodeType":"YulExpressionStatement","src":"31219:93:11"},{"nodeType":"YulAssignment","src":"31321:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31332:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"31337:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31328:3:11"},"nodeType":"YulFunctionCall","src":"31328:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31321:3:11"}]}]},"name":"abi_encode_t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31114:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31122:3:11","type":""}],"src":"30980:366:11"},{"body":{"nodeType":"YulBlock","src":"31523:248:11","statements":[{"nodeType":"YulAssignment","src":"31533:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31545:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"31556:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31541:3:11"},"nodeType":"YulFunctionCall","src":"31541:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31533:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31580:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"31591:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31576:3:11"},"nodeType":"YulFunctionCall","src":"31576:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31599:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"31605:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31595:3:11"},"nodeType":"YulFunctionCall","src":"31595:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31569:6:11"},"nodeType":"YulFunctionCall","src":"31569:47:11"},"nodeType":"YulExpressionStatement","src":"31569:47:11"},{"nodeType":"YulAssignment","src":"31625:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31759:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31633:124:11"},"nodeType":"YulFunctionCall","src":"31633:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31625:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31503:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31518:4:11","type":""}],"src":"31352:419:11"},{"body":{"nodeType":"YulBlock","src":"31903:206:11","statements":[{"nodeType":"YulAssignment","src":"31913:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31925:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"31936:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31921:3:11"},"nodeType":"YulFunctionCall","src":"31921:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31913:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31993:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32006:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"32017:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32002:3:11"},"nodeType":"YulFunctionCall","src":"32002:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"31949:43:11"},"nodeType":"YulFunctionCall","src":"31949:71:11"},"nodeType":"YulExpressionStatement","src":"31949:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"32074:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32087:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"32098:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32083:3:11"},"nodeType":"YulFunctionCall","src":"32083:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"32030:43:11"},"nodeType":"YulFunctionCall","src":"32030:72:11"},"nodeType":"YulExpressionStatement","src":"32030:72:11"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31867:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31879:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31887:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31898:4:11","type":""}],"src":"31777:332:11"},{"body":{"nodeType":"YulBlock","src":"32155:76:11","statements":[{"body":{"nodeType":"YulBlock","src":"32209:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32218:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32221:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"32211:6:11"},"nodeType":"YulFunctionCall","src":"32211:12:11"},"nodeType":"YulExpressionStatement","src":"32211:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32178:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32200:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"32185:14:11"},"nodeType":"YulFunctionCall","src":"32185:21:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"32175:2:11"},"nodeType":"YulFunctionCall","src":"32175:32:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"32168:6:11"},"nodeType":"YulFunctionCall","src":"32168:40:11"},"nodeType":"YulIf","src":"32165:60:11"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32148:5:11","type":""}],"src":"32115:116:11"},{"body":{"nodeType":"YulBlock","src":"32297:77:11","statements":[{"nodeType":"YulAssignment","src":"32307:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"32322:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"32316:5:11"},"nodeType":"YulFunctionCall","src":"32316:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"32307:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32362:5:11"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"32338:23:11"},"nodeType":"YulFunctionCall","src":"32338:30:11"},"nodeType":"YulExpressionStatement","src":"32338:30:11"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"32275:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"32283:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"32291:5:11","type":""}],"src":"32237:137:11"},{"body":{"nodeType":"YulBlock","src":"32454:271:11","statements":[{"body":{"nodeType":"YulBlock","src":"32500:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"32502:77:11"},"nodeType":"YulFunctionCall","src":"32502:79:11"},"nodeType":"YulExpressionStatement","src":"32502:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"32475:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"32484:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32471:3:11"},"nodeType":"YulFunctionCall","src":"32471:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"32496:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"32467:3:11"},"nodeType":"YulFunctionCall","src":"32467:32:11"},"nodeType":"YulIf","src":"32464:119:11"},{"nodeType":"YulBlock","src":"32593:125:11","statements":[{"nodeType":"YulVariableDeclaration","src":"32608:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"32622:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"32612:6:11","type":""}]},{"nodeType":"YulAssignment","src":"32637:71:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32680:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"32691:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32676:3:11"},"nodeType":"YulFunctionCall","src":"32676:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"32700:7:11"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"32647:28:11"},"nodeType":"YulFunctionCall","src":"32647:61:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"32637:6:11"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32424:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"32435:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"32447:6:11","type":""}],"src":"32380:345:11"},{"body":{"nodeType":"YulBlock","src":"32759:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32776:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32779:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32769:6:11"},"nodeType":"YulFunctionCall","src":"32769:88:11"},"nodeType":"YulExpressionStatement","src":"32769:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32873:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"32876:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32866:6:11"},"nodeType":"YulFunctionCall","src":"32866:15:11"},"nodeType":"YulExpressionStatement","src":"32866:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32897:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32900:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"32890:6:11"},"nodeType":"YulFunctionCall","src":"32890:15:11"},"nodeType":"YulExpressionStatement","src":"32890:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"32731:180:11"},{"body":{"nodeType":"YulBlock","src":"32961:147:11","statements":[{"nodeType":"YulAssignment","src":"32971:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32994:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32976:17:11"},"nodeType":"YulFunctionCall","src":"32976:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"32971:1:11"}]},{"nodeType":"YulAssignment","src":"33005:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"33028:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"33010:17:11"},"nodeType":"YulFunctionCall","src":"33010:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"33005:1:11"}]},{"nodeType":"YulAssignment","src":"33039:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"33050:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"33053:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33046:3:11"},"nodeType":"YulFunctionCall","src":"33046:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"33039:3:11"}]},{"body":{"nodeType":"YulBlock","src":"33079:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"33081:16:11"},"nodeType":"YulFunctionCall","src":"33081:18:11"},"nodeType":"YulExpressionStatement","src":"33081:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"33071:1:11"},{"name":"sum","nodeType":"YulIdentifier","src":"33074:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"33068:2:11"},"nodeType":"YulFunctionCall","src":"33068:10:11"},"nodeType":"YulIf","src":"33065:36:11"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"32948:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"32951:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"32957:3:11","type":""}],"src":"32917:191:11"},{"body":{"nodeType":"YulBlock","src":"33159:149:11","statements":[{"nodeType":"YulAssignment","src":"33169:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"33192:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"33174:17:11"},"nodeType":"YulFunctionCall","src":"33174:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"33169:1:11"}]},{"nodeType":"YulAssignment","src":"33203:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"33226:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"33208:17:11"},"nodeType":"YulFunctionCall","src":"33208:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"33203:1:11"}]},{"nodeType":"YulAssignment","src":"33237:17:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"33249:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"33252:1:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33245:3:11"},"nodeType":"YulFunctionCall","src":"33245:9:11"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"33237:4:11"}]},{"body":{"nodeType":"YulBlock","src":"33279:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"33281:16:11"},"nodeType":"YulFunctionCall","src":"33281:18:11"},"nodeType":"YulExpressionStatement","src":"33281:18:11"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"33270:4:11"},{"name":"x","nodeType":"YulIdentifier","src":"33276:1:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"33267:2:11"},"nodeType":"YulFunctionCall","src":"33267:11:11"},"nodeType":"YulIf","src":"33264:37:11"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"33145:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"33148:1:11","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"33154:4:11","type":""}],"src":"33114:194:11"},{"body":{"nodeType":"YulBlock","src":"33412:124:11","statements":[{"nodeType":"YulAssignment","src":"33422:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33434:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"33445:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33430:3:11"},"nodeType":"YulFunctionCall","src":"33430:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33422:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33502:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33515:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"33526:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33511:3:11"},"nodeType":"YulFunctionCall","src":"33511:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33458:43:11"},"nodeType":"YulFunctionCall","src":"33458:71:11"},"nodeType":"YulExpressionStatement","src":"33458:71:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33384:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33396:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33407:4:11","type":""}],"src":"33314:222:11"},{"body":{"nodeType":"YulBlock","src":"33648:122:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33670:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"33678:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33666:3:11"},"nodeType":"YulFunctionCall","src":"33666:14:11"},{"hexValue":"4f776e61626c6532537465703a2063616c6c6572206973206e6f742074686520","kind":"string","nodeType":"YulLiteral","src":"33682:34:11","type":"","value":"Ownable2Step: caller is not the "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33659:6:11"},"nodeType":"YulFunctionCall","src":"33659:58:11"},"nodeType":"YulExpressionStatement","src":"33659:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33738:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"33746:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33734:3:11"},"nodeType":"YulFunctionCall","src":"33734:15:11"},{"hexValue":"6e6577206f776e6572","kind":"string","nodeType":"YulLiteral","src":"33751:11:11","type":"","value":"new owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33727:6:11"},"nodeType":"YulFunctionCall","src":"33727:36:11"},"nodeType":"YulExpressionStatement","src":"33727:36:11"}]},"name":"store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"33640:6:11","type":""}],"src":"33542:228:11"},{"body":{"nodeType":"YulBlock","src":"33922:220:11","statements":[{"nodeType":"YulAssignment","src":"33932:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33998:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"34003:2:11","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33939:58:11"},"nodeType":"YulFunctionCall","src":"33939:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33932:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34104:3:11"}],"functionName":{"name":"store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc","nodeType":"YulIdentifier","src":"34015:88:11"},"nodeType":"YulFunctionCall","src":"34015:93:11"},"nodeType":"YulExpressionStatement","src":"34015:93:11"},{"nodeType":"YulAssignment","src":"34117:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34128:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"34133:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34124:3:11"},"nodeType":"YulFunctionCall","src":"34124:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34117:3:11"}]}]},"name":"abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33910:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33918:3:11","type":""}],"src":"33776:366:11"},{"body":{"nodeType":"YulBlock","src":"34319:248:11","statements":[{"nodeType":"YulAssignment","src":"34329:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34341:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"34352:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34337:3:11"},"nodeType":"YulFunctionCall","src":"34337:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34329:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34376:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"34387:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34372:3:11"},"nodeType":"YulFunctionCall","src":"34372:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34395:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"34401:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34391:3:11"},"nodeType":"YulFunctionCall","src":"34391:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34365:6:11"},"nodeType":"YulFunctionCall","src":"34365:47:11"},"nodeType":"YulExpressionStatement","src":"34365:47:11"},{"nodeType":"YulAssignment","src":"34421:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34555:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34429:124:11"},"nodeType":"YulFunctionCall","src":"34429:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34421:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34299:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34314:4:11","type":""}],"src":"34148:419:11"},{"body":{"nodeType":"YulBlock","src":"34679:127:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34701:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"34709:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34697:3:11"},"nodeType":"YulFunctionCall","src":"34697:14:11"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"34713:34:11","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34690:6:11"},"nodeType":"YulFunctionCall","src":"34690:58:11"},"nodeType":"YulExpressionStatement","src":"34690:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34769:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"34777:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34765:3:11"},"nodeType":"YulFunctionCall","src":"34765:15:11"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"34782:16:11","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34758:6:11"},"nodeType":"YulFunctionCall","src":"34758:41:11"},"nodeType":"YulExpressionStatement","src":"34758:41:11"}]},"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"34671:6:11","type":""}],"src":"34573:233:11"},{"body":{"nodeType":"YulBlock","src":"34958:220:11","statements":[{"nodeType":"YulAssignment","src":"34968:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35034:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"35039:2:11","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34975:58:11"},"nodeType":"YulFunctionCall","src":"34975:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34968:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35140:3:11"}],"functionName":{"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nodeType":"YulIdentifier","src":"35051:88:11"},"nodeType":"YulFunctionCall","src":"35051:93:11"},"nodeType":"YulExpressionStatement","src":"35051:93:11"},{"nodeType":"YulAssignment","src":"35153:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35164:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"35169:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35160:3:11"},"nodeType":"YulFunctionCall","src":"35160:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35153:3:11"}]}]},"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34946:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34954:3:11","type":""}],"src":"34812:366:11"},{"body":{"nodeType":"YulBlock","src":"35355:248:11","statements":[{"nodeType":"YulAssignment","src":"35365:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35377:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"35388:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35373:3:11"},"nodeType":"YulFunctionCall","src":"35373:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35365:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35412:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"35423:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35408:3:11"},"nodeType":"YulFunctionCall","src":"35408:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35431:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"35437:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35427:3:11"},"nodeType":"YulFunctionCall","src":"35427:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35401:6:11"},"nodeType":"YulFunctionCall","src":"35401:47:11"},"nodeType":"YulExpressionStatement","src":"35401:47:11"},{"nodeType":"YulAssignment","src":"35457:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35591:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35465:124:11"},"nodeType":"YulFunctionCall","src":"35465:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35457:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35335:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35350:4:11","type":""}],"src":"35184:419:11"},{"body":{"nodeType":"YulBlock","src":"35662:32:11","statements":[{"nodeType":"YulAssignment","src":"35672:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"35683:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"35672:7:11"}]}]},"name":"cleanup_t_rational_1_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35644:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"35654:7:11","type":""}],"src":"35609:85:11"},{"body":{"nodeType":"YulBlock","src":"35743:43:11","statements":[{"nodeType":"YulAssignment","src":"35753:27:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35768:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"35775:4:11","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"35764:3:11"},"nodeType":"YulFunctionCall","src":"35764:16:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"35753:7:11"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35725:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"35735:7:11","type":""}],"src":"35700:86:11"},{"body":{"nodeType":"YulBlock","src":"35824:28:11","statements":[{"nodeType":"YulAssignment","src":"35834:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"35841:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"35834:3:11"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35810:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"35820:3:11","type":""}],"src":"35792:60:11"},{"body":{"nodeType":"YulBlock","src":"35924:88:11","statements":[{"nodeType":"YulAssignment","src":"35934:72:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35998:5:11"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nodeType":"YulIdentifier","src":"35972:25:11"},"nodeType":"YulFunctionCall","src":"35972:32:11"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"35963:8:11"},"nodeType":"YulFunctionCall","src":"35963:42:11"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"35947:15:11"},"nodeType":"YulFunctionCall","src":"35947:59:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"35934:9:11"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35904:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"35914:9:11","type":""}],"src":"35858:154:11"},{"body":{"nodeType":"YulBlock","src":"36089:72:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36106:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36148:5:11"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulIdentifier","src":"36111:36:11"},"nodeType":"YulFunctionCall","src":"36111:43:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36099:6:11"},"nodeType":"YulFunctionCall","src":"36099:56:11"},"nodeType":"YulExpressionStatement","src":"36099:56:11"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36077:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"36084:3:11","type":""}],"src":"36018:143:11"},{"body":{"nodeType":"YulBlock","src":"36271:130:11","statements":[{"nodeType":"YulAssignment","src":"36281:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36293:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"36304:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36289:3:11"},"nodeType":"YulFunctionCall","src":"36289:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36281:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36367:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36380:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"36391:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36376:3:11"},"nodeType":"YulFunctionCall","src":"36376:17:11"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"36317:49:11"},"nodeType":"YulFunctionCall","src":"36317:77:11"},"nodeType":"YulExpressionStatement","src":"36317:77:11"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36243:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36255:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36266:4:11","type":""}],"src":"36167:234:11"},{"body":{"nodeType":"YulBlock","src":"36513:67:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36535:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"36543:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36531:3:11"},"nodeType":"YulFunctionCall","src":"36531:14:11"},{"hexValue":"476174657761793a20696e76616c696420737461747573","kind":"string","nodeType":"YulLiteral","src":"36547:25:11","type":"","value":"Gateway: invalid status"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36524:6:11"},"nodeType":"YulFunctionCall","src":"36524:49:11"},"nodeType":"YulExpressionStatement","src":"36524:49:11"}]},"name":"store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36505:6:11","type":""}],"src":"36407:173:11"},{"body":{"nodeType":"YulBlock","src":"36732:220:11","statements":[{"nodeType":"YulAssignment","src":"36742:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36808:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"36813:2:11","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36749:58:11"},"nodeType":"YulFunctionCall","src":"36749:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36742:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36914:3:11"}],"functionName":{"name":"store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338","nodeType":"YulIdentifier","src":"36825:88:11"},"nodeType":"YulFunctionCall","src":"36825:93:11"},"nodeType":"YulExpressionStatement","src":"36825:93:11"},{"nodeType":"YulAssignment","src":"36927:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36938:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"36943:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36934:3:11"},"nodeType":"YulFunctionCall","src":"36934:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36927:3:11"}]}]},"name":"abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36720:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36728:3:11","type":""}],"src":"36586:366:11"},{"body":{"nodeType":"YulBlock","src":"37129:248:11","statements":[{"nodeType":"YulAssignment","src":"37139:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37151:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"37162:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37147:3:11"},"nodeType":"YulFunctionCall","src":"37147:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37139:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37186:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"37197:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37182:3:11"},"nodeType":"YulFunctionCall","src":"37182:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37205:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"37211:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37201:3:11"},"nodeType":"YulFunctionCall","src":"37201:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37175:6:11"},"nodeType":"YulFunctionCall","src":"37175:47:11"},"nodeType":"YulExpressionStatement","src":"37175:47:11"},{"nodeType":"YulAssignment","src":"37231:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37365:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37239:124:11"},"nodeType":"YulFunctionCall","src":"37239:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37231:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37109:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37124:4:11","type":""}],"src":"36958:419:11"},{"body":{"nodeType":"YulBlock","src":"37489:62:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37511:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"37519:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37507:3:11"},"nodeType":"YulFunctionCall","src":"37507:14:11"},{"hexValue":"496e76616c69644d65737361676548617368","kind":"string","nodeType":"YulLiteral","src":"37523:20:11","type":"","value":"InvalidMessageHash"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37500:6:11"},"nodeType":"YulFunctionCall","src":"37500:44:11"},"nodeType":"YulExpressionStatement","src":"37500:44:11"}]},"name":"store_literal_in_memory_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37481:6:11","type":""}],"src":"37383:168:11"},{"body":{"nodeType":"YulBlock","src":"37703:220:11","statements":[{"nodeType":"YulAssignment","src":"37713:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37779:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"37784:2:11","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37720:58:11"},"nodeType":"YulFunctionCall","src":"37720:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37713:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37885:3:11"}],"functionName":{"name":"store_literal_in_memory_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4","nodeType":"YulIdentifier","src":"37796:88:11"},"nodeType":"YulFunctionCall","src":"37796:93:11"},"nodeType":"YulExpressionStatement","src":"37796:93:11"},{"nodeType":"YulAssignment","src":"37898:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37909:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"37914:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37905:3:11"},"nodeType":"YulFunctionCall","src":"37905:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37898:3:11"}]}]},"name":"abi_encode_t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37691:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37699:3:11","type":""}],"src":"37557:366:11"},{"body":{"nodeType":"YulBlock","src":"38100:248:11","statements":[{"nodeType":"YulAssignment","src":"38110:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38122:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"38133:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38118:3:11"},"nodeType":"YulFunctionCall","src":"38118:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38110:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38157:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"38168:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38153:3:11"},"nodeType":"YulFunctionCall","src":"38153:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38176:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"38182:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38172:3:11"},"nodeType":"YulFunctionCall","src":"38172:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38146:6:11"},"nodeType":"YulFunctionCall","src":"38146:47:11"},"nodeType":"YulExpressionStatement","src":"38146:47:11"},{"nodeType":"YulAssignment","src":"38202:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38336:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38210:124:11"},"nodeType":"YulFunctionCall","src":"38210:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38202:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38080:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38095:4:11","type":""}],"src":"37929:419:11"},{"body":{"nodeType":"YulBlock","src":"38508:288:11","statements":[{"nodeType":"YulAssignment","src":"38518:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38530:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"38541:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38526:3:11"},"nodeType":"YulFunctionCall","src":"38526:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38518:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"38598:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38611:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"38622:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38607:3:11"},"nodeType":"YulFunctionCall","src":"38607:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"38554:43:11"},"nodeType":"YulFunctionCall","src":"38554:71:11"},"nodeType":"YulExpressionStatement","src":"38554:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"38679:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38692:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"38703:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38688:3:11"},"nodeType":"YulFunctionCall","src":"38688:18:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"38635:43:11"},"nodeType":"YulFunctionCall","src":"38635:72:11"},"nodeType":"YulExpressionStatement","src":"38635:72:11"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"38761:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38774:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"38785:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38770:3:11"},"nodeType":"YulFunctionCall","src":"38770:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"38717:43:11"},"nodeType":"YulFunctionCall","src":"38717:72:11"},"nodeType":"YulExpressionStatement","src":"38717:72:11"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38464:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"38476:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"38484:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"38492:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38503:4:11","type":""}],"src":"38354:442:11"},{"body":{"nodeType":"YulBlock","src":"38845:190:11","statements":[{"nodeType":"YulAssignment","src":"38855:33:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38882:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"38864:17:11"},"nodeType":"YulFunctionCall","src":"38864:24:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"38855:5:11"}]},{"body":{"nodeType":"YulBlock","src":"38978:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"38980:16:11"},"nodeType":"YulFunctionCall","src":"38980:18:11"},"nodeType":"YulExpressionStatement","src":"38980:18:11"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38903:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"38910:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"38900:2:11"},"nodeType":"YulFunctionCall","src":"38900:77:11"},"nodeType":"YulIf","src":"38897:103:11"},{"nodeType":"YulAssignment","src":"39009:20:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39020:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"39027:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39016:3:11"},"nodeType":"YulFunctionCall","src":"39016:13:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"39009:3:11"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38831:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"38841:3:11","type":""}],"src":"38802:233:11"},{"body":{"nodeType":"YulBlock","src":"39089:362:11","statements":[{"nodeType":"YulAssignment","src":"39099:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"39122:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"39104:17:11"},"nodeType":"YulFunctionCall","src":"39104:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"39099:1:11"}]},{"nodeType":"YulAssignment","src":"39133:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"39156:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"39138:17:11"},"nodeType":"YulFunctionCall","src":"39138:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"39133:1:11"}]},{"nodeType":"YulVariableDeclaration","src":"39167:28:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"39190:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"39193:1:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"39186:3:11"},"nodeType":"YulFunctionCall","src":"39186:9:11"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"39171:11:11","type":""}]},{"nodeType":"YulAssignment","src":"39204:41:11","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"39233:11:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"39215:17:11"},"nodeType":"YulFunctionCall","src":"39215:30:11"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"39204:7:11"}]},{"body":{"nodeType":"YulBlock","src":"39422:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"39424:16:11"},"nodeType":"YulFunctionCall","src":"39424:18:11"},"nodeType":"YulExpressionStatement","src":"39424:18:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"39355:1:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"39348:6:11"},"nodeType":"YulFunctionCall","src":"39348:9:11"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"39378:1:11"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"39385:7:11"},{"name":"x","nodeType":"YulIdentifier","src":"39394:1:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"39381:3:11"},"nodeType":"YulFunctionCall","src":"39381:15:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"39375:2:11"},"nodeType":"YulFunctionCall","src":"39375:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"39328:2:11"},"nodeType":"YulFunctionCall","src":"39328:83:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"39308:6:11"},"nodeType":"YulFunctionCall","src":"39308:113:11"},"nodeType":"YulIf","src":"39305:139:11"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"39072:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"39075:1:11","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"39081:7:11","type":""}],"src":"39041:410:11"},{"body":{"nodeType":"YulBlock","src":"39485:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39502:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"39505:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39495:6:11"},"nodeType":"YulFunctionCall","src":"39495:88:11"},"nodeType":"YulExpressionStatement","src":"39495:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39599:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"39602:4:11","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39592:6:11"},"nodeType":"YulFunctionCall","src":"39592:15:11"},"nodeType":"YulExpressionStatement","src":"39592:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39623:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"39626:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"39616:6:11"},"nodeType":"YulFunctionCall","src":"39616:15:11"},"nodeType":"YulExpressionStatement","src":"39616:15:11"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"39457:180:11"},{"body":{"nodeType":"YulBlock","src":"39685:143:11","statements":[{"nodeType":"YulAssignment","src":"39695:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"39718:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"39700:17:11"},"nodeType":"YulFunctionCall","src":"39700:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"39695:1:11"}]},{"nodeType":"YulAssignment","src":"39729:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"39752:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"39734:17:11"},"nodeType":"YulFunctionCall","src":"39734:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"39729:1:11"}]},{"body":{"nodeType":"YulBlock","src":"39776:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"39778:16:11"},"nodeType":"YulFunctionCall","src":"39778:18:11"},"nodeType":"YulExpressionStatement","src":"39778:18:11"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"39773:1:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"39766:6:11"},"nodeType":"YulFunctionCall","src":"39766:9:11"},"nodeType":"YulIf","src":"39763:35:11"},{"nodeType":"YulAssignment","src":"39808:14:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"39817:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"39820:1:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"39813:3:11"},"nodeType":"YulFunctionCall","src":"39813:9:11"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"39808:1:11"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"39674:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"39677:1:11","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"39683:1:11","type":""}],"src":"39643:185:11"},{"body":{"nodeType":"YulBlock","src":"39893:81:11","statements":[{"nodeType":"YulAssignment","src":"39903:65:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39960:5:11"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"39943:16:11"},"nodeType":"YulFunctionCall","src":"39943:23:11"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"39934:8:11"},"nodeType":"YulFunctionCall","src":"39934:33:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"39916:17:11"},"nodeType":"YulFunctionCall","src":"39916:52:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"39903:9:11"}]}]},"name":"convert_t_uint96_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39873:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"39883:9:11","type":""}],"src":"39834:140:11"},{"body":{"nodeType":"YulBlock","src":"40044:65:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40061:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40096:5:11"}],"functionName":{"name":"convert_t_uint96_to_t_uint256","nodeType":"YulIdentifier","src":"40066:29:11"},"nodeType":"YulFunctionCall","src":"40066:36:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40054:6:11"},"nodeType":"YulFunctionCall","src":"40054:49:11"},"nodeType":"YulExpressionStatement","src":"40054:49:11"}]},"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40032:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"40039:3:11","type":""}],"src":"39980:129:11"},{"body":{"nodeType":"YulBlock","src":"40179:82:11","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"40202:3:11"},{"name":"src","nodeType":"YulIdentifier","src":"40207:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"40212:6:11"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"40189:12:11"},"nodeType":"YulFunctionCall","src":"40189:30:11"},"nodeType":"YulExpressionStatement","src":"40189:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"40239:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"40244:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40235:3:11"},"nodeType":"YulFunctionCall","src":"40235:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"40253:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40228:6:11"},"nodeType":"YulFunctionCall","src":"40228:27:11"},"nodeType":"YulExpressionStatement","src":"40228:27:11"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"40161:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"40166:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"40171:6:11","type":""}],"src":"40115:146:11"},{"body":{"nodeType":"YulBlock","src":"40393:215:11","statements":[{"nodeType":"YulAssignment","src":"40403:78:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40469:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"40474:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40410:58:11"},"nodeType":"YulFunctionCall","src":"40410:71:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40403:3:11"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"40528:5:11"},{"name":"pos","nodeType":"YulIdentifier","src":"40535:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"40540:6:11"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"40491:36:11"},"nodeType":"YulFunctionCall","src":"40491:56:11"},"nodeType":"YulExpressionStatement","src":"40491:56:11"},{"nodeType":"YulAssignment","src":"40556:46:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40567:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"40594:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"40572:21:11"},"nodeType":"YulFunctionCall","src":"40572:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40563:3:11"},"nodeType":"YulFunctionCall","src":"40563:39:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40556:3:11"}]}]},"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"40366:5:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"40373:6:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"40381:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40389:3:11","type":""}],"src":"40291:317:11"},{"body":{"nodeType":"YulBlock","src":"40853:534:11","statements":[{"nodeType":"YulAssignment","src":"40863:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40875:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"40886:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40871:3:11"},"nodeType":"YulFunctionCall","src":"40871:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40863:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"40944:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40957:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"40968:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40953:3:11"},"nodeType":"YulFunctionCall","src":"40953:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"40900:43:11"},"nodeType":"YulFunctionCall","src":"40900:71:11"},"nodeType":"YulExpressionStatement","src":"40900:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"41025:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41038:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"41049:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41034:3:11"},"nodeType":"YulFunctionCall","src":"41034:18:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"40981:43:11"},"nodeType":"YulFunctionCall","src":"40981:72:11"},"nodeType":"YulExpressionStatement","src":"40981:72:11"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"41106:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41119:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"41130:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41115:3:11"},"nodeType":"YulFunctionCall","src":"41115:18:11"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"41063:42:11"},"nodeType":"YulFunctionCall","src":"41063:71:11"},"nodeType":"YulExpressionStatement","src":"41063:71:11"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"41188:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41201:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"41212:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41197:3:11"},"nodeType":"YulFunctionCall","src":"41197:18:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"41144:43:11"},"nodeType":"YulFunctionCall","src":"41144:72:11"},"nodeType":"YulExpressionStatement","src":"41144:72:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41237:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"41248:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41233:3:11"},"nodeType":"YulFunctionCall","src":"41233:19:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41258:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"41264:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41254:3:11"},"nodeType":"YulFunctionCall","src":"41254:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41226:6:11"},"nodeType":"YulFunctionCall","src":"41226:49:11"},"nodeType":"YulExpressionStatement","src":"41226:49:11"},{"nodeType":"YulAssignment","src":"41284:96:11","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"41358:6:11"},{"name":"value5","nodeType":"YulIdentifier","src":"41366:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"41375:4:11"}],"functionName":{"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41292:65:11"},"nodeType":"YulFunctionCall","src":"41292:88:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41284:4:11"}]}]},"name":"abi_encode_tuple_t_uint256_t_bytes32_t_uint96_t_bytes32_t_string_calldata_ptr__to_t_uint256_t_bytes32_t_uint256_t_bytes32_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40785:9:11","type":""},{"name":"value5","nodeType":"YulTypedName","src":"40797:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"40805:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"40813:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"40821:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"40829:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"40837:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40848:4:11","type":""}],"src":"40614:773:11"},{"body":{"nodeType":"YulBlock","src":"41437:172:11","statements":[{"nodeType":"YulAssignment","src":"41447:24:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"41469:1:11"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"41452:16:11"},"nodeType":"YulFunctionCall","src":"41452:19:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"41447:1:11"}]},{"nodeType":"YulAssignment","src":"41480:24:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"41502:1:11"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"41485:16:11"},"nodeType":"YulFunctionCall","src":"41485:19:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"41480:1:11"}]},{"nodeType":"YulAssignment","src":"41513:17:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"41525:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"41528:1:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41521:3:11"},"nodeType":"YulFunctionCall","src":"41521:9:11"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"41513:4:11"}]},{"body":{"nodeType":"YulBlock","src":"41580:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"41582:16:11"},"nodeType":"YulFunctionCall","src":"41582:18:11"},"nodeType":"YulExpressionStatement","src":"41582:18:11"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"41546:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"41552:26:11","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"41543:2:11"},"nodeType":"YulFunctionCall","src":"41543:36:11"},"nodeType":"YulIf","src":"41540:62:11"}]},"name":"checked_sub_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"41423:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"41426:1:11","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"41432:4:11","type":""}],"src":"41393:216:11"},{"body":{"nodeType":"YulBlock","src":"41673:80:11","statements":[{"nodeType":"YulAssignment","src":"41683:64:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41739:5:11"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"41722:16:11"},"nodeType":"YulFunctionCall","src":"41722:23:11"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"41713:8:11"},"nodeType":"YulFunctionCall","src":"41713:33:11"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"41696:16:11"},"nodeType":"YulFunctionCall","src":"41696:51:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"41683:9:11"}]}]},"name":"convert_t_uint64_to_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41653:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"41663:9:11","type":""}],"src":"41615:138:11"},{"body":{"nodeType":"YulBlock","src":"41822:64:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41839:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41873:5:11"}],"functionName":{"name":"convert_t_uint64_to_t_uint96","nodeType":"YulIdentifier","src":"41844:28:11"},"nodeType":"YulFunctionCall","src":"41844:35:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41832:6:11"},"nodeType":"YulFunctionCall","src":"41832:48:11"},"nodeType":"YulExpressionStatement","src":"41832:48:11"}]},"name":"abi_encode_t_uint64_to_t_uint96_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41810:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"41817:3:11","type":""}],"src":"41759:127:11"},{"body":{"nodeType":"YulBlock","src":"42016:204:11","statements":[{"nodeType":"YulAssignment","src":"42026:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42038:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"42049:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42034:3:11"},"nodeType":"YulFunctionCall","src":"42034:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42026:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"42106:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42119:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"42130:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42115:3:11"},"nodeType":"YulFunctionCall","src":"42115:17:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"42062:43:11"},"nodeType":"YulFunctionCall","src":"42062:71:11"},"nodeType":"YulExpressionStatement","src":"42062:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"42185:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42198:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"42209:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42194:3:11"},"nodeType":"YulFunctionCall","src":"42194:18:11"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"42143:41:11"},"nodeType":"YulFunctionCall","src":"42143:70:11"},"nodeType":"YulExpressionStatement","src":"42143:70:11"}]},"name":"abi_encode_tuple_t_bytes32_t_uint64__to_t_bytes32_t_uint96__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41980:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"41992:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"42000:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42011:4:11","type":""}],"src":"41892:328:11"},{"body":{"nodeType":"YulBlock","src":"42332:76:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42354:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"42362:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42350:3:11"},"nodeType":"YulFunctionCall","src":"42350:14:11"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"42366:34:11","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42343:6:11"},"nodeType":"YulFunctionCall","src":"42343:58:11"},"nodeType":"YulExpressionStatement","src":"42343:58:11"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"42324:6:11","type":""}],"src":"42226:182:11"},{"body":{"nodeType":"YulBlock","src":"42560:220:11","statements":[{"nodeType":"YulAssignment","src":"42570:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42636:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"42641:2:11","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42577:58:11"},"nodeType":"YulFunctionCall","src":"42577:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42570:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42742:3:11"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"42653:88:11"},"nodeType":"YulFunctionCall","src":"42653:93:11"},"nodeType":"YulExpressionStatement","src":"42653:93:11"},{"nodeType":"YulAssignment","src":"42755:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42766:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"42771:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42762:3:11"},"nodeType":"YulFunctionCall","src":"42762:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42755:3:11"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42548:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42556:3:11","type":""}],"src":"42414:366:11"},{"body":{"nodeType":"YulBlock","src":"42957:248:11","statements":[{"nodeType":"YulAssignment","src":"42967:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42979:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"42990:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42975:3:11"},"nodeType":"YulFunctionCall","src":"42975:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42967:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43014:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"43025:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43010:3:11"},"nodeType":"YulFunctionCall","src":"43010:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43033:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"43039:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43029:3:11"},"nodeType":"YulFunctionCall","src":"43029:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43003:6:11"},"nodeType":"YulFunctionCall","src":"43003:47:11"},"nodeType":"YulExpressionStatement","src":"43003:47:11"},{"nodeType":"YulAssignment","src":"43059:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43193:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43067:124:11"},"nodeType":"YulFunctionCall","src":"43067:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43059:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42937:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42952:4:11","type":""}],"src":"42786:419:11"},{"body":{"nodeType":"YulBlock","src":"43317:124:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43339:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"43347:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43335:3:11"},"nodeType":"YulFunctionCall","src":"43335:14:11"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"43351:34:11","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43328:6:11"},"nodeType":"YulFunctionCall","src":"43328:58:11"},"nodeType":"YulExpressionStatement","src":"43328:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43407:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"43415:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43403:3:11"},"nodeType":"YulFunctionCall","src":"43403:15:11"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"43420:13:11","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43396:6:11"},"nodeType":"YulFunctionCall","src":"43396:38:11"},"nodeType":"YulExpressionStatement","src":"43396:38:11"}]},"name":"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"43309:6:11","type":""}],"src":"43211:230:11"},{"body":{"nodeType":"YulBlock","src":"43593:220:11","statements":[{"nodeType":"YulAssignment","src":"43603:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43669:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"43674:2:11","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43610:58:11"},"nodeType":"YulFunctionCall","src":"43610:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"43603:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43775:3:11"}],"functionName":{"name":"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","nodeType":"YulIdentifier","src":"43686:88:11"},"nodeType":"YulFunctionCall","src":"43686:93:11"},"nodeType":"YulExpressionStatement","src":"43686:93:11"},{"nodeType":"YulAssignment","src":"43788:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43799:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"43804:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43795:3:11"},"nodeType":"YulFunctionCall","src":"43795:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"43788:3:11"}]}]},"name":"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"43581:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"43589:3:11","type":""}],"src":"43447:366:11"},{"body":{"nodeType":"YulBlock","src":"43990:248:11","statements":[{"nodeType":"YulAssignment","src":"44000:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44012:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"44023:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44008:3:11"},"nodeType":"YulFunctionCall","src":"44008:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44000:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44047:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"44058:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44043:3:11"},"nodeType":"YulFunctionCall","src":"44043:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44066:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"44072:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44062:3:11"},"nodeType":"YulFunctionCall","src":"44062:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44036:6:11"},"nodeType":"YulFunctionCall","src":"44036:47:11"},"nodeType":"YulExpressionStatement","src":"44036:47:11"},{"nodeType":"YulAssignment","src":"44092:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44226:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44100:124:11"},"nodeType":"YulFunctionCall","src":"44100:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44092:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43970:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43985:4:11","type":""}],"src":"43819:419:11"},{"body":{"nodeType":"YulBlock","src":"44350:60:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44372:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"44380:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44368:3:11"},"nodeType":"YulFunctionCall","src":"44368:14:11"},{"hexValue":"5061757361626c653a20706175736564","kind":"string","nodeType":"YulLiteral","src":"44384:18:11","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44361:6:11"},"nodeType":"YulFunctionCall","src":"44361:42:11"},"nodeType":"YulExpressionStatement","src":"44361:42:11"}]},"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44342:6:11","type":""}],"src":"44244:166:11"},{"body":{"nodeType":"YulBlock","src":"44562:220:11","statements":[{"nodeType":"YulAssignment","src":"44572:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44638:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"44643:2:11","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44579:58:11"},"nodeType":"YulFunctionCall","src":"44579:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"44572:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44744:3:11"}],"functionName":{"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulIdentifier","src":"44655:88:11"},"nodeType":"YulFunctionCall","src":"44655:93:11"},"nodeType":"YulExpressionStatement","src":"44655:93:11"},{"nodeType":"YulAssignment","src":"44757:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44768:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"44773:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44764:3:11"},"nodeType":"YulFunctionCall","src":"44764:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"44757:3:11"}]}]},"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"44550:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"44558:3:11","type":""}],"src":"44416:366:11"},{"body":{"nodeType":"YulBlock","src":"44959:248:11","statements":[{"nodeType":"YulAssignment","src":"44969:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44981:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"44992:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44977:3:11"},"nodeType":"YulFunctionCall","src":"44977:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44969:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45016:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"45027:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45012:3:11"},"nodeType":"YulFunctionCall","src":"45012:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45035:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"45041:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45031:3:11"},"nodeType":"YulFunctionCall","src":"45031:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45005:6:11"},"nodeType":"YulFunctionCall","src":"45005:47:11"},"nodeType":"YulExpressionStatement","src":"45005:47:11"},{"nodeType":"YulAssignment","src":"45061:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45195:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45069:124:11"},"nodeType":"YulFunctionCall","src":"45069:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45061:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44939:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"44954:4:11","type":""}],"src":"44788:419:11"},{"body":{"nodeType":"YulBlock","src":"45319:61:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45341:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"45349:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45337:3:11"},"nodeType":"YulFunctionCall","src":"45337:14:11"},{"hexValue":"546f6b656e4e6f74537570706f72746564","kind":"string","nodeType":"YulLiteral","src":"45353:19:11","type":"","value":"TokenNotSupported"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45330:6:11"},"nodeType":"YulFunctionCall","src":"45330:43:11"},"nodeType":"YulExpressionStatement","src":"45330:43:11"}]},"name":"store_literal_in_memory_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45311:6:11","type":""}],"src":"45213:167:11"},{"body":{"nodeType":"YulBlock","src":"45532:220:11","statements":[{"nodeType":"YulAssignment","src":"45542:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45608:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"45613:2:11","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45549:58:11"},"nodeType":"YulFunctionCall","src":"45549:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"45542:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45714:3:11"}],"functionName":{"name":"store_literal_in_memory_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1","nodeType":"YulIdentifier","src":"45625:88:11"},"nodeType":"YulFunctionCall","src":"45625:93:11"},"nodeType":"YulExpressionStatement","src":"45625:93:11"},{"nodeType":"YulAssignment","src":"45727:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45738:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"45743:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45734:3:11"},"nodeType":"YulFunctionCall","src":"45734:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"45727:3:11"}]}]},"name":"abi_encode_t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"45520:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"45528:3:11","type":""}],"src":"45386:366:11"},{"body":{"nodeType":"YulBlock","src":"45929:248:11","statements":[{"nodeType":"YulAssignment","src":"45939:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45951:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"45962:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45947:3:11"},"nodeType":"YulFunctionCall","src":"45947:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45939:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45986:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"45997:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45982:3:11"},"nodeType":"YulFunctionCall","src":"45982:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46005:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"46011:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46001:3:11"},"nodeType":"YulFunctionCall","src":"46001:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45975:6:11"},"nodeType":"YulFunctionCall","src":"45975:47:11"},"nodeType":"YulExpressionStatement","src":"45975:47:11"},{"nodeType":"YulAssignment","src":"46031:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46165:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46039:124:11"},"nodeType":"YulFunctionCall","src":"46039:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46031:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45909:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45924:4:11","type":""}],"src":"45758:419:11"},{"body":{"nodeType":"YulBlock","src":"46289:56:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46311:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"46319:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46307:3:11"},"nodeType":"YulFunctionCall","src":"46307:14:11"},{"hexValue":"416d6f756e7449735a65726f","kind":"string","nodeType":"YulLiteral","src":"46323:14:11","type":"","value":"AmountIsZero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46300:6:11"},"nodeType":"YulFunctionCall","src":"46300:38:11"},"nodeType":"YulExpressionStatement","src":"46300:38:11"}]},"name":"store_literal_in_memory_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"46281:6:11","type":""}],"src":"46183:162:11"},{"body":{"nodeType":"YulBlock","src":"46497:220:11","statements":[{"nodeType":"YulAssignment","src":"46507:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46573:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"46578:2:11","type":"","value":"12"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46514:58:11"},"nodeType":"YulFunctionCall","src":"46514:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"46507:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46679:3:11"}],"functionName":{"name":"store_literal_in_memory_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2","nodeType":"YulIdentifier","src":"46590:88:11"},"nodeType":"YulFunctionCall","src":"46590:93:11"},"nodeType":"YulExpressionStatement","src":"46590:93:11"},{"nodeType":"YulAssignment","src":"46692:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46703:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"46708:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46699:3:11"},"nodeType":"YulFunctionCall","src":"46699:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"46692:3:11"}]}]},"name":"abi_encode_t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"46485:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"46493:3:11","type":""}],"src":"46351:366:11"},{"body":{"nodeType":"YulBlock","src":"46894:248:11","statements":[{"nodeType":"YulAssignment","src":"46904:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46916:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"46927:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46912:3:11"},"nodeType":"YulFunctionCall","src":"46912:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46904:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46951:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"46962:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46947:3:11"},"nodeType":"YulFunctionCall","src":"46947:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46970:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"46976:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46966:3:11"},"nodeType":"YulFunctionCall","src":"46966:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46940:6:11"},"nodeType":"YulFunctionCall","src":"46940:47:11"},"nodeType":"YulExpressionStatement","src":"46940:47:11"},{"nodeType":"YulAssignment","src":"46996:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47130:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47004:124:11"},"nodeType":"YulFunctionCall","src":"47004:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46996:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46874:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46889:4:11","type":""}],"src":"46723:419:11"},{"body":{"nodeType":"YulBlock","src":"47254:60:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"47276:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"47284:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47272:3:11"},"nodeType":"YulFunctionCall","src":"47272:14:11"},{"hexValue":"5468726f775a65726f41646472657373","kind":"string","nodeType":"YulLiteral","src":"47288:18:11","type":"","value":"ThrowZeroAddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47265:6:11"},"nodeType":"YulFunctionCall","src":"47265:42:11"},"nodeType":"YulExpressionStatement","src":"47265:42:11"}]},"name":"store_literal_in_memory_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"47246:6:11","type":""}],"src":"47148:166:11"},{"body":{"nodeType":"YulBlock","src":"47466:220:11","statements":[{"nodeType":"YulAssignment","src":"47476:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47542:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"47547:2:11","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47483:58:11"},"nodeType":"YulFunctionCall","src":"47483:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"47476:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47648:3:11"}],"functionName":{"name":"store_literal_in_memory_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7","nodeType":"YulIdentifier","src":"47559:88:11"},"nodeType":"YulFunctionCall","src":"47559:93:11"},"nodeType":"YulExpressionStatement","src":"47559:93:11"},{"nodeType":"YulAssignment","src":"47661:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47672:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"47677:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47668:3:11"},"nodeType":"YulFunctionCall","src":"47668:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"47661:3:11"}]}]},"name":"abi_encode_t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"47454:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"47462:3:11","type":""}],"src":"47320:366:11"},{"body":{"nodeType":"YulBlock","src":"47863:248:11","statements":[{"nodeType":"YulAssignment","src":"47873:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47885:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"47896:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47881:3:11"},"nodeType":"YulFunctionCall","src":"47881:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47873:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47920:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"47931:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47916:3:11"},"nodeType":"YulFunctionCall","src":"47916:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47939:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"47945:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"47935:3:11"},"nodeType":"YulFunctionCall","src":"47935:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47909:6:11"},"nodeType":"YulFunctionCall","src":"47909:47:11"},"nodeType":"YulExpressionStatement","src":"47909:47:11"},{"nodeType":"YulAssignment","src":"47965:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"48099:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47973:124:11"},"nodeType":"YulFunctionCall","src":"47973:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47965:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"47843:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"47858:4:11","type":""}],"src":"47692:419:11"},{"body":{"nodeType":"YulBlock","src":"48223:69:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"48245:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"48253:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48241:3:11"},"nodeType":"YulFunctionCall","src":"48241:14:11"},{"hexValue":"496e76616c696453656e646572466565526563697069656e74","kind":"string","nodeType":"YulLiteral","src":"48257:27:11","type":"","value":"InvalidSenderFeeRecipient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48234:6:11"},"nodeType":"YulFunctionCall","src":"48234:51:11"},"nodeType":"YulExpressionStatement","src":"48234:51:11"}]},"name":"store_literal_in_memory_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"48215:6:11","type":""}],"src":"48117:175:11"},{"body":{"nodeType":"YulBlock","src":"48444:220:11","statements":[{"nodeType":"YulAssignment","src":"48454:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48520:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"48525:2:11","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"48461:58:11"},"nodeType":"YulFunctionCall","src":"48461:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"48454:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48626:3:11"}],"functionName":{"name":"store_literal_in_memory_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8","nodeType":"YulIdentifier","src":"48537:88:11"},"nodeType":"YulFunctionCall","src":"48537:93:11"},"nodeType":"YulExpressionStatement","src":"48537:93:11"},{"nodeType":"YulAssignment","src":"48639:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48650:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"48655:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48646:3:11"},"nodeType":"YulFunctionCall","src":"48646:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"48639:3:11"}]}]},"name":"abi_encode_t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"48432:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"48440:3:11","type":""}],"src":"48298:366:11"},{"body":{"nodeType":"YulBlock","src":"48841:248:11","statements":[{"nodeType":"YulAssignment","src":"48851:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48863:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"48874:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48859:3:11"},"nodeType":"YulFunctionCall","src":"48859:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48851:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48898:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"48909:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48894:3:11"},"nodeType":"YulFunctionCall","src":"48894:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"48917:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"48923:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"48913:3:11"},"nodeType":"YulFunctionCall","src":"48913:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48887:6:11"},"nodeType":"YulFunctionCall","src":"48887:47:11"},"nodeType":"YulExpressionStatement","src":"48887:47:11"},{"nodeType":"YulAssignment","src":"48943:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"49077:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"48951:124:11"},"nodeType":"YulFunctionCall","src":"48951:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48943:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"48821:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"48836:4:11","type":""}],"src":"48670:419:11"},{"body":{"nodeType":"YulBlock","src":"49201:64:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"49223:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"49231:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49219:3:11"},"nodeType":"YulFunctionCall","src":"49219:14:11"},{"hexValue":"5061757361626c653a206e6f7420706175736564","kind":"string","nodeType":"YulLiteral","src":"49235:22:11","type":"","value":"Pausable: not paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49212:6:11"},"nodeType":"YulFunctionCall","src":"49212:46:11"},"nodeType":"YulExpressionStatement","src":"49212:46:11"}]},"name":"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"49193:6:11","type":""}],"src":"49095:170:11"},{"body":{"nodeType":"YulBlock","src":"49417:220:11","statements":[{"nodeType":"YulAssignment","src":"49427:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49493:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"49498:2:11","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"49434:58:11"},"nodeType":"YulFunctionCall","src":"49434:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"49427:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49599:3:11"}],"functionName":{"name":"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","nodeType":"YulIdentifier","src":"49510:88:11"},"nodeType":"YulFunctionCall","src":"49510:93:11"},"nodeType":"YulExpressionStatement","src":"49510:93:11"},{"nodeType":"YulAssignment","src":"49612:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49623:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"49628:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49619:3:11"},"nodeType":"YulFunctionCall","src":"49619:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"49612:3:11"}]}]},"name":"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"49405:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"49413:3:11","type":""}],"src":"49271:366:11"},{"body":{"nodeType":"YulBlock","src":"49814:248:11","statements":[{"nodeType":"YulAssignment","src":"49824:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49836:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"49847:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49832:3:11"},"nodeType":"YulFunctionCall","src":"49832:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49824:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49871:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"49882:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49867:3:11"},"nodeType":"YulFunctionCall","src":"49867:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"49890:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"49896:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"49886:3:11"},"nodeType":"YulFunctionCall","src":"49886:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49860:6:11"},"nodeType":"YulFunctionCall","src":"49860:47:11"},"nodeType":"YulExpressionStatement","src":"49860:47:11"},{"nodeType":"YulAssignment","src":"49916:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"50050:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"49924:124:11"},"nodeType":"YulFunctionCall","src":"49924:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49916:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49794:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"49809:4:11","type":""}],"src":"49643:419:11"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    // struct SharedStructs.Institution -> struct SharedStructs.Institution\n    function abi_encode_t_struct$_Institution_$2058_memory_ptr_to_t_struct$_Institution_$2058_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // code\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // name\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Institution_$2058_memory_ptr_to_t_struct$_Institution_$2058_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Institution_$2058_memory_ptr_to_t_struct$_Institution_$2058_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x40)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct SharedStructs.Institution[] -> struct SharedStructs.Institution[]\n    function abi_encode_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Institution_$2058_memory_ptr_to_t_struct$_Institution_$2058_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    // struct SharedStructs.Institution\n    function abi_decode_t_struct$_Institution_$2058_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x40) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x40)\n\n        {\n            // code\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_bytes32(add(headStart, offset), end))\n\n        }\n\n        {\n            // name\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_bytes32(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct SharedStructs.Institution[]\n    function abi_decode_available_length_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x40))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x40) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_struct$_Institution_$2058_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // struct SharedStructs.Institution[]\n    function abi_decode_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes32t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint96_to_t_uint96(value, pos) {\n        mstore(pos, cleanup_t_uint96(value))\n    }\n\n    // struct IGateway.Order -> struct IGateway.Order\n    function abi_encode_t_struct$_Order_$1960_memory_ptr_to_t_struct$_Order_$1960_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0140)\n\n        {\n            // sender\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // token\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // senderFeeRecipient\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // senderFee\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // protocolFee\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // isFulfilled\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // isRefunded\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // refundAddress\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // currentBPS\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_uint96_to_t_uint96(memberValue0, add(pos, 0x0100))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x0120))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0120))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Order_$1960_memory_ptr__to_t_struct$_Order_$1960_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 320)\n\n        abi_encode_t_struct$_Order_$1960_memory_ptr_to_t_struct$_Order_$1960_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint64_t_uint256__to_t_uint64_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    // struct SharedStructs.InstitutionByCode -> struct SharedStructs.InstitutionByCode\n    function abi_encode_t_struct$_InstitutionByCode_$2063_memory_ptr_to_t_struct$_InstitutionByCode_$2063_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // name\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // currency\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_InstitutionByCode_$2063_memory_ptr__to_t_struct$_InstitutionByCode_$2063_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_InstitutionByCode_$2063_memory_ptr_to_t_struct$_InstitutionByCode_$2063_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint96(value) {\n        if iszero(eq(value, cleanup_t_uint96(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint96(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint96(value)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes32t_uint96t_addresst_uint256t_addresst_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8 {\n        if slt(sub(dataEnd, headStart), 256) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint96(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 224))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value7, value8 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes32t_addresst_uint64(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage(value) -> length {\n\n        length := sload(value)\n\n    }\n\n    function array_dataslot_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function shift_right_0_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(0, value)\n\n    }\n\n    function cleanup_from_storage_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function extract_from_storage_value_offset_0t_bytes32(slot_value) -> value {\n        value := cleanup_from_storage_t_bytes32(shift_right_0_unsigned(slot_value))\n    }\n\n    // struct SharedStructs.Institution -> struct SharedStructs.Institution\n    function abi_encode_t_struct$_Institution_$2058_storage_to_t_struct$_Institution_$2058_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x40)\n        let slotValue := 0\n\n        {\n            // code\n            slotValue := sload(add(value, 0x00))\n            let memberValue0 := extract_from_storage_value_offset_0t_bytes32(slotValue)\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // name\n            slotValue := sload(add(value, 0x01))\n            let memberValue0 := extract_from_storage_value_offset_0t_bytes32(slotValue)\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Institution_$2058_storage_to_t_struct$_Institution_$2058_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Institution_$2058_storage_to_t_struct$_Institution_$2058_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x40)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage(ptr) -> next {\n        next := add(ptr, 0x02)\n    }\n\n    // struct SharedStructs.Institution[] -> struct SharedStructs.Institution[]\n    function abi_encode_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage_to_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := srcPtr\n            pos := abi_encodeUpdatedPos_t_struct$_Institution_$2058_storage_to_t_struct$_Institution_$2058_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage__to_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage_to_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Gateway: zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead(memPtr) {\n\n        mstore(add(memPtr, 0), \"Gateway: treasury address alread\")\n\n        mstore(add(memPtr, 32), \"y set\")\n\n    }\n\n    function abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Gateway: aggregator address alre\")\n\n        mstore(add(memPtr, 32), \"ady set\")\n\n    }\n\n    function abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243(memPtr) {\n\n        mstore(add(memPtr, 0), \"OnlyAggregator\")\n\n    }\n\n    function abi_encode_t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_feafe41130685cc96aef13592e300ecc17e4f49a66bae4a40d65fbdcce6c7243_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5(memPtr) {\n\n        mstore(add(memPtr, 0), \"OrderFulfilled\")\n\n    }\n\n    function abi_encode_t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_84045048554d058b8a53b78300214112125a1eccddd735f23a805c1c4be2d6f5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd(memPtr) {\n\n        mstore(add(memPtr, 0), \"OrderRefunded\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ab1527a936433fc64df27b599aa49d8cbaac3a88b1b3888cf4384b9e8bea9cd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de(memPtr) {\n\n        mstore(add(memPtr, 0), \"FeeExceedsProtocolFee\")\n\n    }\n\n    function abi_encode_t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c06b87282d804789c7604f19c70a4ed32c29ae2e290ed8b49435ec1484c8a5de_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable2Step: caller is not the \")\n\n        mstore(add(memPtr, 32), \"new owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is alrea\")\n\n        mstore(add(memPtr, 32), \"dy initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338(memPtr) {\n\n        mstore(add(memPtr, 0), \"Gateway: invalid status\")\n\n    }\n\n    function abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4(memPtr) {\n\n        mstore(add(memPtr, 0), \"InvalidMessageHash\")\n\n    }\n\n    function abi_encode_t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cb943cef37628d805c376539a30fa265326b6f2ae5d9af4711b17e54dc8f15d4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function convert_t_uint96_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint96(value)))\n    }\n\n    function abi_encode_t_uint96_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint96_to_t_uint256(value))\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_bytes32_t_uint96_t_bytes32_t_string_calldata_ptr__to_t_uint256_t_bytes32_t_uint256_t_bytes32_t_string_memory_ptr__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value4, value5,  tail)\n\n    }\n\n    function checked_sub_t_uint96(x, y) -> diff {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function convert_t_uint64_to_t_uint96(value) -> converted {\n        converted := cleanup_t_uint96(identity(cleanup_t_uint64(value)))\n    }\n\n    function abi_encode_t_uint64_to_t_uint96_fromStack(value, pos) {\n        mstore(pos, convert_t_uint64_to_t_uint96(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint64__to_t_bytes32_t_uint96__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint96_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is not i\")\n\n        mstore(add(memPtr, 32), \"nitializing\")\n\n    }\n\n    function abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1(memPtr) {\n\n        mstore(add(memPtr, 0), \"TokenNotSupported\")\n\n    }\n\n    function abi_encode_t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d2f8e8f0a3132d85392dd42596f134395b200d03cc73cebaef0c903d898657e1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2(memPtr) {\n\n        mstore(add(memPtr, 0), \"AmountIsZero\")\n\n    }\n\n    function abi_encode_t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_41a3c7da6a405d0b582130b233ab9373122491f5044da88c4622af2417f2b5d2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7(memPtr) {\n\n        mstore(add(memPtr, 0), \"ThrowZeroAddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c69ddfb7ac12bc88a1972db6046dbf646efc1690dd81423d8eb86a59fbc59dd7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8(memPtr) {\n\n        mstore(add(memPtr, 0), \"InvalidSenderFeeRecipient\")\n\n    }\n\n    function abi_encode_t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ffb69afb32cdb1c7026bbd5bf2be167eb8b698d96a6fa0abd73b70c43ca464b8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xC2280103 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC2280103 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xCD992400 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xD12FF20A EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xF22EE704 EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A7 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0xB810C636 EQ PUSH2 0x2BE JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x71EEDB88 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x75151B63 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x768C6EC0 EQ PUSH2 0x252 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x2621338 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x32200882 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x40EBC677 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x47094E2E EQ PUSH2 0x1AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x285D JUMP JUMPDEST PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x2977 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x186 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x2B47 JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x190 PUSH2 0x5BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x2C01 JUMP JUMPDEST PUSH2 0x5D0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x2C81 JUMP JUMPDEST PUSH2 0x898 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D2 PUSH2 0x903 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x2CC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH2 0x91A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH2 0x92E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x2CC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x2D5A JUMP JUMPDEST PUSH2 0xDCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x2CC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x285D JUMP JUMPDEST PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x2EA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28A PUSH2 0x1043 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x294 PUSH2 0x10D0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29E PUSH2 0x1220 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A8 PUSH2 0x1232 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH2 0x125C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x285D JUMP JUMPDEST PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x2F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x2F7E JUMP JUMPDEST PUSH2 0x12C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x343 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x3058 JUMP JUMPDEST PUSH2 0x1447 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x313D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x361 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x391 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x3158 JUMP JUMPDEST PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x2CC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x2D5A JUMP JUMPDEST PUSH2 0x2013 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0xCD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x43E JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3F8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x451 PUSH2 0x20C0 JUMP JUMPDEST PUSH1 0xCD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x470 SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x56F JUMPI PUSH1 0xCD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A2 JUMPI PUSH2 0x4A1 PUSH2 0x31BF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x507 JUMPI PUSH2 0x506 PUSH2 0x31BF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0xCE PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x533 JUMPI PUSH2 0x532 PUSH2 0x31BF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x473 JUMP JUMPDEST POP DUP2 PUSH32 0x58F3A30EC15A8D3E09FA65F9EF10219BC7A9A99D872A4ED895C37C2E761AC2AC PUSH1 0xCD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x3308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x5C6 PUSH2 0x20C0 JUMP JUMPDEST PUSH2 0x5CE PUSH2 0x213E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5D8 PUSH2 0x20C0 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x647 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63E SWAP1 PUSH2 0x3387 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x7472656173757279000000000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x74A JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x98 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F7 SWAP1 PUSH2 0x3419 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x98 PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x848 JUMP JUMPDEST PUSH32 0x61676772656761746F7200000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x847 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x801 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F8 SWAP1 PUSH2 0x34AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x99 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST DUP1 ISZERO PUSH2 0x893 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xBBC5B96E57CFECB3DBEEADF92E87F15E58E64FCD75CBE256DCC5D9EF2E51E8A4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x8A0 PUSH2 0x20C0 JUMP JUMPDEST DUP1 PUSH1 0x98 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x1CE29A697A4765BD17D91DF93BA75B250B629ECF030553FF1F6AB59F15AE6C7B DUP2 PUSH1 0x40 MLOAD PUSH2 0x8F8 SWAP2 SWAP1 PUSH2 0x34CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xCF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x922 PUSH2 0x20C0 JUMP JUMPDEST PUSH2 0x92C PUSH1 0x0 PUSH2 0x21A1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B7 SWAP1 PUSH2 0x3532 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1C SWAP1 PUSH2 0x359E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA81 SWAP1 PUSH2 0x360A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH2 0x101 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD LT ISZERO PUSH2 0xAE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADB SWAP1 PUSH2 0x3676 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x98 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB78 SWAP3 SWAP2 SWAP1 PUSH2 0x3696 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB97 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBBB SWAP2 SWAP1 PUSH2 0x36EB JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x101 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x101 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP4 PUSH2 0x101 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x101 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH2 0xC70 SWAP2 SWAP1 PUSH2 0x3747 JUMP JUMPDEST PUSH2 0xC7A SWAP2 SWAP1 PUSH2 0x377B JUMP JUMPDEST SWAP1 POP PUSH2 0x101 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x101 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x101 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP5 PUSH2 0xD2A SWAP2 SWAP1 PUSH2 0x3747 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD47 SWAP3 SWAP2 SWAP1 PUSH2 0x3696 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD66 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD8A SWAP2 SWAP1 PUSH2 0x36EB JUMP JUMPDEST POP DUP3 PUSH32 0x736FE428E1747CA8D387C2E6FA1A31A0CDE62D3A167C40A46ADE59A3CDC828E DUP6 PUSH1 0x40 MLOAD PUSH2 0xDBB SWAP2 SWAP1 PUSH2 0x37AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xCC PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0xE20 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE32 PUSH2 0x270F JUMP JUMPDEST PUSH2 0x101 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104D PUSH2 0x21D2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x106E PUSH2 0x198D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BB SWAP1 PUSH2 0x383C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10CD DUP2 PUSH2 0x21A1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x1101 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x112E JUMPI POP PUSH2 0x1110 ADDRESS PUSH2 0x21DA JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x112D JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x116D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1164 SWAP1 PUSH2 0x38CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x11AA JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH3 0x186A0 PUSH1 0x97 DUP2 SWAP1 SSTORE POP PUSH2 0x11BC PUSH2 0x21FD JUMP JUMPDEST PUSH2 0x11C4 PUSH2 0x2256 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x121D JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1214 SWAP2 SWAP1 PUSH2 0x3940 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x1228 PUSH2 0x20C0 JUMP JUMPDEST PUSH2 0x1230 PUSH2 0x22AF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x98 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x97 SLOAD SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x1289 PUSH2 0x27CC JUMP JUMPDEST PUSH1 0xCE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12CA PUSH2 0x20C0 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1339 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1330 SWAP1 PUSH2 0x3387 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 EQ DUP1 PUSH2 0x1348 JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST PUSH2 0x1387 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x137E SWAP1 PUSH2 0x39A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x746F6B656E000000000000000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x1442 JUMPI DUP1 PUSH1 0xCC PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xCFA976492AF7C14A916CC3A239F4C9C75BBD7F5F0E398BEB41D892C7EECCAE4C DUP4 PUSH1 0x40 MLOAD PUSH2 0x1439 SWAP2 SWAP1 PUSH2 0x37AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1451 PUSH2 0x2312 JUMP JUMPDEST PUSH2 0x145E DUP11 DUP11 DUP7 DUP10 DUP10 PUSH2 0x235C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 SWAP1 POP SUB PUSH2 0x14A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x149B SWAP1 PUSH2 0x3A13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 DUP14 PUSH2 0x14CE SWAP2 SWAP1 PUSH2 0x3747 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14EC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A33 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x150B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x152F SWAP2 SWAP1 PUSH2 0x36EB JUMP JUMPDEST POP PUSH2 0x102 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1581 SWAP1 PUSH2 0x3A6A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH2 0x102 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x15D9 SWAP3 SWAP2 SWAP1 PUSH2 0x3696 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x97 SLOAD PUSH1 0x98 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP12 PUSH2 0x1622 SWAP2 SWAP1 PUSH2 0x3AB2 JUMP JUMPDEST PUSH2 0x162C SWAP2 SWAP1 PUSH2 0x3B23 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x97 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP13 PUSH2 0x16F4 SWAP2 SWAP1 PUSH2 0x377B JUMP JUMPDEST DUP2 MSTORE POP PUSH2 0x101 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE SWAP1 POP POP PUSH2 0x101 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x101 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3BDD0D86E09A22D7CE596118BD3CA5EC73EA47533A465BE37621E913ED2BF333 DUP5 DUP7 DUP14 DUP16 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH2 0x1977 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A40 SWAP1 PUSH2 0x3532 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1AAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA5 SWAP1 PUSH2 0x359E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1B13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B0A SWAP1 PUSH2 0x360A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x101 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x101 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B97 SWAP2 SWAP1 PUSH2 0x3C1D JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x101 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EC9 JUMPI PUSH1 0x1 PUSH2 0x101 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x101 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD EQ PUSH2 0x1DF0 JUMPI PUSH2 0x101 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x101 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x101 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D19 SWAP3 SWAP2 SWAP1 PUSH2 0x3696 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D38 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D5C SWAP2 SWAP1 PUSH2 0x36EB JUMP JUMPDEST POP PUSH2 0x101 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x101 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x44F6938CA4A10313AABB76F874CCED61E35710A734A126E4AFB34461BF8C2501 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x0 PUSH2 0x101 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD EQ PUSH2 0x1EC8 JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x98 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x101 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E83 SWAP3 SWAP2 SWAP1 PUSH2 0x3696 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EA2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EC6 SWAP2 SWAP1 PUSH2 0x36EB JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x97 SLOAD DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x101 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH2 0x1EFB SWAP2 SWAP1 PUSH2 0x3AB2 JUMP JUMPDEST PUSH2 0x1F05 SWAP2 SWAP1 PUSH2 0x3B23 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x101 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1F2E SWAP2 SWAP1 PUSH2 0x377B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP7 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F70 SWAP3 SWAP2 SWAP1 PUSH2 0x3696 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F8F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FB3 SWAP2 SWAP1 PUSH2 0x36EB JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH32 0x98ECE21E01A01CBE1D1C0DAD3B053C8FBD368F99BE78BE958FCF1D1D13FD249A DUP10 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1FFD SWAP3 SWAP2 SWAP1 PUSH2 0x3C8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x201B PUSH2 0x20C0 JUMP JUMPDEST DUP1 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x207B PUSH2 0x1232 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x20C8 PUSH2 0x21D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x20E6 PUSH2 0x1232 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x213C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2133 SWAP1 PUSH2 0x3D03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2146 PUSH2 0x250F JUMP JUMPDEST PUSH1 0x0 PUSH1 0xCF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x218A PUSH2 0x21D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2197 SWAP2 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x21CF DUP2 PUSH2 0x2558 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x224C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2243 SWAP1 PUSH2 0x3D95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2254 PUSH2 0x261E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x22A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229C SWAP1 PUSH2 0x3D95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22AD PUSH2 0x267F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x22B7 PUSH2 0x2312 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xCF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x22FB PUSH2 0x21D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2308 SWAP2 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x231A PUSH2 0x903 JUMP JUMPDEST ISZERO PUSH2 0x235A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2351 SWAP1 PUSH2 0x3E01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0xCC PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x23DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23D5 SWAP1 PUSH2 0x3E6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 SUB PUSH2 0x2421 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2418 SWAP1 PUSH2 0x3ED9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2490 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2487 SWAP1 PUSH2 0x3F45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x2508 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2507 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24FE SWAP1 PUSH2 0x3FB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2517 PUSH2 0x903 JUMP JUMPDEST PUSH2 0x2556 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x254D SWAP1 PUSH2 0x401D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x266D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2664 SWAP1 PUSH2 0x3D95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x267D PUSH2 0x2678 PUSH2 0x21D2 JUMP JUMPDEST PUSH2 0x21A1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x26CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26C5 SWAP1 PUSH2 0x3D95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xCF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE PUSH1 0x2 MUL SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x270C SWAP2 SWAP1 PUSH2 0x27EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x280F JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x2 ADD PUSH2 0x27ED JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x283A DUP2 PUSH2 0x2827 JUMP JUMPDEST DUP2 EQ PUSH2 0x2845 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2857 DUP2 PUSH2 0x2831 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2873 JUMPI PUSH2 0x2872 PUSH2 0x281D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2881 DUP5 DUP3 DUP6 ADD PUSH2 0x2848 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28BF DUP2 PUSH2 0x2827 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x28DB PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x28B6 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x28EE PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x28B6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2900 DUP4 DUP4 PUSH2 0x28C5 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2924 DUP3 PUSH2 0x288A JUMP JUMPDEST PUSH2 0x292E DUP2 DUP6 PUSH2 0x2895 JUMP JUMPDEST SWAP4 POP PUSH2 0x2939 DUP4 PUSH2 0x28A6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x296A JUMPI DUP2 MLOAD PUSH2 0x2951 DUP9 DUP3 PUSH2 0x28F4 JUMP JUMPDEST SWAP8 POP PUSH2 0x295C DUP4 PUSH2 0x290C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x293D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2991 DUP2 DUP5 PUSH2 0x2919 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x29E7 DUP3 PUSH2 0x299E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2A06 JUMPI PUSH2 0x2A05 PUSH2 0x29AF JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A19 PUSH2 0x2813 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A25 DUP3 DUP3 PUSH2 0x29DE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2A45 JUMPI PUSH2 0x2A44 PUSH2 0x29AF JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A76 JUMPI PUSH2 0x2A75 PUSH2 0x2A5B JUMP JUMPDEST JUMPDEST PUSH2 0x2A80 PUSH1 0x40 PUSH2 0x2A0F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2A90 DUP5 DUP3 DUP6 ADD PUSH2 0x2848 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x2AA4 DUP5 DUP3 DUP6 ADD PUSH2 0x2848 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AC3 PUSH2 0x2ABE DUP5 PUSH2 0x2A2A JUMP JUMPDEST PUSH2 0x2A0F JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x40 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2AE6 JUMPI PUSH2 0x2AE5 PUSH2 0x2A56 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2B0F JUMPI DUP1 PUSH2 0x2AFB DUP9 DUP3 PUSH2 0x2A60 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x40 DUP2 ADD SWAP1 POP PUSH2 0x2AE8 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2B2E JUMPI PUSH2 0x2B2D PUSH2 0x2999 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2B3E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2AB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B5E JUMPI PUSH2 0x2B5D PUSH2 0x281D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B6C DUP6 DUP3 DUP7 ADD PUSH2 0x2848 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B8D JUMPI PUSH2 0x2B8C PUSH2 0x2822 JUMP JUMPDEST JUMPDEST PUSH2 0x2B99 DUP6 DUP3 DUP7 ADD PUSH2 0x2B19 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BCE DUP3 PUSH2 0x2BA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BDE DUP2 PUSH2 0x2BC3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2BFB DUP2 PUSH2 0x2BD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C18 JUMPI PUSH2 0x2C17 PUSH2 0x281D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C26 DUP6 DUP3 DUP7 ADD PUSH2 0x2848 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2C37 DUP6 DUP3 DUP7 ADD PUSH2 0x2BEC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C5E DUP2 PUSH2 0x2C41 JUMP JUMPDEST DUP2 EQ PUSH2 0x2C69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C7B DUP2 PUSH2 0x2C55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C97 JUMPI PUSH2 0x2C96 PUSH2 0x281D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CA5 DUP5 DUP3 DUP6 ADD PUSH2 0x2C6C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CC3 DUP2 PUSH2 0x2CAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CDE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2CBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CF7 DUP2 PUSH2 0x2CE4 JUMP JUMPDEST DUP2 EQ PUSH2 0x2D02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2D14 DUP2 PUSH2 0x2CEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D31 JUMPI PUSH2 0x2D30 PUSH2 0x281D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D3F DUP6 DUP3 DUP7 ADD PUSH2 0x2D05 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2D50 DUP6 DUP3 DUP7 ADD PUSH2 0x2848 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D70 JUMPI PUSH2 0x2D6F PUSH2 0x281D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D7E DUP5 DUP3 DUP6 ADD PUSH2 0x2BEC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2D90 DUP2 PUSH2 0x2BC3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D9F DUP2 PUSH2 0x2CE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2DAE DUP2 PUSH2 0x2CAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DD5 DUP2 PUSH2 0x2DB4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x140 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2DF2 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2D87 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2E05 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2D87 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2E18 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2D87 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2E2B PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2D96 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2E3E PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x2D96 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x2E51 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x2DA5 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x2E64 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x2DA5 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x2E77 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x2D87 JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x2E8C PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x2DCC JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x2EA1 PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x2D96 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH2 0x2EBD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2DDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2ECC DUP2 PUSH2 0x2BC3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2EE7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2EC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2EF6 DUP2 PUSH2 0x2C41 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2F05 DUP2 PUSH2 0x2CE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2F20 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2EED JUMP JUMPDEST PUSH2 0x2F2D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2EFC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2F4A PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x28B6 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2F5D PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x28B6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2F78 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2F97 JUMPI PUSH2 0x2F96 PUSH2 0x281D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FA5 DUP7 DUP3 DUP8 ADD PUSH2 0x2848 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2FB6 DUP7 DUP3 DUP8 ADD PUSH2 0x2BEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2FC7 DUP7 DUP3 DUP8 ADD PUSH2 0x2D05 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2FDA DUP2 PUSH2 0x2DB4 JUMP JUMPDEST DUP2 EQ PUSH2 0x2FE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FF7 DUP2 PUSH2 0x2FD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3018 JUMPI PUSH2 0x3017 PUSH2 0x2999 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3035 JUMPI PUSH2 0x3034 PUSH2 0x2FFD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3051 JUMPI PUSH2 0x3050 PUSH2 0x2A56 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x307B JUMPI PUSH2 0x307A PUSH2 0x281D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3089 DUP13 DUP3 DUP14 ADD PUSH2 0x2BEC JUMP JUMPDEST SWAP10 POP POP PUSH1 0x20 PUSH2 0x309A DUP13 DUP3 DUP14 ADD PUSH2 0x2D05 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x40 PUSH2 0x30AB DUP13 DUP3 DUP14 ADD PUSH2 0x2848 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x60 PUSH2 0x30BC DUP13 DUP3 DUP14 ADD PUSH2 0x2FE8 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x80 PUSH2 0x30CD DUP13 DUP3 DUP14 ADD PUSH2 0x2BEC JUMP JUMPDEST SWAP6 POP POP PUSH1 0xA0 PUSH2 0x30DE DUP13 DUP3 DUP14 ADD PUSH2 0x2D05 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xC0 PUSH2 0x30EF DUP13 DUP3 DUP14 ADD PUSH2 0x2BEC JUMP JUMPDEST SWAP4 POP POP PUSH1 0xE0 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3110 JUMPI PUSH2 0x310F PUSH2 0x2822 JUMP JUMPDEST JUMPDEST PUSH2 0x311C DUP13 DUP3 DUP14 ADD PUSH2 0x3002 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH2 0x3137 DUP2 PUSH2 0x2827 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3152 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x312E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3172 JUMPI PUSH2 0x3171 PUSH2 0x281D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3180 DUP8 DUP3 DUP9 ADD PUSH2 0x2848 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3191 DUP8 DUP3 DUP9 ADD PUSH2 0x2848 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x31A2 DUP8 DUP3 DUP9 ADD PUSH2 0x2BEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x31B3 DUP8 DUP3 DUP9 ADD PUSH2 0x2C6C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3238 PUSH2 0x3233 DUP4 PUSH2 0x320E JUMP JUMPDEST PUSH2 0x321B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP1 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x3254 DUP2 PUSH2 0x3225 JUMP JUMPDEST PUSH2 0x3261 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x28B6 JUMP JUMPDEST POP PUSH1 0x1 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x3272 DUP2 PUSH2 0x3225 JUMP JUMPDEST PUSH2 0x327F PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x28B6 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3292 DUP4 DUP4 PUSH2 0x323F JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32B6 DUP3 PUSH2 0x31EE JUMP JUMPDEST PUSH2 0x32C0 DUP2 DUP6 PUSH2 0x2895 JUMP JUMPDEST SWAP4 POP PUSH2 0x32CB DUP4 PUSH2 0x31F9 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x32FB JUMPI DUP2 PUSH2 0x32E2 DUP9 DUP3 PUSH2 0x3286 JUMP JUMPDEST SWAP8 POP PUSH2 0x32ED DUP4 PUSH2 0x329E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x32CF JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3322 DUP2 DUP5 PUSH2 0x32AB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x476174657761793A207A65726F20616464726573730000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3371 PUSH1 0x15 DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x337C DUP3 PUSH2 0x333B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33A0 DUP2 PUSH2 0x3364 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A207472656173757279206164647265737320616C72656164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7920736574000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3403 PUSH1 0x25 DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x340E DUP3 PUSH2 0x33A7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3432 DUP2 PUSH2 0x33F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A2061676772656761746F72206164647265737320616C7265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6164792073657400000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3495 PUSH1 0x27 DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x34A0 DUP3 PUSH2 0x3439 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34C4 DUP2 PUSH2 0x3488 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34E0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2EED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7941676772656761746F72000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x351C PUSH1 0xE DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x3527 DUP3 PUSH2 0x34E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x354B DUP2 PUSH2 0x350F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F7264657246756C66696C6C6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3588 PUSH1 0xE DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x3593 DUP3 PUSH2 0x3552 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35B7 DUP2 PUSH2 0x357B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F72646572526566756E64656400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F4 PUSH1 0xD DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x35FF DUP3 PUSH2 0x35BE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3623 DUP2 PUSH2 0x35E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4665654578636565647350726F746F636F6C4665650000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3660 PUSH1 0x15 DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x366B DUP3 PUSH2 0x362A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x368F DUP2 PUSH2 0x3653 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x36AB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2EC3 JUMP JUMPDEST PUSH2 0x36B8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2EFC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x36C8 DUP2 PUSH2 0x2CAE JUMP JUMPDEST DUP2 EQ PUSH2 0x36D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x36E5 DUP2 PUSH2 0x36BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3701 JUMPI PUSH2 0x3700 PUSH2 0x281D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x370F DUP5 DUP3 DUP6 ADD PUSH2 0x36D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3752 DUP3 PUSH2 0x2CE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x375D DUP4 PUSH2 0x2CE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3775 JUMPI PUSH2 0x3774 PUSH2 0x3718 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3786 DUP3 PUSH2 0x2CE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3791 DUP4 PUSH2 0x2CE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x37A9 JUMPI PUSH2 0x37A8 PUSH2 0x3718 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x37C4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2EFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6577206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3826 PUSH1 0x29 DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x3831 DUP3 PUSH2 0x37CA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3855 DUP2 PUSH2 0x3819 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38B8 PUSH1 0x2E DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x38C3 DUP3 PUSH2 0x385C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38E7 DUP2 PUSH2 0x38AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x392A PUSH2 0x3925 PUSH2 0x3920 DUP5 PUSH2 0x38EE JUMP JUMPDEST PUSH2 0x3905 JUMP JUMPDEST PUSH2 0x38F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x393A DUP2 PUSH2 0x390F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3955 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3931 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x476174657761793A20696E76616C696420737461747573000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3991 PUSH1 0x17 DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x399C DUP3 PUSH2 0x395B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x39C0 DUP2 PUSH2 0x3984 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69644D657373616765486173680000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39FD PUSH1 0x12 DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x3A08 DUP3 PUSH2 0x39C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A2C DUP2 PUSH2 0x39F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3A48 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2EC3 JUMP JUMPDEST PUSH2 0x3A55 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2EC3 JUMP JUMPDEST PUSH2 0x3A62 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2EFC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A75 DUP3 PUSH2 0x2CE4 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3AA7 JUMPI PUSH2 0x3AA6 PUSH2 0x3718 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ABD DUP3 PUSH2 0x2CE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AC8 DUP4 PUSH2 0x2CE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3AD6 DUP2 PUSH2 0x2CE4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3AED JUMPI PUSH2 0x3AEC PUSH2 0x3718 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3B2E DUP3 PUSH2 0x2CE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B39 DUP4 PUSH2 0x2CE4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3B49 JUMPI PUSH2 0x3B48 PUSH2 0x3AF4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B6F PUSH2 0x3B6A PUSH2 0x3B65 DUP5 PUSH2 0x2DB4 JUMP JUMPDEST PUSH2 0x3905 JUMP JUMPDEST PUSH2 0x2CE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B7F DUP2 PUSH2 0x3B54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BA0 DUP4 DUP6 PUSH2 0x332A JUMP JUMPDEST SWAP4 POP PUSH2 0x3BAD DUP4 DUP6 DUP5 PUSH2 0x3B85 JUMP JUMPDEST PUSH2 0x3BB6 DUP4 PUSH2 0x299E JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3BD6 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2EFC JUMP JUMPDEST PUSH2 0x3BE3 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x312E JUMP JUMPDEST PUSH2 0x3BF0 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x3B76 JUMP JUMPDEST PUSH2 0x3BFD PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x312E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x3C10 DUP2 DUP5 DUP7 PUSH2 0x3B94 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C28 DUP3 PUSH2 0x2DB4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C33 DUP4 PUSH2 0x2DB4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C57 JUMPI PUSH2 0x3C56 PUSH2 0x3718 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C78 PUSH2 0x3C73 PUSH2 0x3C6E DUP5 PUSH2 0x2C41 JUMP JUMPDEST PUSH2 0x3905 JUMP JUMPDEST PUSH2 0x2DB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C88 DUP2 PUSH2 0x3C5D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3CA3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x312E JUMP JUMPDEST PUSH2 0x3CB0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3C7F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CED PUSH1 0x20 DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x3CF8 DUP3 PUSH2 0x3CB7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D1C DUP2 PUSH2 0x3CE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D7F PUSH1 0x2B DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x3D8A DUP3 PUSH2 0x3D23 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DAE DUP2 PUSH2 0x3D72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DEB PUSH1 0x10 DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x3DF6 DUP3 PUSH2 0x3DB5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E1A DUP2 PUSH2 0x3DDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E4E6F74537570706F72746564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E57 PUSH1 0x11 DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x3E62 DUP3 PUSH2 0x3E21 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E86 DUP2 PUSH2 0x3E4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E7449735A65726F0000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EC3 PUSH1 0xC DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x3ECE DUP3 PUSH2 0x3E8D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EF2 DUP2 PUSH2 0x3EB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5468726F775A65726F4164647265737300000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F2F PUSH1 0x10 DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x3F3A DUP3 PUSH2 0x3EF9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F5E DUP2 PUSH2 0x3F22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696453656E646572466565526563697069656E7400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F9B PUSH1 0x19 DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x3FA6 DUP3 PUSH2 0x3F65 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FCA DUP2 PUSH2 0x3F8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4007 PUSH1 0x14 DUP4 PUSH2 0x332A JUMP JUMPDEST SWAP2 POP PUSH2 0x4012 DUP3 PUSH2 0x3FD1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4036 DUP2 PUSH2 0x3FFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0xAB2D8943229EE0FFE5F5E542DA3EA20341C382D0E9DE16603EE6CDBA0D8E DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"451:7373:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7503:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2323:539:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1482:56:7;;;:::i;:::-;;3394:551:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2995:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1879:84:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2085:101:1;;;:::i;:::-;;5756:926:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7071:142;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6915:107;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2031:212:0;;;:::i;:::-;;856:114:7;;;:::i;:::-;;1386:52;;;:::i;:::-;;1462:85:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7713:109:7;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;7275:171;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1773:335:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1770:1395:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1144:99:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4222:1495:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1436:178:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7503:164:7;7584:34;7631:21;:32;7653:9;7631:32;;;;;;;;;;;7624:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7503:164;;;:::o;2323:539:8:-;1355:13:1;:11;:13::i;:::-;2461:21:8::1;:31;2483:8;2461:31;;;;;;;;;;;;2454:38;;;;:::i;:::-;2501:6;2496:283;2513:12;:19;2509:1;:23;2496:283;;;2541:21;:31;2563:8;2541:31;;;;;;;;;;;2578:12;2591:1;2578:15;;;;;;;;:::i;:::-;;;;;;;;2541:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2651:94;;;;;;;;2695:12;2708:1;2695:15;;;;;;;;:::i;:::-;;;;;;;;:20;;;2651:94;;;;2731:8;2651:94;;::::0;2599:27:::1;:49;2627:12;2640:1;2627:15;;;;;;;;:::i;:::-;;;;;;;;:20;;;2599:49;;;;;;;;;;;:146;;;;;;;;;;;;;;;;;;;2766:3;;;;;2496:283;;;;2816:8;2787:71;2826:21;:31;2848:8;2826:31;;;;;;;;;;;2787:71;;;;;;:::i;:::-;;;;;;;;2323:539:::0;;:::o;1482:56:7:-;1355:13:1;:11;:13::i;:::-;1524:10:7::1;:8;:10::i;:::-;1482:56::o:0;3394:551:8:-;1355:13:1;:11;:13::i;:::-;3502:1:8::1;3485:19;;:5;:19;;::::0;3477:53:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3534:12;3554:18;:4;:18:::0;3550:326:::1;;3606:5;3587:24;;:15;;;;;;;;;;;:24;;::::0;3579:74:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3676:5;3658:15;;:23;;;;;;;;;;;;;;;;;;3696:4;3686:14;;3550:326;;;3715:20;:4;:20:::0;3711:165:::1;;3772:5;3750:27;;:18;;;;;;;;;;;:27;;::::0;3742:79:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3847:5;3826:18;;:26;;;;;;;;;;;;;;;;;;3867:4;3857:14;;3711:165;3550:326;3883:7;3879:63;;;3931:5;3902:35;;3925:4;3902:35;;;;;;;;;;3879:63;3473:472;3394:551:::0;;:::o;2995:170::-;1355:13:1;:11;:13::i;:::-;3094:19:8::1;3073:18;;:40;;;;;;;;;;;;;;;;;;3122:39;3141:19;3122:39;;;;;;:::i;:::-;;;;;;;;2995:170:::0;:::o;1879:84:3:-;1926:4;1949:7;;;;;;;;;;;1942:14;;1879:84;:::o;2085:101:1:-;1355:13;:11;:13::i;:::-;2149:30:::1;2176:1;2149:18;:30::i;:::-;2085:101::o:0;5756:926:7:-;5837:4;1105:18;;;;;;;;;;;1091:32;;:10;:32;;;1083:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;5907:5:::1;:15;5913:8;5907:15;;;;;;;;;;;:27;;;;;;;;;;;;5906:28;5898:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;5966:5;:15;5972:8;5966:15;;;;;;;;;;;:26;;;;;;;;;;;;5965:27;5957:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;6053:4;6022:5;:15;6028:8;6022:15;;;;;;;;;;;:27;;;:35;;6014:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;6136:5;:15;6142:8;6136:15;;;;;;;;;;;:21;;;;;;;;;;;;6129:38;;;6168:15;;;;;;;;;;;6185:4;6129:61;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6248:4;6219:5;:15;6225:8;6219:15;;;;;;;;;;;:26;;;:33;;;;;;;;;;;;;;;;;;6285:1;6256:5;:15;6262:8;6256:15;;;;;;;;;;;:26;;;:30;;;;;;;;;;;;;;;;;;6325:20;6403:4;6373:5;:15;6379:8;6373:15;;;;;;;;;;;:27;;;6348:5;:15;6354:8;6348:15;;;;;;;;;;;:22;;;:52;;;;:::i;:::-;:59;;;;:::i;:::-;6325:82;;6484:5;:15;6490:8;6484:15;;;;;;;;;;;:21;;;;;;;;;;;;6477:38;;;6520:5;:15;6526:8;6520:15;;;;;;;;;;;:29;;;;;;;;;;;;6569:5;:15;6575:8;6569:15;;;;;;;;;;;:25;;;6554:12;:40;;;;:::i;:::-;6477:121;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6653:8;6633:29;6647:4;6633:29;;;;;;:::i;:::-;;;;;;;;6674:4;6667:11;;;5756:926:::0;;;;:::o;7071:142::-;7136:4;7179:1;7150:17;:25;7168:6;7150:25;;;;;;;;;;;;;;;;:30;7146:47;;7189:4;7182:11;;;;7146:47;7204:5;7197:12;;7071:142;;;;:::o;6915:107::-;6978:12;;:::i;:::-;7003:5;:15;7009:8;7003:15;;;;;;;;;;;6996:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6915:107;;;:::o;2031:212:0:-;2083:14;2100:12;:10;:12::i;:::-;2083:29;;2148:6;2130:24;;:14;:12;:14::i;:::-;:24;;;2122:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;2210:26;2229:6;2210:18;:26::i;:::-;2073:170;2031:212::o;856:114:7:-;3279:19:2;3302:13;;;;;;;;;;;3301:14;3279:36;;3347:14;:34;;;;;3380:1;3365:12;;;;;;;;;;:16;;;3347:34;3346:108;;;;3388:44;3426:4;3388:29;:44::i;:::-;3387:45;:66;;;;;3452:1;3436:12;;;;;;;;;;:17;;;3387:66;3346:108;3325:201;;;;;;;;;;;;:::i;:::-;;;;;;;;;3551:1;3536:12;;:16;;;;;;;;;;;;;;;;;;3566:14;3562:65;;;3612:4;3596:13;;:20;;;;;;;;;;;;;;;;;;3562:65;913:7:7::1;903;:17;;;;924:21;:19;:21::i;:::-;949:17;:15;:17::i;:::-;3651:14:2::0;3647:99;;;3697:5;3681:13;;:21;;;;;;;;;;;;;;;;;;3721:14;3733:1;3721:14;;;;;;:::i;:::-;;;;;;;;3647:99;3269:483;856:114:7:o;1386:52::-;1355:13:1;:11;:13::i;:::-;1426:8:7::1;:6;:8::i;:::-;1386:52::o:0;1462:85:1:-;1508:7;1534:6;;;;;;;;;;;1527:13;;1462:85;:::o;7713:109:7:-;7761:6;7769:7;7790:18;;;;;;;;;;;7810:7;;7782:36;;;;7713:109;;:::o;7275:171::-;7357:38;;:::i;:::-;7408:27;:34;7436:5;7408:34;;;;;;;;;;;7401:41;;;;;;;;;;;;;;;;;;;;;;;;;;;7275:171;;;:::o;1773:335:8:-;1355:13:1;:11;:13::i;:::-;1894:1:8::1;1877:19;;:5;:19;;::::0;1869:53:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1944:1;1934:6;:11;:26;;;;1959:1;1949:6;:11;1934:26;1926:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1996:15;:4;:15:::0;1992:113:::1;;2045:6;2018:17;:24;2036:5;2018:24;;;;;;;;;;;;;;;:33;;;;2086:5;2061:39;;2080:4;2061:39;2093:6;2061:39;;;;;;:::i;:::-;;;;;;;;1992:113;1773:335:::0;;;:::o;1770:1395:7:-;2017:15;1503:19:3;:17;:19::i;:::-;2068:74:7::1;2077:6;2085:7;2094:14;2110:19;2131:10;2068:8;:74::i;:::-;2210:1;2187:11;;2181:25;;:30:::0;2173:61:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2294:6;2287:27;;;2315:10;2335:4;2352:10;2342:7;:20;;;;:::i;:::-;2287:76;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2418:6;:18;2425:10;2418:18;;;;;;;;;;;;;;;;:20;;;;;;;;;:::i;:::-;;;;;;2523:10;2535:6;:18;2542:10;2535:18;;;;;;;;;;;;;;;;2512:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2502:53;;;;;;2492:63;;2584:20;2640:7;;2618:18;;;;;;;;;;;2608:28;;:7;:28;;;;:::i;:::-;2607:40;;;;:::i;:::-;2584:63;;2668:298;;;;;;;;2687:10;2668:298;;;;;;2709:6;2668:298;;;;;;2740:19;2668:298;;;;;;2775:10;2668:298;;;;2803:12;2668:298;;;;2833:5;2668:298;;;;;;2855:5;2668:298;;;;;;2880:14;2668:298;;;;;;2918:7;;2668:298;;;;;;;;2949:12;2939:7;:22;;;;:::i;:::-;2668:298;;::::0;2651:5:::1;:14;2657:7;2651:14;;;;;;;;;;;:315;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3060:5;:14;3066:7;3060:14;;;;;;;;;;;:21;;;3049:6;3006:155;;3023:5;:14;3029:7;3023:14;;;;;;;;;;;:21;;;;;;;;;;;;3006:155;;;3086:12;3103:7;3115:5;3125:16;3146:11;;3006:155;;;;;;;;;;;:::i;:::-;;;;;;;;2034:1131;1770:1395:::0;;;;;;;;;;;:::o;1144:99:0:-;1197:7;1223:13;;;;;;;;;;;1216:20;;1144:99;:::o;4222:1495:7:-;4374:4;1105:18;;;;;;;;;;;1091:32;;:10;:32;;;1083:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;4444:5:::1;:15;4450:8;4444:15;;;;;;;;;;;:27;;;;;;;;;;;;4443:28;4435:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;4503:5;:15;4509:8;4503:15;;;;;;;;;;;:26;;;;;;;;;;;;4502:27;4494:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;4584:13;4600:5;:15;4606:8;4600:15;;;;;;;;;;;:21;;;;;;;;;;;;4584:37;;4718:14;4688:44;;:5;:15;4694:8;4688:15;;;;;;;;;;;:26;;;:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4771:1;4741:5;:15;4747:8;4741:15;;;;;;;;;;;:26;;;;;;;;;;;;:31;;::::0;4737:604:::1;;4854:4;4824:5;:15;4830:8;4824:15;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;4897:1;4868:5;:15;4874:8;4868:15;;;;;;;;;;;:25;;;:30;4864:321;;4940:5;:15;4946:8;4940:15;;;;;;;;;;;:21;;;;;;;;;;;;4933:38;;;4978:5;:15;4984:8;4978:15;;;;;;;;;;;:34;;;;;;;;;;;;5019:5;:15;5025:8;5019:15;;;;;;;;;;;:25;;;4933:117;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5148:5;:15;5154:8;5148:15;;;;;;;;;;;:25;;;5107:5;:15;5113:8;5107:15;;;;;;;;;;;:34;;;;;;;;;;;;5080:99;;;;;;;;;;;;4864:321;5225:1;5194:5;:15;5200:8;5194:15;;;;;;;;;;;:27;;;:32;5190:147;;5270:5;5263:22;;;5286:15;;;;;;;;;;;5303:5;:15;5309:8;5303:15;;;;;;;;;;;:27;;;5263:68;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5190:147;4737:604;5381:31;5459:7;;5441:14;5416:39;;:5;:15;5422:8;5416:15;;;;;;;;;;;:22;;;:39;;;;:::i;:::-;5415:51;;;;:::i;:::-;5381:85;;5496:23;5470:5;:15;5476:8;5470:15;;;;;;;;;;;:22;;;:49;;;;;;;:::i;:::-;;;;;;;;5530:5;5523:22;;;5546:18;5566:23;5523:67;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5662:18;5624:73;;5652:8;5624:73;5637:13;5682:14;5624:73;;;;;;;:::i;:::-;;;;;;;;5709:4;5702:11;;;;4222:1495:::0;;;;;;:::o;1436:178:0:-;1355:13:1;:11;:13::i;:::-;1541:8:0::1;1525:13;;:24;;;;;;;;;;;;;;;;;;1598:8;1564:43;;1589:7;:5;:7::i;:::-;1564:43;;;;;;;;;;;;1436:178:::0;:::o;1620:130:1:-;1694:12;:10;:12::i;:::-;1683:23;;:7;:5;:7::i;:::-;:23;;;1675:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1620:130::o;2697:117:3:-;1750:16;:14;:16::i;:::-;2765:5:::1;2755:7;;:15;;;;;;;;;;;;;;;;;;2785:22;2794:12;:10;:12::i;:::-;2785:22;;;;;;:::i;:::-;;;;;;;;2697:117::o:0;1798:153:0:-;1887:13;;1880:20;;;;;;;;;;;1910:34;1935:8;1910:24;:34::i;:::-;1798:153;:::o;886:96:5:-;939:7;965:10;958:17;;886:96;:::o;1423:320:4:-;1483:4;1735:1;1713:7;:19;;;:23;1706:30;;1423:320;;;:::o;889:100:0:-;5374:13:2;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;956:26:0::1;:24;:26::i;:::-;889:100::o:0;1084:97:3:-;5374:13:2;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1147:27:3::1;:25;:27::i;:::-;1084:97::o:0;2450:115::-;1503:19;:17;:19::i;:::-;2519:4:::1;2509:7;;:14;;;;;;;;;;;;;;;;;;2538:20;2545:12;:10;:12::i;:::-;2538:20;;;;;;:::i;:::-;;;;;;;;2450:115::o:0;2031:106::-;2101:8;:6;:8::i;:::-;2100:9;2092:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;2031:106::o;3558:427:7:-;3750:1;3721:17;:25;3739:6;3721:25;;;;;;;;;;;;;;;;:30;3713:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;3796:1;3785:7;:12;3777:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;3852:1;3826:28;;:14;:28;;;3818:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3898:1;3884:10;:15;3880:102;;3945:1;3914:33;;:19;:33;;;3906:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;3880:102;3558:427;;;;;:::o;2209:106:3:-;2275:8;:6;:8::i;:::-;2267:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2209:106::o;2687:187:1:-;2760:16;2779:6;;;;;;;;;;;2760:25;;2804:8;2795:6;;:17;;;;;;;;;;;;;;;;;;2858:8;2827:40;;2848:8;2827:40;;;;;;;;;;;;2750:124;2687:187;:::o;1125:111::-;5374:13:2;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1197:32:1::1;1216:12;:10;:12::i;:::-;1197:18;:32::i;:::-;1125:111::o:0;1187:95:3:-;5374:13:2;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1270:5:3::1;1260:7;;:15;;;;;;;;;;;;;;;;;;1187:95::o:0;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:11:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:143::-;1121:6;1155:5;1149:12;1139:22;;1025:143;;;:::o;1174:213::-;1302:11;1336:6;1331:3;1324:19;1376:4;1371:3;1367:14;1352:29;;1174:213;;;;:::o;1393:161::-;1489:4;1512:3;1504:11;;1542:4;1537:3;1533:14;1525:22;;1393:161;;;:::o;1560:108::-;1637:24;1655:5;1637:24;:::i;:::-;1632:3;1625:37;1560:108;;:::o;1750:505::-;1895:4;1890:3;1886:14;1982:4;1975:5;1971:16;1965:23;2001:63;2058:4;2053:3;2049:14;2035:12;2001:63;:::i;:::-;1910:164;2156:4;2149:5;2145:16;2139:23;2175:63;2232:4;2227:3;2223:14;2209:12;2175:63;:::i;:::-;2084:164;1864:391;1750:505;;:::o;2261:295::-;2388:10;2409:104;2509:3;2501:6;2409:104;:::i;:::-;2545:4;2540:3;2536:14;2522:28;;2261:295;;;;:::o;2562:142::-;2661:4;2693;2688:3;2684:14;2676:22;;2562:142;;;:::o;2790:964::-;2967:3;2996:83;3073:5;2996:83;:::i;:::-;3095:115;3203:6;3198:3;3095:115;:::i;:::-;3088:122;;3234:85;3313:5;3234:85;:::i;:::-;3342:7;3373:1;3358:371;3383:6;3380:1;3377:13;3358:371;;;3459:6;3453:13;3486:121;3603:3;3588:13;3486:121;:::i;:::-;3479:128;;3630:89;3712:6;3630:89;:::i;:::-;3620:99;;3418:311;3405:1;3402;3398:9;3393:14;;3358:371;;;3362:14;3745:3;3738:10;;2972:782;;;2790:964;;;;:::o;3760:489::-;3961:4;3999:2;3988:9;3984:18;3976:26;;4048:9;4042:4;4038:20;4034:1;4023:9;4019:17;4012:47;4076:166;4237:4;4228:6;4076:166;:::i;:::-;4068:174;;3760:489;;;;:::o;4255:117::-;4364:1;4361;4354:12;4378:102;4419:6;4470:2;4466:7;4461:2;4454:5;4450:14;4446:28;4436:38;;4378:102;;;:::o;4486:180::-;4534:77;4531:1;4524:88;4631:4;4628:1;4621:15;4655:4;4652:1;4645:15;4672:281;4755:27;4777:4;4755:27;:::i;:::-;4747:6;4743:40;4885:6;4873:10;4870:22;4849:18;4837:10;4834:34;4831:62;4828:88;;;4896:18;;:::i;:::-;4828:88;4936:10;4932:2;4925:22;4715:238;4672:281;;:::o;4959:129::-;4993:6;5020:20;;:::i;:::-;5010:30;;5049:33;5077:4;5069:6;5049:33;:::i;:::-;4959:129;;;:::o;5094:340::-;5200:4;5290:18;5282:6;5279:30;5276:56;;;5312:18;;:::i;:::-;5276:56;5362:4;5354:6;5350:17;5342:25;;5422:4;5416;5412:15;5404:23;;5094:340;;;:::o;5440:117::-;5549:1;5546;5539:12;5563:117;5672:1;5669;5662:12;5849:578;5927:5;5971:4;5959:9;5954:3;5950:19;5946:30;5943:117;;;5979:79;;:::i;:::-;5943:117;6078:21;6094:4;6078:21;:::i;:::-;6069:30;;6158:1;6198:49;6243:3;6234:6;6223:9;6219:22;6198:49;:::i;:::-;6191:4;6184:5;6180:16;6173:75;6109:150;6318:2;6359:49;6404:3;6395:6;6384:9;6380:22;6359:49;:::i;:::-;6352:4;6345:5;6341:16;6334:75;6269:151;5849:578;;;;:::o;6475:797::-;6600:5;6625:110;6641:93;6727:6;6641:93;:::i;:::-;6625:110;:::i;:::-;6616:119;;6755:5;6784:6;6777:5;6770:21;6818:4;6811:5;6807:16;6800:23;;6871:4;6863:6;6859:17;6851:6;6847:30;6900:3;6892:6;6889:15;6886:122;;;6919:79;;:::i;:::-;6886:122;7034:6;7017:249;7051:6;7046:3;7043:15;7017:249;;;7126:3;7155:66;7217:3;7205:10;7155:66;:::i;:::-;7150:3;7143:79;7251:4;7246:3;7242:14;7235:21;;7093:173;7077:4;7072:3;7068:14;7061:21;;7017:249;;;7021:21;6606:666;;6475:797;;;;;:::o;7320:428::-;7420:5;7469:3;7462:4;7454:6;7450:17;7446:27;7436:122;;7477:79;;:::i;:::-;7436:122;7594:6;7581:20;7619:123;7738:3;7730:6;7723:4;7715:6;7711:17;7619:123;:::i;:::-;7610:132;;7426:322;7320:428;;;;:::o;7754:742::-;7876:6;7884;7933:2;7921:9;7912:7;7908:23;7904:32;7901:119;;;7939:79;;:::i;:::-;7901:119;8059:1;8084:53;8129:7;8120:6;8109:9;8105:22;8084:53;:::i;:::-;8074:63;;8030:117;8214:2;8203:9;8199:18;8186:32;8245:18;8237:6;8234:30;8231:117;;;8267:79;;:::i;:::-;8231:117;8372:107;8471:7;8462:6;8451:9;8447:22;8372:107;:::i;:::-;8362:117;;8157:332;7754:742;;;;;:::o;8502:126::-;8539:7;8579:42;8572:5;8568:54;8557:65;;8502:126;;;:::o;8634:96::-;8671:7;8700:24;8718:5;8700:24;:::i;:::-;8689:35;;8634:96;;;:::o;8736:122::-;8809:24;8827:5;8809:24;:::i;:::-;8802:5;8799:35;8789:63;;8848:1;8845;8838:12;8789:63;8736:122;:::o;8864:139::-;8910:5;8948:6;8935:20;8926:29;;8964:33;8991:5;8964:33;:::i;:::-;8864:139;;;;:::o;9009:474::-;9077:6;9085;9134:2;9122:9;9113:7;9109:23;9105:32;9102:119;;;9140:79;;:::i;:::-;9102:119;9260:1;9285:53;9330:7;9321:6;9310:9;9306:22;9285:53;:::i;:::-;9275:63;;9231:117;9387:2;9413:53;9458:7;9449:6;9438:9;9434:22;9413:53;:::i;:::-;9403:63;;9358:118;9009:474;;;;;:::o;9489:101::-;9525:7;9565:18;9558:5;9554:30;9543:41;;9489:101;;;:::o;9596:120::-;9668:23;9685:5;9668:23;:::i;:::-;9661:5;9658:34;9648:62;;9706:1;9703;9696:12;9648:62;9596:120;:::o;9722:137::-;9767:5;9805:6;9792:20;9783:29;;9821:32;9847:5;9821:32;:::i;:::-;9722:137;;;;:::o;9865:327::-;9923:6;9972:2;9960:9;9951:7;9947:23;9943:32;9940:119;;;9978:79;;:::i;:::-;9940:119;10098:1;10123:52;10167:7;10158:6;10147:9;10143:22;10123:52;:::i;:::-;10113:62;;10069:116;9865:327;;;;:::o;10198:90::-;10232:7;10275:5;10268:13;10261:21;10250:32;;10198:90;;;:::o;10294:109::-;10375:21;10390:5;10375:21;:::i;:::-;10370:3;10363:34;10294:109;;:::o;10409:210::-;10496:4;10534:2;10523:9;10519:18;10511:26;;10547:65;10609:1;10598:9;10594:17;10585:6;10547:65;:::i;:::-;10409:210;;;;:::o;10625:77::-;10662:7;10691:5;10680:16;;10625:77;;;:::o;10708:122::-;10781:24;10799:5;10781:24;:::i;:::-;10774:5;10771:35;10761:63;;10820:1;10817;10810:12;10761:63;10708:122;:::o;10836:139::-;10882:5;10920:6;10907:20;10898:29;;10936:33;10963:5;10936:33;:::i;:::-;10836:139;;;;:::o;10981:474::-;11049:6;11057;11106:2;11094:9;11085:7;11081:23;11077:32;11074:119;;;11112:79;;:::i;:::-;11074:119;11232:1;11257:53;11302:7;11293:6;11282:9;11278:22;11257:53;:::i;:::-;11247:63;;11203:117;11359:2;11385:53;11430:7;11421:6;11410:9;11406:22;11385:53;:::i;:::-;11375:63;;11330:118;10981:474;;;;;:::o;11461:329::-;11520:6;11569:2;11557:9;11548:7;11544:23;11540:32;11537:119;;;11575:79;;:::i;:::-;11537:119;11695:1;11720:53;11765:7;11756:6;11745:9;11741:22;11720:53;:::i;:::-;11710:63;;11666:117;11461:329;;;;:::o;11796:108::-;11873:24;11891:5;11873:24;:::i;:::-;11868:3;11861:37;11796:108;;:::o;11910:::-;11987:24;12005:5;11987:24;:::i;:::-;11982:3;11975:37;11910:108;;:::o;12024:99::-;12095:21;12110:5;12095:21;:::i;:::-;12090:3;12083:34;12024:99;;:::o;12129:109::-;12165:7;12205:26;12198:5;12194:38;12183:49;;12129:109;;;:::o;12244:105::-;12319:23;12336:5;12319:23;:::i;:::-;12314:3;12307:36;12244:105;;:::o;12409:1950::-;12552:6;12547:3;12543:16;12643:4;12636:5;12632:16;12626:23;12662:63;12719:4;12714:3;12710:14;12696:12;12662:63;:::i;:::-;12569:166;12818:4;12811:5;12807:16;12801:23;12837:63;12894:4;12889:3;12885:14;12871:12;12837:63;:::i;:::-;12745:165;13006:4;12999:5;12995:16;12989:23;13025:63;13082:4;13077:3;13073:14;13059:12;13025:63;:::i;:::-;12920:178;13185:4;13178:5;13174:16;13168:23;13204:63;13261:4;13256:3;13252:14;13238:12;13204:63;:::i;:::-;13108:169;13366:4;13359:5;13355:16;13349:23;13385:63;13442:4;13437:3;13433:14;13419:12;13385:63;:::i;:::-;13287:171;13547:4;13540:5;13536:16;13530:23;13566:57;13617:4;13612:3;13608:14;13594:12;13566:57;:::i;:::-;13468:165;13721:4;13714:5;13710:16;13704:23;13740:57;13791:4;13786:3;13782:14;13768:12;13740:57;:::i;:::-;13643:164;13898:4;13891:5;13887:16;13881:23;13917:63;13974:4;13969:3;13965:14;13951:12;13917:63;:::i;:::-;13817:173;14078:6;14071:5;14067:18;14061:25;14099:63;14154:6;14149:3;14145:16;14131:12;14099:63;:::i;:::-;14000:172;14256:6;14249:5;14245:18;14239:25;14277:65;14334:6;14329:3;14325:16;14311:12;14277:65;:::i;:::-;14182:170;12521:1838;12409:1950;;:::o;14365:315::-;14504:4;14542:3;14531:9;14527:19;14519:27;;14556:117;14670:1;14659:9;14655:17;14646:6;14556:117;:::i;:::-;14365:315;;;;:::o;14686:118::-;14773:24;14791:5;14773:24;:::i;:::-;14768:3;14761:37;14686:118;;:::o;14810:222::-;14903:4;14941:2;14930:9;14926:18;14918:26;;14954:71;15022:1;15011:9;15007:17;14998:6;14954:71;:::i;:::-;14810:222;;;;:::o;15038:115::-;15123:23;15140:5;15123:23;:::i;:::-;15118:3;15111:36;15038:115;;:::o;15159:118::-;15246:24;15264:5;15246:24;:::i;:::-;15241:3;15234:37;15159:118;;:::o;15283:328::-;15402:4;15440:2;15429:9;15425:18;15417:26;;15453:69;15519:1;15508:9;15504:17;15495:6;15453:69;:::i;:::-;15532:72;15600:2;15589:9;15585:18;15576:6;15532:72;:::i;:::-;15283:328;;;;;:::o;15705:531::-;15872:4;15867:3;15863:14;15959:4;15952:5;15948:16;15942:23;15978:63;16035:4;16030:3;16026:14;16012:12;15978:63;:::i;:::-;15887:164;16137:4;16130:5;16126:16;16120:23;16156:63;16213:4;16208:3;16204:14;16190:12;16156:63;:::i;:::-;16061:168;15841:395;15705:531;;:::o;16242:362::-;16405:4;16443:2;16432:9;16428:18;16420:26;;16456:141;16594:1;16583:9;16579:17;16570:6;16456:141;:::i;:::-;16242:362;;;;:::o;16610:619::-;16687:6;16695;16703;16752:2;16740:9;16731:7;16727:23;16723:32;16720:119;;;16758:79;;:::i;:::-;16720:119;16878:1;16903:53;16948:7;16939:6;16928:9;16924:22;16903:53;:::i;:::-;16893:63;;16849:117;17005:2;17031:53;17076:7;17067:6;17056:9;17052:22;17031:53;:::i;:::-;17021:63;;16976:118;17133:2;17159:53;17204:7;17195:6;17184:9;17180:22;17159:53;:::i;:::-;17149:63;;17104:118;16610:619;;;;;:::o;17235:120::-;17307:23;17324:5;17307:23;:::i;:::-;17300:5;17297:34;17287:62;;17345:1;17342;17335:12;17287:62;17235:120;:::o;17361:137::-;17406:5;17444:6;17431:20;17422:29;;17460:32;17486:5;17460:32;:::i;:::-;17361:137;;;;:::o;17504:117::-;17613:1;17610;17603:12;17641:553;17699:8;17709:6;17759:3;17752:4;17744:6;17740:17;17736:27;17726:122;;17767:79;;:::i;:::-;17726:122;17880:6;17867:20;17857:30;;17910:18;17902:6;17899:30;17896:117;;;17932:79;;:::i;:::-;17896:117;18046:4;18038:6;18034:17;18022:29;;18100:3;18092:4;18084:6;18080:17;18070:8;18066:32;18063:41;18060:128;;;18107:79;;:::i;:::-;18060:128;17641:553;;;;;:::o;18200:1547::-;18333:6;18341;18349;18357;18365;18373;18381;18389;18397;18446:3;18434:9;18425:7;18421:23;18417:33;18414:120;;;18453:79;;:::i;:::-;18414:120;18573:1;18598:53;18643:7;18634:6;18623:9;18619:22;18598:53;:::i;:::-;18588:63;;18544:117;18700:2;18726:53;18771:7;18762:6;18751:9;18747:22;18726:53;:::i;:::-;18716:63;;18671:118;18828:2;18854:53;18899:7;18890:6;18879:9;18875:22;18854:53;:::i;:::-;18844:63;;18799:118;18956:2;18982:52;19026:7;19017:6;19006:9;19002:22;18982:52;:::i;:::-;18972:62;;18927:117;19083:3;19110:53;19155:7;19146:6;19135:9;19131:22;19110:53;:::i;:::-;19100:63;;19054:119;19212:3;19239:53;19284:7;19275:6;19264:9;19260:22;19239:53;:::i;:::-;19229:63;;19183:119;19341:3;19368:53;19413:7;19404:6;19393:9;19389:22;19368:53;:::i;:::-;19358:63;;19312:119;19498:3;19487:9;19483:19;19470:33;19530:18;19522:6;19519:30;19516:117;;;19552:79;;:::i;:::-;19516:117;19665:65;19722:7;19713:6;19702:9;19698:22;19665:65;:::i;:::-;19647:83;;;;19441:299;18200:1547;;;;;;;;;;;:::o;19753:118::-;19840:24;19858:5;19840:24;:::i;:::-;19835:3;19828:37;19753:118;;:::o;19877:222::-;19970:4;20008:2;19997:9;19993:18;19985:26;;20021:71;20089:1;20078:9;20074:17;20065:6;20021:71;:::i;:::-;19877:222;;;;:::o;20105:763::-;20190:6;20198;20206;20214;20263:3;20251:9;20242:7;20238:23;20234:33;20231:120;;;20270:79;;:::i;:::-;20231:120;20390:1;20415:53;20460:7;20451:6;20440:9;20436:22;20415:53;:::i;:::-;20405:63;;20361:117;20517:2;20543:53;20588:7;20579:6;20568:9;20564:22;20543:53;:::i;:::-;20533:63;;20488:118;20645:2;20671:53;20716:7;20707:6;20696:9;20692:22;20671:53;:::i;:::-;20661:63;;20616:118;20773:2;20799:52;20843:7;20834:6;20823:9;20819:22;20799:52;:::i;:::-;20789:62;;20744:117;20105:763;;;;;;;:::o;20874:180::-;20922:77;20919:1;20912:88;21019:4;21016:1;21009:15;21043:4;21040:1;21033:15;21060:137;21150:6;21184:5;21178:12;21168:22;;21060:137;;;:::o;21203:182::-;21293:4;21316:3;21308:11;;21339:3;21336:1;21329:14;21373:4;21370:1;21360:18;21352:26;;21203:182;;;:::o;21391:102::-;21433:8;21480:5;21477:1;21473:13;21452:34;;21391:102;;;:::o;21499:90::-;21549:7;21578:5;21567:16;;21499:90;;;:::o;21595:166::-;21664:5;21689:66;21720:34;21743:10;21720:34;:::i;:::-;21689:66;:::i;:::-;21680:75;;21595:166;;;:::o;21843:689::-;21985:4;21980:3;21976:14;22016:1;22091:4;22084:5;22080:16;22074:23;22061:36;;22130:55;22175:9;22130:55;:::i;:::-;22198:63;22255:4;22250:3;22246:14;22232:12;22198:63;:::i;:::-;22027:244;22345:4;22338:5;22334:16;22328:23;22315:36;;22384:55;22429:9;22384:55;:::i;:::-;22452:63;22509:4;22504:3;22500:14;22486:12;22452:63;:::i;:::-;22281:244;21954:578;;21843:689;;:::o;22538:289::-;22662:10;22683:101;22780:3;22772:6;22683:101;:::i;:::-;22816:4;22811:3;22807:14;22793:28;;22538:289;;;;:::o;22833:136::-;22926:4;22958;22953:3;22949:14;22941:22;;22833:136;;;:::o;23055:930::-;23226:3;23255:77;23326:5;23255:77;:::i;:::-;23348:115;23456:6;23451:3;23348:115;:::i;:::-;23341:122;;23487:79;23560:5;23487:79;:::i;:::-;23589:7;23620:1;23605:355;23630:6;23627:1;23624:13;23605:355;;;23700:6;23726:118;23840:3;23825:13;23726:118;:::i;:::-;23719:125;;23867:83;23943:6;23867:83;:::i;:::-;23857:93;;23665:295;23652:1;23649;23645:9;23640:14;;23605:355;;;23609:14;23976:3;23969:10;;23231:754;;;23055:930;;;;:::o;23991:477::-;24186:4;24224:2;24213:9;24209:18;24201:26;;24273:9;24267:4;24263:20;24259:1;24248:9;24244:17;24237:47;24301:160;24456:4;24447:6;24301:160;:::i;:::-;24293:168;;23991:477;;;;:::o;24474:169::-;24558:11;24592:6;24587:3;24580:19;24632:4;24627:3;24623:14;24608:29;;24474:169;;;;:::o;24649:171::-;24789:23;24785:1;24777:6;24773:14;24766:47;24649:171;:::o;24826:366::-;24968:3;24989:67;25053:2;25048:3;24989:67;:::i;:::-;24982:74;;25065:93;25154:3;25065:93;:::i;:::-;25183:2;25178:3;25174:12;25167:19;;24826:366;;;:::o;25198:419::-;25364:4;25402:2;25391:9;25387:18;25379:26;;25451:9;25445:4;25441:20;25437:1;25426:9;25422:17;25415:47;25479:131;25605:4;25479:131;:::i;:::-;25471:139;;25198:419;;;:::o;25623:224::-;25763:34;25759:1;25751:6;25747:14;25740:58;25832:7;25827:2;25819:6;25815:15;25808:32;25623:224;:::o;25853:366::-;25995:3;26016:67;26080:2;26075:3;26016:67;:::i;:::-;26009:74;;26092:93;26181:3;26092:93;:::i;:::-;26210:2;26205:3;26201:12;26194:19;;25853:366;;;:::o;26225:419::-;26391:4;26429:2;26418:9;26414:18;26406:26;;26478:9;26472:4;26468:20;26464:1;26453:9;26449:17;26442:47;26506:131;26632:4;26506:131;:::i;:::-;26498:139;;26225:419;;;:::o;26650:226::-;26790:34;26786:1;26778:6;26774:14;26767:58;26859:9;26854:2;26846:6;26842:15;26835:34;26650:226;:::o;26882:366::-;27024:3;27045:67;27109:2;27104:3;27045:67;:::i;:::-;27038:74;;27121:93;27210:3;27121:93;:::i;:::-;27239:2;27234:3;27230:12;27223:19;;26882:366;;;:::o;27254:419::-;27420:4;27458:2;27447:9;27443:18;27435:26;;27507:9;27501:4;27497:20;27493:1;27482:9;27478:17;27471:47;27535:131;27661:4;27535:131;:::i;:::-;27527:139;;27254:419;;;:::o;27679:218::-;27770:4;27808:2;27797:9;27793:18;27785:26;;27821:69;27887:1;27876:9;27872:17;27863:6;27821:69;:::i;:::-;27679:218;;;;:::o;27903:164::-;28043:16;28039:1;28031:6;28027:14;28020:40;27903:164;:::o;28073:366::-;28215:3;28236:67;28300:2;28295:3;28236:67;:::i;:::-;28229:74;;28312:93;28401:3;28312:93;:::i;:::-;28430:2;28425:3;28421:12;28414:19;;28073:366;;;:::o;28445:419::-;28611:4;28649:2;28638:9;28634:18;28626:26;;28698:9;28692:4;28688:20;28684:1;28673:9;28669:17;28662:47;28726:131;28852:4;28726:131;:::i;:::-;28718:139;;28445:419;;;:::o;28870:164::-;29010:16;29006:1;28998:6;28994:14;28987:40;28870:164;:::o;29040:366::-;29182:3;29203:67;29267:2;29262:3;29203:67;:::i;:::-;29196:74;;29279:93;29368:3;29279:93;:::i;:::-;29397:2;29392:3;29388:12;29381:19;;29040:366;;;:::o;29412:419::-;29578:4;29616:2;29605:9;29601:18;29593:26;;29665:9;29659:4;29655:20;29651:1;29640:9;29636:17;29629:47;29693:131;29819:4;29693:131;:::i;:::-;29685:139;;29412:419;;;:::o;29837:163::-;29977:15;29973:1;29965:6;29961:14;29954:39;29837:163;:::o;30006:366::-;30148:3;30169:67;30233:2;30228:3;30169:67;:::i;:::-;30162:74;;30245:93;30334:3;30245:93;:::i;:::-;30363:2;30358:3;30354:12;30347:19;;30006:366;;;:::o;30378:419::-;30544:4;30582:2;30571:9;30567:18;30559:26;;30631:9;30625:4;30621:20;30617:1;30606:9;30602:17;30595:47;30659:131;30785:4;30659:131;:::i;:::-;30651:139;;30378:419;;;:::o;30803:171::-;30943:23;30939:1;30931:6;30927:14;30920:47;30803:171;:::o;30980:366::-;31122:3;31143:67;31207:2;31202:3;31143:67;:::i;:::-;31136:74;;31219:93;31308:3;31219:93;:::i;:::-;31337:2;31332:3;31328:12;31321:19;;30980:366;;;:::o;31352:419::-;31518:4;31556:2;31545:9;31541:18;31533:26;;31605:9;31599:4;31595:20;31591:1;31580:9;31576:17;31569:47;31633:131;31759:4;31633:131;:::i;:::-;31625:139;;31352:419;;;:::o;31777:332::-;31898:4;31936:2;31925:9;31921:18;31913:26;;31949:71;32017:1;32006:9;32002:17;31993:6;31949:71;:::i;:::-;32030:72;32098:2;32087:9;32083:18;32074:6;32030:72;:::i;:::-;31777:332;;;;;:::o;32115:116::-;32185:21;32200:5;32185:21;:::i;:::-;32178:5;32175:32;32165:60;;32221:1;32218;32211:12;32165:60;32115:116;:::o;32237:137::-;32291:5;32322:6;32316:13;32307:22;;32338:30;32362:5;32338:30;:::i;:::-;32237:137;;;;:::o;32380:345::-;32447:6;32496:2;32484:9;32475:7;32471:23;32467:32;32464:119;;;32502:79;;:::i;:::-;32464:119;32622:1;32647:61;32700:7;32691:6;32680:9;32676:22;32647:61;:::i;:::-;32637:71;;32593:125;32380:345;;;;:::o;32731:180::-;32779:77;32776:1;32769:88;32876:4;32873:1;32866:15;32900:4;32897:1;32890:15;32917:191;32957:3;32976:20;32994:1;32976:20;:::i;:::-;32971:25;;33010:20;33028:1;33010:20;:::i;:::-;33005:25;;33053:1;33050;33046:9;33039:16;;33074:3;33071:1;33068:10;33065:36;;;33081:18;;:::i;:::-;33065:36;32917:191;;;;:::o;33114:194::-;33154:4;33174:20;33192:1;33174:20;:::i;:::-;33169:25;;33208:20;33226:1;33208:20;:::i;:::-;33203:25;;33252:1;33249;33245:9;33237:17;;33276:1;33270:4;33267:11;33264:37;;;33281:18;;:::i;:::-;33264:37;33114:194;;;;:::o;33314:222::-;33407:4;33445:2;33434:9;33430:18;33422:26;;33458:71;33526:1;33515:9;33511:17;33502:6;33458:71;:::i;:::-;33314:222;;;;:::o;33542:228::-;33682:34;33678:1;33670:6;33666:14;33659:58;33751:11;33746:2;33738:6;33734:15;33727:36;33542:228;:::o;33776:366::-;33918:3;33939:67;34003:2;33998:3;33939:67;:::i;:::-;33932:74;;34015:93;34104:3;34015:93;:::i;:::-;34133:2;34128:3;34124:12;34117:19;;33776:366;;;:::o;34148:419::-;34314:4;34352:2;34341:9;34337:18;34329:26;;34401:9;34395:4;34391:20;34387:1;34376:9;34372:17;34365:47;34429:131;34555:4;34429:131;:::i;:::-;34421:139;;34148:419;;;:::o;34573:233::-;34713:34;34709:1;34701:6;34697:14;34690:58;34782:16;34777:2;34769:6;34765:15;34758:41;34573:233;:::o;34812:366::-;34954:3;34975:67;35039:2;35034:3;34975:67;:::i;:::-;34968:74;;35051:93;35140:3;35051:93;:::i;:::-;35169:2;35164:3;35160:12;35153:19;;34812:366;;;:::o;35184:419::-;35350:4;35388:2;35377:9;35373:18;35365:26;;35437:9;35431:4;35427:20;35423:1;35412:9;35408:17;35401:47;35465:131;35591:4;35465:131;:::i;:::-;35457:139;;35184:419;;;:::o;35609:85::-;35654:7;35683:5;35672:16;;35609:85;;;:::o;35700:86::-;35735:7;35775:4;35768:5;35764:16;35753:27;;35700:86;;;:::o;35792:60::-;35820:3;35841:5;35834:12;;35792:60;;;:::o;35858:154::-;35914:9;35947:59;35963:42;35972:32;35998:5;35972:32;:::i;:::-;35963:42;:::i;:::-;35947:59;:::i;:::-;35934:72;;35858:154;;;:::o;36018:143::-;36111:43;36148:5;36111:43;:::i;:::-;36106:3;36099:56;36018:143;;:::o;36167:234::-;36266:4;36304:2;36293:9;36289:18;36281:26;;36317:77;36391:1;36380:9;36376:17;36367:6;36317:77;:::i;:::-;36167:234;;;;:::o;36407:173::-;36547:25;36543:1;36535:6;36531:14;36524:49;36407:173;:::o;36586:366::-;36728:3;36749:67;36813:2;36808:3;36749:67;:::i;:::-;36742:74;;36825:93;36914:3;36825:93;:::i;:::-;36943:2;36938:3;36934:12;36927:19;;36586:366;;;:::o;36958:419::-;37124:4;37162:2;37151:9;37147:18;37139:26;;37211:9;37205:4;37201:20;37197:1;37186:9;37182:17;37175:47;37239:131;37365:4;37239:131;:::i;:::-;37231:139;;36958:419;;;:::o;37383:168::-;37523:20;37519:1;37511:6;37507:14;37500:44;37383:168;:::o;37557:366::-;37699:3;37720:67;37784:2;37779:3;37720:67;:::i;:::-;37713:74;;37796:93;37885:3;37796:93;:::i;:::-;37914:2;37909:3;37905:12;37898:19;;37557:366;;;:::o;37929:419::-;38095:4;38133:2;38122:9;38118:18;38110:26;;38182:9;38176:4;38172:20;38168:1;38157:9;38153:17;38146:47;38210:131;38336:4;38210:131;:::i;:::-;38202:139;;37929:419;;;:::o;38354:442::-;38503:4;38541:2;38530:9;38526:18;38518:26;;38554:71;38622:1;38611:9;38607:17;38598:6;38554:71;:::i;:::-;38635:72;38703:2;38692:9;38688:18;38679:6;38635:72;:::i;:::-;38717;38785:2;38774:9;38770:18;38761:6;38717:72;:::i;:::-;38354:442;;;;;;:::o;38802:233::-;38841:3;38864:24;38882:5;38864:24;:::i;:::-;38855:33;;38910:66;38903:5;38900:77;38897:103;;38980:18;;:::i;:::-;38897:103;39027:1;39020:5;39016:13;39009:20;;38802:233;;;:::o;39041:410::-;39081:7;39104:20;39122:1;39104:20;:::i;:::-;39099:25;;39138:20;39156:1;39138:20;:::i;:::-;39133:25;;39193:1;39190;39186:9;39215:30;39233:11;39215:30;:::i;:::-;39204:41;;39394:1;39385:7;39381:15;39378:1;39375:22;39355:1;39348:9;39328:83;39305:139;;39424:18;;:::i;:::-;39305:139;39089:362;39041:410;;;;:::o;39457:180::-;39505:77;39502:1;39495:88;39602:4;39599:1;39592:15;39626:4;39623:1;39616:15;39643:185;39683:1;39700:20;39718:1;39700:20;:::i;:::-;39695:25;;39734:20;39752:1;39734:20;:::i;:::-;39729:25;;39773:1;39763:35;;39778:18;;:::i;:::-;39763:35;39820:1;39817;39813:9;39808:14;;39643:185;;;;:::o;39834:140::-;39883:9;39916:52;39934:33;39943:23;39960:5;39943:23;:::i;:::-;39934:33;:::i;:::-;39916:52;:::i;:::-;39903:65;;39834:140;;;:::o;39980:129::-;40066:36;40096:5;40066:36;:::i;:::-;40061:3;40054:49;39980:129;;:::o;40115:146::-;40212:6;40207:3;40202;40189:30;40253:1;40244:6;40239:3;40235:16;40228:27;40115:146;;;:::o;40291:317::-;40389:3;40410:71;40474:6;40469:3;40410:71;:::i;:::-;40403:78;;40491:56;40540:6;40535:3;40528:5;40491:56;:::i;:::-;40572:29;40594:6;40572:29;:::i;:::-;40567:3;40563:39;40556:46;;40291:317;;;;;:::o;40614:773::-;40848:4;40886:3;40875:9;40871:19;40863:27;;40900:71;40968:1;40957:9;40953:17;40944:6;40900:71;:::i;:::-;40981:72;41049:2;41038:9;41034:18;41025:6;40981:72;:::i;:::-;41063:71;41130:2;41119:9;41115:18;41106:6;41063:71;:::i;:::-;41144:72;41212:2;41201:9;41197:18;41188:6;41144:72;:::i;:::-;41264:9;41258:4;41254:20;41248:3;41237:9;41233:19;41226:49;41292:88;41375:4;41366:6;41358;41292:88;:::i;:::-;41284:96;;40614:773;;;;;;;;;:::o;41393:216::-;41432:4;41452:19;41469:1;41452:19;:::i;:::-;41447:24;;41485:19;41502:1;41485:19;:::i;:::-;41480:24;;41528:1;41525;41521:9;41513:17;;41552:26;41546:4;41543:36;41540:62;;;41582:18;;:::i;:::-;41540:62;41393:216;;;;:::o;41615:138::-;41663:9;41696:51;41713:33;41722:23;41739:5;41722:23;:::i;:::-;41713:33;:::i;:::-;41696:51;:::i;:::-;41683:64;;41615:138;;;:::o;41759:127::-;41844:35;41873:5;41844:35;:::i;:::-;41839:3;41832:48;41759:127;;:::o;41892:328::-;42011:4;42049:2;42038:9;42034:18;42026:26;;42062:71;42130:1;42119:9;42115:17;42106:6;42062:71;:::i;:::-;42143:70;42209:2;42198:9;42194:18;42185:6;42143:70;:::i;:::-;41892:328;;;;;:::o;42226:182::-;42366:34;42362:1;42354:6;42350:14;42343:58;42226:182;:::o;42414:366::-;42556:3;42577:67;42641:2;42636:3;42577:67;:::i;:::-;42570:74;;42653:93;42742:3;42653:93;:::i;:::-;42771:2;42766:3;42762:12;42755:19;;42414:366;;;:::o;42786:419::-;42952:4;42990:2;42979:9;42975:18;42967:26;;43039:9;43033:4;43029:20;43025:1;43014:9;43010:17;43003:47;43067:131;43193:4;43067:131;:::i;:::-;43059:139;;42786:419;;;:::o;43211:230::-;43351:34;43347:1;43339:6;43335:14;43328:58;43420:13;43415:2;43407:6;43403:15;43396:38;43211:230;:::o;43447:366::-;43589:3;43610:67;43674:2;43669:3;43610:67;:::i;:::-;43603:74;;43686:93;43775:3;43686:93;:::i;:::-;43804:2;43799:3;43795:12;43788:19;;43447:366;;;:::o;43819:419::-;43985:4;44023:2;44012:9;44008:18;44000:26;;44072:9;44066:4;44062:20;44058:1;44047:9;44043:17;44036:47;44100:131;44226:4;44100:131;:::i;:::-;44092:139;;43819:419;;;:::o;44244:166::-;44384:18;44380:1;44372:6;44368:14;44361:42;44244:166;:::o;44416:366::-;44558:3;44579:67;44643:2;44638:3;44579:67;:::i;:::-;44572:74;;44655:93;44744:3;44655:93;:::i;:::-;44773:2;44768:3;44764:12;44757:19;;44416:366;;;:::o;44788:419::-;44954:4;44992:2;44981:9;44977:18;44969:26;;45041:9;45035:4;45031:20;45027:1;45016:9;45012:17;45005:47;45069:131;45195:4;45069:131;:::i;:::-;45061:139;;44788:419;;;:::o;45213:167::-;45353:19;45349:1;45341:6;45337:14;45330:43;45213:167;:::o;45386:366::-;45528:3;45549:67;45613:2;45608:3;45549:67;:::i;:::-;45542:74;;45625:93;45714:3;45625:93;:::i;:::-;45743:2;45738:3;45734:12;45727:19;;45386:366;;;:::o;45758:419::-;45924:4;45962:2;45951:9;45947:18;45939:26;;46011:9;46005:4;46001:20;45997:1;45986:9;45982:17;45975:47;46039:131;46165:4;46039:131;:::i;:::-;46031:139;;45758:419;;;:::o;46183:162::-;46323:14;46319:1;46311:6;46307:14;46300:38;46183:162;:::o;46351:366::-;46493:3;46514:67;46578:2;46573:3;46514:67;:::i;:::-;46507:74;;46590:93;46679:3;46590:93;:::i;:::-;46708:2;46703:3;46699:12;46692:19;;46351:366;;;:::o;46723:419::-;46889:4;46927:2;46916:9;46912:18;46904:26;;46976:9;46970:4;46966:20;46962:1;46951:9;46947:17;46940:47;47004:131;47130:4;47004:131;:::i;:::-;46996:139;;46723:419;;;:::o;47148:166::-;47288:18;47284:1;47276:6;47272:14;47265:42;47148:166;:::o;47320:366::-;47462:3;47483:67;47547:2;47542:3;47483:67;:::i;:::-;47476:74;;47559:93;47648:3;47559:93;:::i;:::-;47677:2;47672:3;47668:12;47661:19;;47320:366;;;:::o;47692:419::-;47858:4;47896:2;47885:9;47881:18;47873:26;;47945:9;47939:4;47935:20;47931:1;47920:9;47916:17;47909:47;47973:131;48099:4;47973:131;:::i;:::-;47965:139;;47692:419;;;:::o;48117:175::-;48257:27;48253:1;48245:6;48241:14;48234:51;48117:175;:::o;48298:366::-;48440:3;48461:67;48525:2;48520:3;48461:67;:::i;:::-;48454:74;;48537:93;48626:3;48537:93;:::i;:::-;48655:2;48650:3;48646:12;48639:19;;48298:366;;;:::o;48670:419::-;48836:4;48874:2;48863:9;48859:18;48851:26;;48923:9;48917:4;48913:20;48909:1;48898:9;48894:17;48887:47;48951:131;49077:4;48951:131;:::i;:::-;48943:139;;48670:419;;;:::o;49095:170::-;49235:22;49231:1;49223:6;49219:14;49212:46;49095:170;:::o;49271:366::-;49413:3;49434:67;49498:2;49493:3;49434:67;:::i;:::-;49427:74;;49510:93;49599:3;49510:93;:::i;:::-;49628:2;49623:3;49619:12;49612:19;;49271:366;;;:::o;49643:419::-;49809:4;49847:2;49836:9;49832:18;49824:26;;49896:9;49890:4;49886:20;49882:1;49871:9;49867:17;49860:47;49924:131;50050:4;49924:131;:::i;:::-;49916:139;;49643:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"3299800","executionCost":"infinite","totalCost":"infinite"},"external":{"acceptOwnership()":"54681","createOrder(address,uint256,bytes32,uint96,address,uint256,address,string)":"infinite","getFeeDetails()":"4804","getOrderInfo(bytes32)":"infinite","getSupportedInstitutionByCode(bytes32)":"infinite","getSupportedInstitutions(bytes32)":"infinite","initialize()":"191278","isTokenSupported(address)":"2970","owner()":"2611","pause()":"infinite","paused()":"2502","pendingOwner()":"2610","refund(uint256,bytes32)":"infinite","renounceOwnership()":"54714","setSupportedInstitutions(bytes32,(bytes32,bytes32)[])":"infinite","settingManagerBool(bytes32,address,uint256)":"infinite","settle(bytes32,bytes32,address,uint64)":"infinite","transferOwnership(address)":"infinite","unpause()":"infinite","updateProtocolAddress(bytes32,address)":"31161","updateProtocolFee(uint64)":"infinite"},"internal":{"_handler(address,uint256,address,address,uint256)":"infinite"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","createOrder(address,uint256,bytes32,uint96,address,uint256,address,string)":"d12ff20a","getFeeDetails()":"b810c636","getOrderInfo(bytes32)":"768c6ec0","getSupportedInstitutionByCode(bytes32)":"c2280103","getSupportedInstitutions(bytes32)":"02621338","initialize()":"8129fc1c","isTokenSupported(address)":"75151b63","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","pendingOwner()":"e30c3978","refund(uint256,bytes32)":"71eedb88","renounceOwnership()":"715018a6","setSupportedInstitutions(bytes32,(bytes32,bytes32)[])":"32200882","settingManagerBool(bytes32,address,uint256)":"cd992400","settle(bytes32,bytes32,address,uint64)":"f22ee704","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a","updateProtocolAddress(bytes32,address)":"40ebc677","updateProtocolFee(uint64)":"47094e2e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"institutionCode\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"messageHash\",\"type\":\"string\"}],\"name\":\"OrderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"OrderRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"splitOrderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"settlePercent\",\"type\":\"uint96\"}],\"name\":\"OrderSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"treasuryAddress\",\"type\":\"address\"}],\"name\":\"ProtocolAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"protocolFee\",\"type\":\"uint64\"}],\"name\":\"ProtocolFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SenderFeeTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"treasuryAddress\",\"type\":\"address\"}],\"name\":\"SetFeeRecipient\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"}],\"name\":\"SettingManagerBool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"currency\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"code\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct SharedStructs.Institution[]\",\"name\":\"institutions\",\"type\":\"tuple[]\"}],\"name\":\"SupportedInstitutionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_institutionCode\",\"type\":\"bytes32\"},{\"internalType\":\"uint96\",\"name\":\"_rate\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"_senderFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_senderFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_refundAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"messageHash\",\"type\":\"string\"}],\"name\":\"createOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeDetails\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"}],\"name\":\"getOrderInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"senderFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isFulfilled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRefunded\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"currentBPS\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IGateway.Order\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_code\",\"type\":\"bytes32\"}],\"name\":\"getSupportedInstitutionByCode\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"currency\",\"type\":\"bytes32\"}],\"internalType\":\"struct SharedStructs.InstitutionByCode\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_currency\",\"type\":\"bytes32\"}],\"name\":\"getSupportedInstitutions\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"code\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"internalType\":\"struct SharedStructs.Institution[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isTokenSupported\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"}],\"name\":\"refund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"currency\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"code\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"internalType\":\"struct SharedStructs.Institution[]\",\"name\":\"institutions\",\"type\":\"tuple[]\"}],\"name\":\"setSupportedInstitutions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"}],\"name\":\"settingManagerBool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_splitOrderId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_liquidityProvider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_settlePercent\",\"type\":\"uint64\"}],\"name\":\"settle\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"updateProtocolAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_protocolFeePercent\",\"type\":\"uint64\"}],\"name\":\"updateProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"OrderCreated(address,address,uint256,uint256,bytes32,uint256,bytes32,string)\":{\"details\":\"Emitted when a deposit is made.\",\"params\":{\"amount\":\"The amount of the deposit.\",\"institutionCode\":\"The code of the institution.\",\"messageHash\":\"The hash of the message.\",\"orderId\":\"The ID of the order.\",\"rate\":\"The rate at which the deposit is made.\",\"sender\":\"The address of the sender.\",\"token\":\"The address of the deposited token.\"}},\"OrderRefunded(uint256,bytes32)\":{\"details\":\"Emitted when an aggregator refunds a transaction.\",\"params\":{\"fee\":\"The fee deducted from the refund amount.\",\"orderId\":\"The ID of the order.\"}},\"OrderSettled(bytes32,bytes32,address,uint96)\":{\"details\":\"Emitted when an aggregator settles a transaction.\",\"params\":{\"liquidityProvider\":\"The address of the liquidity provider.\",\"orderId\":\"The ID of the order.\",\"settlePercent\":\"The percentage at which the transaction is settled.\",\"splitOrderId\":\"The ID of the split order.\"}},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"SenderFeeTransferred(address,uint256)\":{\"details\":\"Emitted when the sender's fee is transferred.\",\"params\":{\"amount\":\"The amount of the fee transferred.\",\"sender\":\"The address of the sender.\"}},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"createOrder(address,uint256,bytes32,uint96,address,uint256,address,string)\":{\"details\":\"See {createOrder-IGateway}. \"},\"getFeeDetails()\":{\"details\":\"See {getFeeDetails-IGateway}. \"},\"getOrderInfo(bytes32)\":{\"details\":\"See {getOrderInfo-IGateway}. \"},\"getSupportedInstitutionByCode(bytes32)\":{\"details\":\"See {getSupportedInstitutionByCode-IGateway}. \"},\"getSupportedInstitutions(bytes32)\":{\"details\":\"See {getSupportedInstitutions-IGateway}. \"},\"initialize()\":{\"details\":\"Initialize function.\"},\"isTokenSupported(address)\":{\"details\":\"See {isTokenSupported-IGateway}. \"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Pause the contract.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"refund(uint256,bytes32)\":{\"details\":\"See {refund-IGateway}. \"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setSupportedInstitutions(bytes32,(bytes32,bytes32)[])\":{\"details\":\"Sets the supported institutions for a specific currency.\",\"params\":{\"currency\":\"The currency for which the institutions are being set.\",\"institutions\":\"The array of institutions to be set.\"}},\"settingManagerBool(bytes32,address,uint256)\":{\"details\":\"Sets the boolean value for a specific setting.\",\"params\":{\"status\":\"The boolean value to be set. Requirements: - The value must not be a zero address.\",\"value\":\"The address or value associated with the setting.\",\"what\":\"The setting to be updated.\"}},\"settle(bytes32,bytes32,address,uint64)\":{\"details\":\"See {settle-IGateway}. \"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Unpause the contract.\"},\"updateProtocolAddress(bytes32,address)\":{\"details\":\"Updates a protocol address.\",\"params\":{\"value\":\"The new address to be set. Requirements: - The value must not be a zero address.\",\"what\":\"The address type to be updated (treasury or aggregator).\"}},\"updateProtocolFee(uint64)\":{\"details\":\"Updates the protocol fee percentage.\",\"params\":{\"_protocolFeePercent\":\"The new protocol fee percentage to be set.\"}}},\"title\":\"Gateway\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract serves as a gateway for creating orders and managing settlements.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Gateway.sol\":\"Gateway\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable2Step.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./OwnableUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership} and {acceptOwnership}.\\n *\\n * This module is used through inheritance. It will make available all functions\\n * from parent (Ownable).\\n */\\nabstract contract Ownable2StepUpgradeable is Initializable, OwnableUpgradeable {\\n    address private _pendingOwner;\\n\\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\\n\\n    function __Ownable2Step_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable2Step_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Returns the address of the pending owner.\\n     */\\n    function pendingOwner() public view virtual returns (address) {\\n        return _pendingOwner;\\n    }\\n\\n    /**\\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\\n        _pendingOwner = newOwner;\\n        emit OwnershipTransferStarted(owner(), newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual override {\\n        delete _pendingOwner;\\n        super._transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev The new owner accepts the ownership transfer.\\n     */\\n    function acceptOwnership() public virtual {\\n        address sender = _msgSender();\\n        require(pendingOwner() == sender, \\\"Ownable2Step: caller is not the new owner\\\");\\n        _transferOwnership(sender);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x9140dabc466abab21b48b72dbda26736b1183a310d0e677d3719d201df026510\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal onlyInitializing {\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal onlyInitializing {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/Gateway.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.18;\\n\\nimport '@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol';\\n\\nimport {GatewaySettingManager} from './GatewaySettingManager.sol';\\nimport {IGateway, IERC20} from './interfaces/IGateway.sol';\\nimport {SharedStructs} from './libraries/SharedStructs.sol';\\n\\n/**\\n * @title Gateway\\n * @notice This contract serves as a gateway for creating orders and managing settlements.\\n */\\ncontract Gateway is IGateway, GatewaySettingManager, PausableUpgradeable {\\n\\tstruct fee {\\n\\t\\tuint256 protocolFee;\\n\\t\\tuint256 liquidityProviderAmount;\\n\\t}\\n\\n\\tmapping(bytes32 => Order) private order;\\n\\tmapping(address => uint256) private _nonce;\\n\\tuint256[50] private __gap;\\n\\n\\t/// @custom:oz-upgrades-unsafe-allow constructor\\n\\tconstructor() {\\n\\t\\t_disableInitializers();\\n\\t}\\n\\n\\t/**\\n\\t * @dev Initialize function.\\n\\t */\\n\\tfunction initialize() external initializer {\\n\\t\\tMAX_BPS = 100_000;\\n\\t\\t__Ownable2Step_init();\\n\\t\\t__Pausable_init();\\n\\t}\\n\\n\\t/**\\n\\t * @dev Modifier that allows only the aggregator to call a function.\\n\\t */\\n\\tmodifier onlyAggregator() {\\n\\t\\trequire(msg.sender == _aggregatorAddress, 'OnlyAggregator');\\n\\t\\t_;\\n\\t}\\n\\n\\t/* ##################################################################\\n                                OWNER FUNCTIONS\\n    ################################################################## */\\n\\t/**\\n\\t * @dev Pause the contract.\\n\\t */\\n\\tfunction pause() external onlyOwner {\\n\\t\\t_pause();\\n\\t}\\n\\n\\t/**\\n\\t * @dev Unpause the contract.\\n\\t */\\n\\tfunction unpause() external onlyOwner {\\n\\t\\t_unpause();\\n\\t}\\n\\n\\t/* ##################################################################\\n                                USER CALLS\\n    ################################################################## */\\n\\t/** @dev See {createOrder-IGateway}. */\\n\\tfunction createOrder(\\n\\t\\taddress _token,\\n\\t\\tuint256 _amount,\\n\\t\\tbytes32 _institutionCode,\\n\\t\\tuint96 _rate,\\n\\t\\taddress _senderFeeRecipient,\\n\\t\\tuint256 _senderFee,\\n\\t\\taddress _refundAddress,\\n\\t\\tstring calldata messageHash\\n\\t) external whenNotPaused returns (bytes32 orderId) {\\n\\t\\t// checks that are required\\n\\t\\t_handler(_token, _amount, _refundAddress, _senderFeeRecipient, _senderFee);\\n\\n\\t\\t// validate messageHash\\n\\t\\trequire(bytes(messageHash).length != 0, 'InvalidMessageHash');\\n\\n\\t\\t// transfer token from msg.sender to contract\\n\\t\\tIERC20(_token).transferFrom(msg.sender, address(this), _amount + _senderFee);\\n\\n\\t\\t// increase users nonce to avoid replay attacks\\n\\t\\t_nonce[msg.sender]++;\\n\\n\\t\\t// generate transaction id for the transaction\\n\\t\\torderId = keccak256(abi.encode(msg.sender, _nonce[msg.sender]));\\n\\n\\t\\t// update transaction\\n\\t\\tuint256 _protocolFee = (_amount * protocolFeePercent) / MAX_BPS;\\n\\t\\torder[orderId] = Order({\\n\\t\\t\\tsender: msg.sender,\\n\\t\\t\\ttoken: _token,\\n\\t\\t\\tsenderFeeRecipient: _senderFeeRecipient,\\n\\t\\t\\tsenderFee: _senderFee,\\n\\t\\t\\tprotocolFee: _protocolFee,\\n\\t\\t\\tisFulfilled: false,\\n\\t\\t\\tisRefunded: false,\\n\\t\\t\\trefundAddress: _refundAddress,\\n\\t\\t\\tcurrentBPS: uint64(MAX_BPS),\\n\\t\\t\\tamount: _amount - _protocolFee\\n\\t\\t});\\n\\n\\t\\t// emit order created event\\n\\t\\temit OrderCreated(\\n\\t\\t\\torder[orderId].sender,\\n\\t\\t\\t_token,\\n\\t\\t\\torder[orderId].amount,\\n\\t\\t\\t_protocolFee,\\n\\t\\t\\torderId,\\n\\t\\t\\t_rate,\\n\\t\\t\\t_institutionCode,\\n\\t\\t\\tmessageHash\\n\\t\\t);\\n\\t}\\n\\n\\t/**\\n\\t * @dev Internal function to handle order creation.\\n\\t * @param _token The address of the token being traded.\\n\\t * @param _amount The amount of tokens being traded.\\n\\t * @param _refundAddress The address to refund the tokens in case of cancellation.\\n\\t * @param _senderFeeRecipient The address of the recipient for the sender fee.\\n\\t * @param _senderFee The amount of the sender fee.\\n\\t */\\n\\tfunction _handler(\\n\\t\\taddress _token,\\n\\t\\tuint256 _amount,\\n\\t\\taddress _refundAddress,\\n\\t\\taddress _senderFeeRecipient,\\n\\t\\tuint256 _senderFee\\n\\t) internal view {\\n\\t\\trequire(_isTokenSupported[_token] == 1, 'TokenNotSupported');\\n\\t\\trequire(_amount != 0, 'AmountIsZero');\\n\\t\\trequire(_refundAddress != address(0), 'ThrowZeroAddress');\\n\\n\\t\\tif (_senderFee != 0) {\\n\\t\\t\\trequire(_senderFeeRecipient != address(0), 'InvalidSenderFeeRecipient');\\n\\t\\t}\\n\\t}\\n\\n\\t/* ##################################################################\\n                                AGGREGATOR FUNCTIONS\\n    ################################################################## */\\n\\t/** @dev See {settle-IGateway}. */\\n\\tfunction settle(\\n\\t\\tbytes32 _splitOrderId,\\n\\t\\tbytes32 _orderId,\\n\\t\\taddress _liquidityProvider,\\n\\t\\tuint64 _settlePercent\\n\\t) external onlyAggregator returns (bool) {\\n\\t\\t// ensure the transaction has not been fulfilled\\n\\t\\trequire(!order[_orderId].isFulfilled, 'OrderFulfilled');\\n\\t\\trequire(!order[_orderId].isRefunded, 'OrderRefunded');\\n\\n\\t\\t// load the token into memory\\n\\t\\taddress token = order[_orderId].token;\\n\\n\\t\\t// subtract sum of amount based on the input _settlePercent\\n\\t\\torder[_orderId].currentBPS -= _settlePercent;\\n\\n\\t\\tif (order[_orderId].currentBPS == 0) {\\n\\t\\t\\t// update the transaction to be fulfilled\\n\\t\\t\\torder[_orderId].isFulfilled = true;\\n\\n\\t\\t\\tif (order[_orderId].senderFee != 0) {\\n\\t\\t\\t\\t// transfer sender fee\\n\\t\\t\\t\\tIERC20(order[_orderId].token).transfer(\\n\\t\\t\\t\\t\\torder[_orderId].senderFeeRecipient,\\n\\t\\t\\t\\t\\torder[_orderId].senderFee\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t// emit event\\n\\t\\t\\t\\temit SenderFeeTransferred(\\n\\t\\t\\t\\t\\torder[_orderId].senderFeeRecipient,\\n\\t\\t\\t\\t\\torder[_orderId].senderFee\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (order[_orderId].protocolFee != 0) {\\n\\t\\t\\t\\t// transfer protocol fee\\n\\t\\t\\t\\tIERC20(token).transfer(treasuryAddress, order[_orderId].protocolFee);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// transfer to liquidity provider\\n\\t\\tuint256 liquidityProviderAmount = (order[_orderId].amount * _settlePercent) / MAX_BPS;\\n\\t\\torder[_orderId].amount -= liquidityProviderAmount;\\n\\t\\tIERC20(token).transfer(_liquidityProvider, liquidityProviderAmount);\\n\\n\\t\\t// emit settled event\\n\\t\\temit OrderSettled(_splitOrderId, _orderId, _liquidityProvider, _settlePercent);\\n\\n\\t\\treturn true;\\n\\t}\\n\\n\\t/** @dev See {refund-IGateway}. */\\n\\tfunction refund(uint256 _fee, bytes32 _orderId) external onlyAggregator returns (bool) {\\n\\t\\t// ensure the transaction has not been fulfilled\\n\\t\\trequire(!order[_orderId].isFulfilled, 'OrderFulfilled');\\n\\t\\trequire(!order[_orderId].isRefunded, 'OrderRefunded');\\n\\t\\trequire(order[_orderId].protocolFee >= _fee, 'FeeExceedsProtocolFee');\\n\\n\\t\\t// transfer refund fee to the treasury\\n\\t\\tIERC20(order[_orderId].token).transfer(treasuryAddress, _fee);\\n\\n\\t\\t// reset state values\\n\\t\\torder[_orderId].isRefunded = true;\\n\\t\\torder[_orderId].currentBPS = 0;\\n\\n\\t\\t// deduct fee from order amount\\n\\t\\tuint256 refundAmount = order[_orderId].amount + order[_orderId].protocolFee - _fee;\\n\\n\\t\\t// transfer refund amount and sender fee to the refund address\\n\\t\\tIERC20(order[_orderId].token).transfer(\\n\\t\\t\\torder[_orderId].refundAddress,\\n\\t\\t\\trefundAmount + order[_orderId].senderFee\\n\\t\\t);\\n\\n\\t\\t// emit refunded event\\n\\t\\temit OrderRefunded(_fee, _orderId);\\n\\n\\t\\treturn true;\\n\\t}\\n\\n\\t/* ##################################################################\\n                                VIEW CALLS\\n    ################################################################## */\\n\\t/** @dev See {getOrderInfo-IGateway}. */\\n\\tfunction getOrderInfo(bytes32 _orderId) external view returns (Order memory) {\\n\\t\\treturn order[_orderId];\\n\\t}\\n\\n\\t/** @dev See {isTokenSupported-IGateway}. */\\n\\tfunction isTokenSupported(address _token) external view returns (bool) {\\n\\t\\tif (_isTokenSupported[_token] == 1) return true;\\n\\t\\treturn false;\\n\\t}\\n\\n\\t/** @dev See {getSupportedInstitutionByCode-IGateway}. */\\n\\tfunction getSupportedInstitutionByCode(\\n\\t\\tbytes32 _code\\n\\t) external view returns (SharedStructs.InstitutionByCode memory) {\\n\\t\\treturn supportedInstitutionsByCode[_code];\\n\\t}\\n\\n\\t/** @dev See {getSupportedInstitutions-IGateway}. */\\n\\tfunction getSupportedInstitutions(\\n\\t\\tbytes32 _currency\\n\\t) external view returns (SharedStructs.Institution[] memory) {\\n\\t\\treturn supportedInstitutions[_currency];\\n\\t}\\n\\n\\t/** @dev See {getFeeDetails-IGateway}. */\\n\\tfunction getFeeDetails() external view returns (uint64, uint256) {\\n\\t\\treturn (protocolFeePercent, MAX_BPS);\\n\\t}\\n}\\n\",\"keccak256\":\"0xaa729b847614f6478fd6b30d1097627c331ff6e44dfdda23d769e534468979bd\",\"license\":\"UNLICENSED\"},\"contracts/GatewaySettingManager.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n\\n/**\\n * @title GatewaySettingManager\\n * @dev This contract manages the settings and configurations for the Gateway protocol.\\n */\\npragma solidity ^0.8.18;\\n\\nimport '@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol';\\n\\nimport {SharedStructs} from './libraries/SharedStructs.sol';\\n\\ncontract GatewaySettingManager is Ownable2StepUpgradeable {\\n\\tuint256 internal MAX_BPS;\\n\\tuint64 internal protocolFeePercent;\\n\\taddress internal treasuryAddress;\\n\\taddress internal _aggregatorAddress;\\n\\n\\t// this should decrease if more slots are needed on this contract to avoid collisions with base contract\\n\\tuint256[50] private __gap;\\n\\n\\tmapping(address => uint256) internal _isTokenSupported;\\n\\n\\tmapping(bytes32 => SharedStructs.Institution[]) internal supportedInstitutions;\\n\\tmapping(bytes32 => SharedStructs.InstitutionByCode) internal supportedInstitutionsByCode;\\n\\n\\tevent SettingManagerBool(bytes32 indexed what, address indexed value, uint256 status);\\n\\tevent SupportedInstitutionsUpdated(\\n\\t\\tbytes32 indexed currency,\\n\\t\\tSharedStructs.Institution[] institutions\\n\\t);\\n\\tevent ProtocolFeeUpdated(uint64 protocolFee);\\n\\tevent ProtocolAddressUpdated(bytes32 indexed what, address indexed treasuryAddress);\\n\\tevent SetFeeRecipient(address indexed treasuryAddress);\\n\\n\\t/* ##################################################################\\n                                OWNER FUNCTIONS\\n    ################################################################## */\\n\\n\\t/**\\n\\t * @dev Sets the boolean value for a specific setting.\\n\\t * @param what The setting to be updated.\\n\\t * @param value The address or value associated with the setting.\\n\\t * @param status The boolean value to be set.\\n\\t * Requirements:\\n\\t * - The value must not be a zero address.\\n\\t */\\n\\tfunction settingManagerBool(bytes32 what, address value, uint256 status) external onlyOwner {\\n\\t\\trequire(value != address(0), 'Gateway: zero address');\\n\\t\\trequire(status == 1 || status == 2, 'Gateway: invalid status');\\n\\t\\tif (what == 'token') {\\n\\t\\t\\t_isTokenSupported[value] = status;\\n\\t\\t\\temit SettingManagerBool(what, value, status);\\n\\t\\t}\\n\\t}\\n\\n\\t/**\\n\\t * @dev Sets the supported institutions for a specific currency.\\n\\t * @param currency The currency for which the institutions are being set.\\n\\t * @param institutions The array of institutions to be set.\\n\\t */\\n\\tfunction setSupportedInstitutions(\\n\\t\\tbytes32 currency,\\n\\t\\tSharedStructs.Institution[] memory institutions\\n\\t) external onlyOwner {\\n\\t\\tdelete supportedInstitutions[currency];\\n\\t\\tfor (uint i; i < institutions.length; ) {\\n\\t\\t\\tsupportedInstitutions[currency].push(institutions[i]);\\n\\t\\t\\tsupportedInstitutionsByCode[institutions[i].code] = SharedStructs.InstitutionByCode({\\n\\t\\t\\t\\tname: institutions[i].name,\\n\\t\\t\\t\\tcurrency: currency\\n\\t\\t\\t});\\n\\t\\t\\tunchecked {\\n\\t\\t\\t\\t++i;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\temit SupportedInstitutionsUpdated(currency, supportedInstitutions[currency]);\\n\\t}\\n\\n\\t/**\\n\\t * @dev Updates the protocol fee percentage.\\n\\t * @param _protocolFeePercent The new protocol fee percentage to be set.\\n\\t */\\n\\tfunction updateProtocolFee(uint64 _protocolFeePercent) external onlyOwner {\\n\\t\\tprotocolFeePercent = _protocolFeePercent;\\n\\t\\temit ProtocolFeeUpdated(_protocolFeePercent);\\n\\t}\\n\\n\\t/**\\n\\t * @dev Updates a protocol address.\\n\\t * @param what The address type to be updated (treasury or aggregator).\\n\\t * @param value The new address to be set.\\n\\t * Requirements:\\n\\t * - The value must not be a zero address.\\n\\t */\\n\\tfunction updateProtocolAddress(bytes32 what, address value) external onlyOwner {\\n\\t\\trequire(value != address(0), 'Gateway: zero address');\\n\\t\\tbool updated;\\n\\t\\tif (what == 'treasury') {\\n\\t\\t\\trequire(treasuryAddress != value, 'Gateway: treasury address already set');\\n\\t\\t\\ttreasuryAddress = value;\\n\\t\\t\\tupdated = true;\\n\\t\\t} else if (what == 'aggregator') {\\n\\t\\t\\trequire(_aggregatorAddress != value, 'Gateway: aggregator address already set');\\n\\t\\t\\t_aggregatorAddress = value;\\n\\t\\t\\tupdated = true;\\n\\t\\t}\\n\\t\\tif (updated) {\\n\\t\\t\\temit ProtocolAddressUpdated(what, value);\\n\\t\\t}\\n\\t}\\n}\\n\",\"keccak256\":\"0x7bf3fc733cbf8f2815924c2f10199aa0836d3b5d5b5b92b10cd4855d65773477\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IGateway.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.18;\\n\\nimport {IERC20} from '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\n\\nimport {SharedStructs} from '../libraries/SharedStructs.sol';\\n\\n/**\\n * @title IGateway\\n * @notice Interface for the Gateway contract.\\n */\\ninterface IGateway {\\n\\t/* ##################################################################\\n                                EVENTS\\n    ################################################################## */\\n\\t/**\\n\\t * @dev Emitted when a deposit is made.\\n\\t * @param sender The address of the sender.\\n\\t * @param token The address of the deposited token.\\n\\t * @param amount The amount of the deposit.\\n\\t * @param orderId The ID of the order.\\n\\t * @param rate The rate at which the deposit is made.\\n\\t * @param institutionCode The code of the institution.\\n\\t * @param messageHash The hash of the message.\\n\\t */\\n\\tevent OrderCreated(\\n\\t\\taddress indexed sender,\\n\\t\\taddress indexed token,\\n\\t\\tuint256 indexed amount,\\n\\t\\tuint256 protocolFee,\\n\\t\\tbytes32 orderId,\\n\\t\\tuint256 rate,\\n\\t\\tbytes32 institutionCode,\\n\\t\\tstring messageHash\\n\\t);\\n\\n\\t/**\\n\\t * @dev Emitted when an aggregator settles a transaction.\\n\\t * @param splitOrderId The ID of the split order.\\n\\t * @param orderId The ID of the order.\\n\\t * @param liquidityProvider The address of the liquidity provider.\\n\\t * @param settlePercent The percentage at which the transaction is settled.\\n\\t */\\n\\tevent OrderSettled(\\n\\t\\tbytes32 splitOrderId,\\n\\t\\tbytes32 indexed orderId,\\n\\t\\taddress indexed liquidityProvider,\\n\\t\\tuint96 settlePercent\\n\\t);\\n\\n\\t/**\\n\\t * @dev Emitted when an aggregator refunds a transaction.\\n\\t * @param fee The fee deducted from the refund amount.\\n\\t * @param orderId The ID of the order.\\n\\t */\\n\\tevent OrderRefunded(uint256 fee, bytes32 indexed orderId);\\n\\n\\t/**\\n\\t * @dev Emitted when the sender's fee is transferred.\\n\\t * @param sender The address of the sender.\\n\\t * @param amount The amount of the fee transferred.\\n\\t */\\n\\tevent SenderFeeTransferred(address indexed sender, uint256 indexed amount);\\n\\n\\t/* ##################################################################\\n                                STRUCTS\\n    ################################################################## */\\n\\t/**\\n\\t * @dev Struct representing transaction metadata.\\n\\t * @param identifier The identifier of the transaction.\\n\\t * @param institution The institution of the transaction.\\n\\t * @param name The name of the transaction.\\n\\t * @param currency The currency of the transaction.\\n\\t * @param liquidityProviderID The ID of the liquidity provider.\\n\\t */\\n\\tstruct TransactionMetadata {\\n\\t\\tbytes8 identifier;\\n\\t\\tbytes8 institution;\\n\\t\\tbytes8 name;\\n\\t\\tbytes8 currency;\\n\\t\\tuint256 liquidityProviderID;\\n\\t}\\n\\n\\t/**\\n\\t * @dev Struct representing an order.\\n\\t * @param sender The address of the sender.\\n\\t * @param token The address of the token.\\n\\t * @param senderFeeRecipient The address of the sender fee recipient.\\n\\t * @param senderFee The fee to be paid to the sender fee recipient.\\n\\t * @param protocolFee The protocol fee to be paid.\\n\\t * @param isFulfilled Whether the order is fulfilled.\\n\\t * @param isRefunded Whether the order is refunded.\\n\\t * @param refundAddress The address to which the refund is made.\\n\\t * @param currentBPS The current basis points.\\n\\t * @param amount The amount of the order.\\n\\t */\\n\\tstruct Order {\\n\\t\\taddress sender;\\n\\t\\taddress token;\\n\\t\\taddress senderFeeRecipient;\\n\\t\\tuint256 senderFee;\\n\\t\\tuint256 protocolFee;\\n\\t\\tbool isFulfilled;\\n\\t\\tbool isRefunded;\\n\\t\\taddress refundAddress;\\n\\t\\tuint96 currentBPS;\\n\\t\\tuint256 amount;\\n\\t}\\n\\n\\t/* ##################################################################\\n                                EXTERNAL CALLS\\n    ################################################################## */\\n\\t/**\\n\\t * @notice Locks the sender's amount of token into Gateway.\\n\\t * @dev Requirements:\\n\\t * - `msg.sender` must approve Gateway contract on `_token` of at least `amount` before function call.\\n\\t * - `_token` must be an acceptable token. See {isTokenSupported}.\\n\\t * - `amount` must be greater than minimum.\\n\\t * - `_refundAddress` refund address must not be zero address.\\n\\t * @param _token The address of the token.\\n\\t * @param _amount The amount in the decimal of `_token` to be locked.\\n\\t * @param _institutionCode The institution code of the sender.\\n\\t * @param _rate The rate at which the sender intends to sell `_amount` of `_token`.\\n\\t * @param _senderFeeRecipient The address that will receive `_senderFee` in `_token`.\\n\\t * @param _senderFee The amount in the decimal of `_token` that will be paid to `_senderFeeRecipient`.\\n\\t * @param _refundAddress The address that will receive `_amount` in `_token` when there is a need to refund.\\n\\t * @param messageHash The hash of the message.\\n\\t * @return _orderId The ID of the order.\\n\\t */\\n\\tfunction createOrder(\\n\\t\\taddress _token,\\n\\t\\tuint256 _amount,\\n\\t\\tbytes32 _institutionCode,\\n\\t\\tuint96 _rate,\\n\\t\\taddress _senderFeeRecipient,\\n\\t\\tuint256 _senderFee,\\n\\t\\taddress _refundAddress,\\n\\t\\tstring calldata messageHash\\n\\t) external returns (bytes32 _orderId);\\n\\n\\t/**\\n\\t * @notice Settles a transaction and distributes rewards accordingly.\\n\\t * @param _splitOrderId The ID of the split order.\\n\\t * @param _orderId The ID of the transaction.\\n\\t * @param _liquidityProvider The address of the liquidity provider.\\n\\t * @param _settlePercent The rate at which the transaction is settled.\\n\\t * @return bool the settlement is successful.\\n\\t */\\n\\tfunction settle(\\n\\t\\tbytes32 _splitOrderId,\\n\\t\\tbytes32 _orderId,\\n\\t\\taddress _liquidityProvider,\\n\\t\\tuint64 _settlePercent\\n\\t) external returns (bool);\\n\\n\\t/**\\n\\t * @notice Refunds to the specified refundable address.\\n\\t * @dev Requirements:\\n\\t * - Only aggregators can call this function.\\n\\t * @param _fee The amount to be deducted from the amount to be refunded.\\n\\t * @param _orderId The ID of the transaction.\\n\\t * @return bool the refund is successful.\\n\\t */\\n\\tfunction refund(uint256 _fee, bytes32 _orderId) external returns (bool);\\n\\n\\t/**\\n\\t * @notice Checks if a token is supported by Gateway.\\n\\t * @param _token The address of the token to check.\\n\\t * @return bool the token is supported.\\n\\t */\\n\\tfunction isTokenSupported(address _token) external view returns (bool);\\n\\n\\t/**\\n\\t * @notice Gets the details of an order.\\n\\t * @param _orderId The ID of the order.\\n\\t * @return Order The order details.\\n\\t */\\n\\tfunction getOrderInfo(bytes32 _orderId) external view returns (Order memory);\\n\\n\\t/**\\n\\t * @notice Gets the fee details of Gateway.\\n\\t * @return protocolReward The protocol reward amount.\\n\\t * @return max_bps The maximum basis points.\\n\\t */\\n\\tfunction getFeeDetails() external view returns (uint64 protocolReward, uint256 max_bps);\\n\\n\\t/**\\n\\t * @notice Gets the details of a supported institution by code.\\n\\t * @param _code The institution code.\\n\\t * @return InstitutionByCode The institution details.\\n\\t */\\n\\tfunction getSupportedInstitutionByCode(\\n\\t\\tbytes32 _code\\n\\t) external view returns (SharedStructs.InstitutionByCode memory);\\n\\n\\t/**\\n\\t * @notice Gets the details of supported institutions by currency.\\n\\t * @param _currency The currency code.\\n\\t * @return Institutions An array of institutions.\\n\\t */\\n\\tfunction getSupportedInstitutions(\\n\\t\\tbytes32 _currency\\n\\t) external view returns (SharedStructs.Institution[] memory);\\n}\\n\",\"keccak256\":\"0x77ba391c63b01a9fd7bf719379efe762a15566708694c52f62dcb4731d3f4821\",\"license\":\"UNLICENSED\"},\"contracts/libraries/SharedStructs.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.18;\\n\\nlibrary SharedStructs {\\n    /**\\n     * @dev Struct representing an institution.\\n     * @param code The code of the institution.\\n     * @param name The name of the institution.\\n     */\\n    struct Institution {\\n        bytes32 code;\\n        bytes32 name;\\n    }\\n\\n    /**\\n     * @dev Struct representing an institution by code.\\n     * @param name The name of the institution.\\n     * @param currency The currency of the institution.\\n     */\\n    struct InstitutionByCode {\\n        bytes32 name;\\n        bytes32 currency;\\n    }\\n}\",\"keccak256\":\"0x6c50c51961ec2a2740e0f3cbfc2bdb7b80a5c728dec92ebb98d84893ac8adb5a\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[{"astId":246,"contract":"contracts/Gateway.sol:Gateway","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":249,"contract":"contracts/Gateway.sol:Gateway","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":916,"contract":"contracts/Gateway.sol:Gateway","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":118,"contract":"contracts/Gateway.sol:Gateway","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":238,"contract":"contracts/Gateway.sol:Gateway","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":11,"contract":"contracts/Gateway.sol:Gateway","label":"_pendingOwner","offset":0,"slot":"101","type":"t_address"},{"astId":105,"contract":"contracts/Gateway.sol:Gateway","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"},{"astId":1618,"contract":"contracts/Gateway.sol:Gateway","label":"MAX_BPS","offset":0,"slot":"151","type":"t_uint256"},{"astId":1620,"contract":"contracts/Gateway.sol:Gateway","label":"protocolFeePercent","offset":0,"slot":"152","type":"t_uint64"},{"astId":1622,"contract":"contracts/Gateway.sol:Gateway","label":"treasuryAddress","offset":8,"slot":"152","type":"t_address"},{"astId":1624,"contract":"contracts/Gateway.sol:Gateway","label":"_aggregatorAddress","offset":0,"slot":"153","type":"t_address"},{"astId":1628,"contract":"contracts/Gateway.sol:Gateway","label":"__gap","offset":0,"slot":"154","type":"t_array(t_uint256)50_storage"},{"astId":1632,"contract":"contracts/Gateway.sol:Gateway","label":"_isTokenSupported","offset":0,"slot":"204","type":"t_mapping(t_address,t_uint256)"},{"astId":1638,"contract":"contracts/Gateway.sol:Gateway","label":"supportedInstitutions","offset":0,"slot":"205","type":"t_mapping(t_bytes32,t_array(t_struct(Institution)2058_storage)dyn_storage)"},{"astId":1643,"contract":"contracts/Gateway.sol:Gateway","label":"supportedInstitutionsByCode","offset":0,"slot":"206","type":"t_mapping(t_bytes32,t_struct(InstitutionByCode)2063_storage)"},{"astId":430,"contract":"contracts/Gateway.sol:Gateway","label":"_paused","offset":0,"slot":"207","type":"t_bool"},{"astId":535,"contract":"contracts/Gateway.sol:Gateway","label":"__gap","offset":0,"slot":"208","type":"t_array(t_uint256)49_storage"},{"astId":1022,"contract":"contracts/Gateway.sol:Gateway","label":"order","offset":0,"slot":"257","type":"t_mapping(t_bytes32,t_struct(Order)1960_storage)"},{"astId":1026,"contract":"contracts/Gateway.sol:Gateway","label":"_nonce","offset":0,"slot":"258","type":"t_mapping(t_address,t_uint256)"},{"astId":1030,"contract":"contracts/Gateway.sol:Gateway","label":"__gap","offset":0,"slot":"259","type":"t_array(t_uint256)50_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(Institution)2058_storage)dyn_storage":{"base":"t_struct(Institution)2058_storage","encoding":"dynamic_array","label":"struct SharedStructs.Institution[]","numberOfBytes":"32"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_array(t_struct(Institution)2058_storage)dyn_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct SharedStructs.Institution[])","numberOfBytes":"32","value":"t_array(t_struct(Institution)2058_storage)dyn_storage"},"t_mapping(t_bytes32,t_struct(InstitutionByCode)2063_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct SharedStructs.InstitutionByCode)","numberOfBytes":"32","value":"t_struct(InstitutionByCode)2063_storage"},"t_mapping(t_bytes32,t_struct(Order)1960_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct IGateway.Order)","numberOfBytes":"32","value":"t_struct(Order)1960_storage"},"t_struct(Institution)2058_storage":{"encoding":"inplace","label":"struct SharedStructs.Institution","members":[{"astId":2055,"contract":"contracts/Gateway.sol:Gateway","label":"code","offset":0,"slot":"0","type":"t_bytes32"},{"astId":2057,"contract":"contracts/Gateway.sol:Gateway","label":"name","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_struct(InstitutionByCode)2063_storage":{"encoding":"inplace","label":"struct SharedStructs.InstitutionByCode","members":[{"astId":2060,"contract":"contracts/Gateway.sol:Gateway","label":"name","offset":0,"slot":"0","type":"t_bytes32"},{"astId":2062,"contract":"contracts/Gateway.sol:Gateway","label":"currency","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_struct(Order)1960_storage":{"encoding":"inplace","label":"struct IGateway.Order","members":[{"astId":1941,"contract":"contracts/Gateway.sol:Gateway","label":"sender","offset":0,"slot":"0","type":"t_address"},{"astId":1943,"contract":"contracts/Gateway.sol:Gateway","label":"token","offset":0,"slot":"1","type":"t_address"},{"astId":1945,"contract":"contracts/Gateway.sol:Gateway","label":"senderFeeRecipient","offset":0,"slot":"2","type":"t_address"},{"astId":1947,"contract":"contracts/Gateway.sol:Gateway","label":"senderFee","offset":0,"slot":"3","type":"t_uint256"},{"astId":1949,"contract":"contracts/Gateway.sol:Gateway","label":"protocolFee","offset":0,"slot":"4","type":"t_uint256"},{"astId":1951,"contract":"contracts/Gateway.sol:Gateway","label":"isFulfilled","offset":0,"slot":"5","type":"t_bool"},{"astId":1953,"contract":"contracts/Gateway.sol:Gateway","label":"isRefunded","offset":1,"slot":"5","type":"t_bool"},{"astId":1955,"contract":"contracts/Gateway.sol:Gateway","label":"refundAddress","offset":2,"slot":"5","type":"t_address"},{"astId":1957,"contract":"contracts/Gateway.sol:Gateway","label":"currentBPS","offset":0,"slot":"6","type":"t_uint96"},{"astId":1959,"contract":"contracts/Gateway.sol:Gateway","label":"amount","offset":0,"slot":"7","type":"t_uint256"}],"numberOfBytes":"256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"},"t_uint96":{"encoding":"inplace","label":"uint96","numberOfBytes":"12"}}},"userdoc":{"kind":"user","methods":{},"notice":"This contract serves as a gateway for creating orders and managing settlements.","version":1}}},"contracts/GatewaySettingManager.sol":{"GatewaySettingManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"what","type":"bytes32"},{"indexed":true,"internalType":"address","name":"treasuryAddress","type":"address"}],"name":"ProtocolAddressUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"protocolFee","type":"uint64"}],"name":"ProtocolFeeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"treasuryAddress","type":"address"}],"name":"SetFeeRecipient","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"what","type":"bytes32"},{"indexed":true,"internalType":"address","name":"value","type":"address"},{"indexed":false,"internalType":"uint256","name":"status","type":"uint256"}],"name":"SettingManagerBool","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"currency","type":"bytes32"},{"components":[{"internalType":"bytes32","name":"code","type":"bytes32"},{"internalType":"bytes32","name":"name","type":"bytes32"}],"indexed":false,"internalType":"struct SharedStructs.Institution[]","name":"institutions","type":"tuple[]"}],"name":"SupportedInstitutionsUpdated","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"currency","type":"bytes32"},{"components":[{"internalType":"bytes32","name":"code","type":"bytes32"},{"internalType":"bytes32","name":"name","type":"bytes32"}],"internalType":"struct SharedStructs.Institution[]","name":"institutions","type":"tuple[]"}],"name":"setSupportedInstitutions","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"address","name":"value","type":"address"},{"internalType":"uint256","name":"status","type":"uint256"}],"name":"settingManagerBool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"address","name":"value","type":"address"}],"name":"updateProtocolAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_protocolFeePercent","type":"uint64"}],"name":"updateProtocolFee","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"acceptOwnership()":{"details":"The new owner accepts the ownership transfer."},"owner()":{"details":"Returns the address of the current owner."},"pendingOwner()":{"details":"Returns the address of the pending owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setSupportedInstitutions(bytes32,(bytes32,bytes32)[])":{"details":"Sets the supported institutions for a specific currency.","params":{"currency":"The currency for which the institutions are being set.","institutions":"The array of institutions to be set."}},"settingManagerBool(bytes32,address,uint256)":{"details":"Sets the boolean value for a specific setting.","params":{"status":"The boolean value to be set. Requirements: - The value must not be a zero address.","value":"The address or value associated with the setting.","what":"The setting to be updated."}},"transferOwnership(address)":{"details":"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."},"updateProtocolAddress(bytes32,address)":{"details":"Updates a protocol address.","params":{"value":"The new address to be set. Requirements: - The value must not be a zero address.","what":"The address type to be updated (treasury or aggregator)."}},"updateProtocolFee(uint64)":{"details":"Updates the protocol fee percentage.","params":{"_protocolFeePercent":"The new protocol fee percentage to be set."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061146a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806379ba50971161006657806379ba5097146100f65780638da5cb5b14610100578063cd9924001461011e578063e30c39781461013a578063f2fde38b1461015857610093565b8063322008821461009857806340ebc677146100b457806347094e2e146100d0578063715018a6146100ec575b600080fd5b6100b260048036038101906100ad9190610d03565b610174565b005b6100ce60048036038101906100c99190610dbd565b6102e9565b005b6100ea60048036038101906100e59190610e3d565b6105b1565b005b6100f461061c565b005b6100fe610630565b005b6101086106bd565b6040516101159190610e79565b60405180910390f35b61013860048036038101906101339190610eca565b6106e7565b005b61014261086c565b60405161014f9190610e79565b60405180910390f35b610172600480360381019061016d9190610f1d565b610896565b005b61017c610943565b60cd6000838152602001908152602001600020600061019b9190610ac0565b60005b815181101561029a5760cd60008481526020019081526020016000208282815181106101cd576101cc610f4a565b5b6020026020010151908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000155602082015181600101555050604051806040016040528083838151811061023257610231610f4a565b5b60200260200101516020015181526020018481525060ce600084848151811061025e5761025d610f4a565b5b6020026020010151600001518152602001908152602001600020600082015181600001556020820151816001015590505080600101905061019e565b50817f58f3a30ec15a8d3e09fa65f9ef10219bc7a9a99d872a4ed895c37c2e761ac2ac60cd60008581526020019081526020016000206040516102dd91906110b3565b60405180910390a25050565b6102f1610943565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610360576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035790611132565b60405180910390fd5b60007f74726561737572790000000000000000000000000000000000000000000000008303610463578173ffffffffffffffffffffffffffffffffffffffff16609860089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610419576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610410906111c4565b60405180910390fd5b81609860086101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050610561565b7f61676772656761746f72000000000000000000000000000000000000000000008303610560578173ffffffffffffffffffffffffffffffffffffffff16609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361051a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051190611256565b60405180910390fd5b81609960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190505b5b80156105ac578173ffffffffffffffffffffffffffffffffffffffff16837fbbc5b96e57cfecb3dbeeadf92e87f15e58e64fcd75cbe256dcc5d9ef2e51e8a460405160405180910390a35b505050565b6105b9610943565b80609860006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507f1ce29a697a4765bd17d91df93ba75b250b629ecf030553ff1f6ab59f15ae6c7b816040516106119190611285565b60405180910390a150565b610624610943565b61062e60006109c1565b565b600061063a6109f2565b90508073ffffffffffffffffffffffffffffffffffffffff1661065b61086c565b73ffffffffffffffffffffffffffffffffffffffff16146106b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a890611312565b60405180910390fd5b6106ba816109c1565b50565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106ef610943565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361075e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075590611132565b60405180910390fd5b600181148061076d5750600281145b6107ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a39061137e565b60405180910390fd5b7f746f6b656e0000000000000000000000000000000000000000000000000000008303610867578060cc60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16837fcfa976492af7c14a916cc3a239f4c9c75bbd7f5f0e398beb41d892c7eeccae4c8360405161085e91906113ad565b60405180910390a35b505050565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61089e610943565b80606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff166108fe6106bd565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b61094b6109f2565b73ffffffffffffffffffffffffffffffffffffffff166109696106bd565b73ffffffffffffffffffffffffffffffffffffffff16146109bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b690611414565b60405180910390fd5b565b606560006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556109ef816109fa565b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5080546000825560020290600052602060002090810190610ae19190610ae4565b50565b5b80821115610b0757600080820160009055600182016000905550600201610ae5565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610b3281610b1f565b8114610b3d57600080fd5b50565b600081359050610b4f81610b29565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610ba382610b5a565b810181811067ffffffffffffffff82111715610bc257610bc1610b6b565b5b80604052505050565b6000610bd5610b0b565b9050610be18282610b9a565b919050565b600067ffffffffffffffff821115610c0157610c00610b6b565b5b602082029050602081019050919050565b600080fd5b600080fd5b600060408284031215610c3257610c31610c17565b5b610c3c6040610bcb565b90506000610c4c84828501610b40565b6000830152506020610c6084828501610b40565b60208301525092915050565b6000610c7f610c7a84610be6565b610bcb565b90508083825260208201905060408402830185811115610ca257610ca1610c12565b5b835b81811015610ccb5780610cb78882610c1c565b845260208401935050604081019050610ca4565b5050509392505050565b600082601f830112610cea57610ce9610b55565b5b8135610cfa848260208601610c6c565b91505092915050565b60008060408385031215610d1a57610d19610b15565b5b6000610d2885828601610b40565b925050602083013567ffffffffffffffff811115610d4957610d48610b1a565b5b610d5585828601610cd5565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d8a82610d5f565b9050919050565b610d9a81610d7f565b8114610da557600080fd5b50565b600081359050610db781610d91565b92915050565b60008060408385031215610dd457610dd3610b15565b5b6000610de285828601610b40565b9250506020610df385828601610da8565b9150509250929050565b600067ffffffffffffffff82169050919050565b610e1a81610dfd565b8114610e2557600080fd5b50565b600081359050610e3781610e11565b92915050565b600060208284031215610e5357610e52610b15565b5b6000610e6184828501610e28565b91505092915050565b610e7381610d7f565b82525050565b6000602082019050610e8e6000830184610e6a565b92915050565b6000819050919050565b610ea781610e94565b8114610eb257600080fd5b50565b600081359050610ec481610e9e565b92915050565b600080600060608486031215610ee357610ee2610b15565b5b6000610ef186828701610b40565b9350506020610f0286828701610da8565b9250506040610f1386828701610eb5565b9150509250925092565b600060208284031215610f3357610f32610b15565b5b6000610f4184828501610da8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081549050919050565b600082825260208201905092915050565b60008190508160005260206000209050919050565b60008160001c9050919050565b6000819050919050565b6000610fd4610fcf83610faa565b610fb7565b9050919050565b610fe481610b1f565b82525050565b604082016000808301549050610fff81610fc1565b61100c6000860182610fdb565b506001830154905061101d81610fc1565b61102a6020860182610fdb565b5050505050565b600061103d8383610fea565b60408301905092915050565b6000600282019050919050565b600061106182610f79565b61106b8185610f84565b935061107683610f95565b8060005b838110156110a6578161108d8882611031565b975061109883611049565b92505060018101905061107a565b5085935050505092915050565b600060208201905081810360008301526110cd8184611056565b905092915050565b600082825260208201905092915050565b7f476174657761793a207a65726f20616464726573730000000000000000000000600082015250565b600061111c6015836110d5565b9150611127826110e6565b602082019050919050565b6000602082019050818103600083015261114b8161110f565b9050919050565b7f476174657761793a207472656173757279206164647265737320616c7265616460008201527f7920736574000000000000000000000000000000000000000000000000000000602082015250565b60006111ae6025836110d5565b91506111b982611152565b604082019050919050565b600060208201905081810360008301526111dd816111a1565b9050919050565b7f476174657761793a2061676772656761746f72206164647265737320616c726560008201527f6164792073657400000000000000000000000000000000000000000000000000602082015250565b60006112406027836110d5565b915061124b826111e4565b604082019050919050565b6000602082019050818103600083015261126f81611233565b9050919050565b61127f81610dfd565b82525050565b600060208201905061129a6000830184611276565b92915050565b7f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060008201527f6e6577206f776e65720000000000000000000000000000000000000000000000602082015250565b60006112fc6029836110d5565b9150611307826112a0565b604082019050919050565b6000602082019050818103600083015261132b816112ef565b9050919050565b7f476174657761793a20696e76616c696420737461747573000000000000000000600082015250565b60006113686017836110d5565b915061137382611332565b602082019050919050565b600060208201905081810360008301526113978161135b565b9050919050565b6113a781610e94565b82525050565b60006020820190506113c2600083018461139e565b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006113fe6020836110d5565b9150611409826113c8565b602082019050919050565b6000602082019050818103600083015261142d816113f1565b905091905056fea2646970667358221220a5cf2406f8bb007a45008610cf8baf05dde6f3dbf02727307f944766ecf3cbe164736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x146A DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xCD992400 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x158 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x32200882 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x40EBC677 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x47094E2E EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xD03 JUMP JUMPDEST PUSH2 0x174 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x2E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0xE3D JUMP JUMPDEST PUSH2 0x5B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF4 PUSH2 0x61C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFE PUSH2 0x630 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x108 PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x142 PUSH2 0x86C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xF1D JUMP JUMPDEST PUSH2 0x896 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17C PUSH2 0x943 JUMP JUMPDEST PUSH1 0xCD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x19B SWAP2 SWAP1 PUSH2 0xAC0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x29A JUMPI PUSH1 0xCD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1CD JUMPI PUSH2 0x1CC PUSH2 0xF4A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x232 JUMPI PUSH2 0x231 PUSH2 0xF4A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0xCE PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x25E JUMPI PUSH2 0x25D PUSH2 0xF4A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x19E JUMP JUMPDEST POP DUP2 PUSH32 0x58F3A30EC15A8D3E09FA65F9EF10219BC7A9A99D872A4ED895C37C2E761AC2AC PUSH1 0xCD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x10B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x2F1 PUSH2 0x943 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x360 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x357 SWAP1 PUSH2 0x1132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x7472656173757279000000000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x463 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x98 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x419 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x410 SWAP1 PUSH2 0x11C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x98 PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x561 JUMP JUMPDEST PUSH32 0x61676772656761746F7200000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x560 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x51A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x511 SWAP1 PUSH2 0x1256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x99 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST DUP1 ISZERO PUSH2 0x5AC JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xBBC5B96E57CFECB3DBEEADF92E87F15E58E64FCD75CBE256DCC5D9EF2E51E8A4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5B9 PUSH2 0x943 JUMP JUMPDEST DUP1 PUSH1 0x98 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x1CE29A697A4765BD17D91DF93BA75B250B629ECF030553FF1F6AB59F15AE6C7B DUP2 PUSH1 0x40 MLOAD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x1285 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x624 PUSH2 0x943 JUMP JUMPDEST PUSH2 0x62E PUSH1 0x0 PUSH2 0x9C1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x63A PUSH2 0x9F2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x65B PUSH2 0x86C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A8 SWAP1 PUSH2 0x1312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6BA DUP2 PUSH2 0x9C1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6EF PUSH2 0x943 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x75E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x755 SWAP1 PUSH2 0x1132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 EQ DUP1 PUSH2 0x76D JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST PUSH2 0x7AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A3 SWAP1 PUSH2 0x137E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x746F6B656E000000000000000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x867 JUMPI DUP1 PUSH1 0xCC PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xCFA976492AF7C14A916CC3A239F4C9C75BBD7F5F0E398BEB41D892C7EECCAE4C DUP4 PUSH1 0x40 MLOAD PUSH2 0x85E SWAP2 SWAP1 PUSH2 0x13AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x89E PUSH2 0x943 JUMP JUMPDEST DUP1 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FE PUSH2 0x6BD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x94B PUSH2 0x9F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x969 PUSH2 0x6BD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B6 SWAP1 PUSH2 0x1414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x9EF DUP2 PUSH2 0x9FA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE PUSH1 0x2 MUL SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xAE1 SWAP2 SWAP1 PUSH2 0xAE4 JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xB07 JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x2 ADD PUSH2 0xAE5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB32 DUP2 PUSH2 0xB1F JUMP JUMPDEST DUP2 EQ PUSH2 0xB3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB4F DUP2 PUSH2 0xB29 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xBA3 DUP3 PUSH2 0xB5A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xBC2 JUMPI PUSH2 0xBC1 PUSH2 0xB6B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD5 PUSH2 0xB0B JUMP JUMPDEST SWAP1 POP PUSH2 0xBE1 DUP3 DUP3 PUSH2 0xB9A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC01 JUMPI PUSH2 0xC00 PUSH2 0xB6B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC32 JUMPI PUSH2 0xC31 PUSH2 0xC17 JUMP JUMPDEST JUMPDEST PUSH2 0xC3C PUSH1 0x40 PUSH2 0xBCB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC4C DUP5 DUP3 DUP6 ADD PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xC60 DUP5 DUP3 DUP6 ADD PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC7F PUSH2 0xC7A DUP5 PUSH2 0xBE6 JUMP JUMPDEST PUSH2 0xBCB JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x40 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xCA2 JUMPI PUSH2 0xCA1 PUSH2 0xC12 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCCB JUMPI DUP1 PUSH2 0xCB7 DUP9 DUP3 PUSH2 0xC1C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x40 DUP2 ADD SWAP1 POP PUSH2 0xCA4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCEA JUMPI PUSH2 0xCE9 PUSH2 0xB55 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCFA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xC6C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD1A JUMPI PUSH2 0xD19 PUSH2 0xB15 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD28 DUP6 DUP3 DUP7 ADD PUSH2 0xB40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD49 JUMPI PUSH2 0xD48 PUSH2 0xB1A JUMP JUMPDEST JUMPDEST PUSH2 0xD55 DUP6 DUP3 DUP7 ADD PUSH2 0xCD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD8A DUP3 PUSH2 0xD5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD9A DUP2 PUSH2 0xD7F JUMP JUMPDEST DUP2 EQ PUSH2 0xDA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDB7 DUP2 PUSH2 0xD91 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDD4 JUMPI PUSH2 0xDD3 PUSH2 0xB15 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDE2 DUP6 DUP3 DUP7 ADD PUSH2 0xB40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDF3 DUP6 DUP3 DUP7 ADD PUSH2 0xDA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE1A DUP2 PUSH2 0xDFD JUMP JUMPDEST DUP2 EQ PUSH2 0xE25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE37 DUP2 PUSH2 0xE11 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE53 JUMPI PUSH2 0xE52 PUSH2 0xB15 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE61 DUP5 DUP3 DUP6 ADD PUSH2 0xE28 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE73 DUP2 PUSH2 0xD7F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE8E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEA7 DUP2 PUSH2 0xE94 JUMP JUMPDEST DUP2 EQ PUSH2 0xEB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEC4 DUP2 PUSH2 0xE9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEE3 JUMPI PUSH2 0xEE2 PUSH2 0xB15 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEF1 DUP7 DUP3 DUP8 ADD PUSH2 0xB40 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF02 DUP7 DUP3 DUP8 ADD PUSH2 0xDA8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF13 DUP7 DUP3 DUP8 ADD PUSH2 0xEB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF33 JUMPI PUSH2 0xF32 PUSH2 0xB15 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF41 DUP5 DUP3 DUP6 ADD PUSH2 0xDA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD4 PUSH2 0xFCF DUP4 PUSH2 0xFAA JUMP JUMPDEST PUSH2 0xFB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFE4 DUP2 PUSH2 0xB1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP1 DUP4 ADD SLOAD SWAP1 POP PUSH2 0xFFF DUP2 PUSH2 0xFC1 JUMP JUMPDEST PUSH2 0x100C PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0xFDB JUMP JUMPDEST POP PUSH1 0x1 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x101D DUP2 PUSH2 0xFC1 JUMP JUMPDEST PUSH2 0x102A PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0xFDB JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x103D DUP4 DUP4 PUSH2 0xFEA JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1061 DUP3 PUSH2 0xF79 JUMP JUMPDEST PUSH2 0x106B DUP2 DUP6 PUSH2 0xF84 JUMP JUMPDEST SWAP4 POP PUSH2 0x1076 DUP4 PUSH2 0xF95 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10A6 JUMPI DUP2 PUSH2 0x108D DUP9 DUP3 PUSH2 0x1031 JUMP JUMPDEST SWAP8 POP PUSH2 0x1098 DUP4 PUSH2 0x1049 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x107A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CD DUP2 DUP5 PUSH2 0x1056 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x476174657761793A207A65726F20616464726573730000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x111C PUSH1 0x15 DUP4 PUSH2 0x10D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1127 DUP3 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x114B DUP2 PUSH2 0x110F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A207472656173757279206164647265737320616C72656164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7920736574000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11AE PUSH1 0x25 DUP4 PUSH2 0x10D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x11B9 DUP3 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11DD DUP2 PUSH2 0x11A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A2061676772656761746F72206164647265737320616C7265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6164792073657400000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1240 PUSH1 0x27 DUP4 PUSH2 0x10D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x124B DUP3 PUSH2 0x11E4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x126F DUP2 PUSH2 0x1233 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x127F DUP2 PUSH2 0xDFD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x129A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1276 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6577206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12FC PUSH1 0x29 DUP4 PUSH2 0x10D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1307 DUP3 PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x132B DUP2 PUSH2 0x12EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A20696E76616C696420737461747573000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1368 PUSH1 0x17 DUP4 PUSH2 0x10D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1373 DUP3 PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1397 DUP2 PUSH2 0x135B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13A7 DUP2 PUSH2 0xE94 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x139E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13FE PUSH1 0x20 DUP4 PUSH2 0x10D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1409 DUP3 PUSH2 0x13C8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x142D DUP2 PUSH2 0x13F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xCF 0x24 MOD 0xF8 0xBB STOP PUSH27 0x45008610CF8BAF05DDE6F3DBF02727307F944766ECF3CBE164736F PUSH13 0x63430008120033000000000000 ","sourceMap":"338:3609:8:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_176":{"entryPoint":2371,"id":176,"parameterSlots":0,"returnSlots":0},"@_msgSender_894":{"entryPoint":2546,"id":894,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_233":{"entryPoint":2554,"id":233,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_78":{"entryPoint":2497,"id":78,"parameterSlots":1,"returnSlots":0},"@acceptOwnership_100":{"entryPoint":1584,"id":100,"parameterSlots":0,"returnSlots":0},"@owner_162":{"entryPoint":1725,"id":162,"parameterSlots":0,"returnSlots":1},"@pendingOwner_41":{"entryPoint":2156,"id":41,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_190":{"entryPoint":1564,"id":190,"parameterSlots":0,"returnSlots":0},"@setSupportedInstitutions_1787":{"entryPoint":372,"id":1787,"parameterSlots":2,"returnSlots":0},"@settingManagerBool_1724":{"entryPoint":1767,"id":1724,"parameterSlots":3,"returnSlots":0},"@transferOwnership_61":{"entryPoint":2198,"id":61,"parameterSlots":1,"returnSlots":0},"@updateProtocolAddress_1876":{"entryPoint":745,"id":1876,"parameterSlots":2,"returnSlots":0},"@updateProtocolFee_1804":{"entryPoint":1457,"id":1804,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr":{"entryPoint":3180,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3496,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr":{"entryPoint":3285,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":2880,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_Institution_$2058_memory_ptr":{"entryPoint":3100,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3765,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64":{"entryPoint":3624,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3869,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":3517,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_addresst_uint256":{"entryPoint":3786,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes32t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr":{"entryPoint":3331,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint64":{"entryPoint":3645,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_struct$_Institution_$2058_storage_to_t_struct$_Institution_$2058_memory_ptr":{"entryPoint":4145,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3690,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage_to_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":4182,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes32_to_t_bytes32":{"entryPoint":4059,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack":{"entryPoint":4367,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack":{"entryPoint":4847,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack":{"entryPoint":4955,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":5105,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack":{"entryPoint":4513,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack":{"entryPoint":4659,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Institution_$2058_storage_to_t_struct$_Institution_$2058_memory_ptr":{"entryPoint":4074,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5022,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":4726,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3705,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage__to_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":4275,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4402,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4882,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4990,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5140,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4548,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4694,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5037,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":4741,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":3019,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":2827,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr":{"entryPoint":3046,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage":{"entryPoint":3989,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage":{"entryPoint":3961,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage":{"entryPoint":4169,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":3972,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4309,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_from_storage_t_bytes32":{"entryPoint":4023,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address":{"entryPoint":3455,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2847,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3423,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3732,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":3581,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_0t_bytes32":{"entryPoint":4033,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":2970,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x32":{"entryPoint":3914,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2923,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":2901,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":3095,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":3090,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":2842,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2837,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2906,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":4010,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf":{"entryPoint":4326,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc":{"entryPoint":4768,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338":{"entryPoint":4914,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":5064,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead":{"entryPoint":4434,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4":{"entryPoint":4580,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3473,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":2857,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3742,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":3601,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:19125:11","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:11","statements":[{"nodeType":"YulAssignment","src":"57:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:11"},"nodeType":"YulFunctionCall","src":"67:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:11","type":""}],"src":"7:75:11"},{"body":{"nodeType":"YulBlock","src":"177:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:11"},"nodeType":"YulFunctionCall","src":"187:12:11"},"nodeType":"YulExpressionStatement","src":"187:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:11"},{"body":{"nodeType":"YulBlock","src":"300:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:11"},"nodeType":"YulFunctionCall","src":"310:12:11"},"nodeType":"YulExpressionStatement","src":"310:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:11"},{"body":{"nodeType":"YulBlock","src":"379:32:11","statements":[{"nodeType":"YulAssignment","src":"389:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:11"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:11","type":""}],"src":"334:77:11"},{"body":{"nodeType":"YulBlock","src":"460:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:11"},"nodeType":"YulFunctionCall","src":"519:12:11"},"nodeType":"YulExpressionStatement","src":"519:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:11"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"490:17:11"},"nodeType":"YulFunctionCall","src":"490:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:11"},"nodeType":"YulFunctionCall","src":"480:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:11"},"nodeType":"YulFunctionCall","src":"473:43:11"},"nodeType":"YulIf","src":"470:63:11"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:11","type":""}],"src":"417:122:11"},{"body":{"nodeType":"YulBlock","src":"597:87:11","statements":[{"nodeType":"YulAssignment","src":"607:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"629:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"616:12:11"},"nodeType":"YulFunctionCall","src":"616:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"607:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"672:5:11"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"645:26:11"},"nodeType":"YulFunctionCall","src":"645:33:11"},"nodeType":"YulExpressionStatement","src":"645:33:11"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"575:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"583:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"591:5:11","type":""}],"src":"545:139:11"},{"body":{"nodeType":"YulBlock","src":"779:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"796:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"799:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"789:6:11"},"nodeType":"YulFunctionCall","src":"789:12:11"},"nodeType":"YulExpressionStatement","src":"789:12:11"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"690:117:11"},{"body":{"nodeType":"YulBlock","src":"861:54:11","statements":[{"nodeType":"YulAssignment","src":"871:38:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"889:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"896:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"885:3:11"},"nodeType":"YulFunctionCall","src":"885:14:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"905:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"901:3:11"},"nodeType":"YulFunctionCall","src":"901:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"881:3:11"},"nodeType":"YulFunctionCall","src":"881:28:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"871:6:11"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"844:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"854:6:11","type":""}],"src":"813:102:11"},{"body":{"nodeType":"YulBlock","src":"949:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"966:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"969:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"959:6:11"},"nodeType":"YulFunctionCall","src":"959:88:11"},"nodeType":"YulExpressionStatement","src":"959:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1063:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1066:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1056:6:11"},"nodeType":"YulFunctionCall","src":"1056:15:11"},"nodeType":"YulExpressionStatement","src":"1056:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1087:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1090:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1080:6:11"},"nodeType":"YulFunctionCall","src":"1080:15:11"},"nodeType":"YulExpressionStatement","src":"1080:15:11"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"921:180:11"},{"body":{"nodeType":"YulBlock","src":"1150:238:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1160:58:11","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1182:6:11"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1212:4:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1190:21:11"},"nodeType":"YulFunctionCall","src":"1190:27:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1178:3:11"},"nodeType":"YulFunctionCall","src":"1178:40:11"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1164:10:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1329:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1331:16:11"},"nodeType":"YulFunctionCall","src":"1331:18:11"},"nodeType":"YulExpressionStatement","src":"1331:18:11"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1272:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"1284:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1269:2:11"},"nodeType":"YulFunctionCall","src":"1269:34:11"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1308:10:11"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1320:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1305:2:11"},"nodeType":"YulFunctionCall","src":"1305:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1266:2:11"},"nodeType":"YulFunctionCall","src":"1266:62:11"},"nodeType":"YulIf","src":"1263:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1367:2:11","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1371:10:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1360:6:11"},"nodeType":"YulFunctionCall","src":"1360:22:11"},"nodeType":"YulExpressionStatement","src":"1360:22:11"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1136:6:11","type":""},{"name":"size","nodeType":"YulTypedName","src":"1144:4:11","type":""}],"src":"1107:281:11"},{"body":{"nodeType":"YulBlock","src":"1435:88:11","statements":[{"nodeType":"YulAssignment","src":"1445:30:11","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1455:18:11"},"nodeType":"YulFunctionCall","src":"1455:20:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1445:6:11"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1504:6:11"},{"name":"size","nodeType":"YulIdentifier","src":"1512:4:11"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1484:19:11"},"nodeType":"YulFunctionCall","src":"1484:33:11"},"nodeType":"YulExpressionStatement","src":"1484:33:11"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1419:4:11","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1428:6:11","type":""}],"src":"1394:129:11"},{"body":{"nodeType":"YulBlock","src":"1640:229:11","statements":[{"body":{"nodeType":"YulBlock","src":"1745:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1747:16:11"},"nodeType":"YulFunctionCall","src":"1747:18:11"},"nodeType":"YulExpressionStatement","src":"1747:18:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1717:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1725:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1714:2:11"},"nodeType":"YulFunctionCall","src":"1714:30:11"},"nodeType":"YulIf","src":"1711:56:11"},{"nodeType":"YulAssignment","src":"1777:25:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1789:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1797:4:11","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1785:3:11"},"nodeType":"YulFunctionCall","src":"1785:17:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1777:4:11"}]},{"nodeType":"YulAssignment","src":"1839:23:11","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1851:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"1857:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1847:3:11"},"nodeType":"YulFunctionCall","src":"1847:15:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1839:4:11"}]}]},"name":"array_allocation_size_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1624:6:11","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1635:4:11","type":""}],"src":"1529:340:11"},{"body":{"nodeType":"YulBlock","src":"1964:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1981:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1984:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1974:6:11"},"nodeType":"YulFunctionCall","src":"1974:12:11"},"nodeType":"YulExpressionStatement","src":"1974:12:11"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"1875:117:11"},{"body":{"nodeType":"YulBlock","src":"2087:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2104:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2107:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2097:6:11"},"nodeType":"YulFunctionCall","src":"2097:12:11"},"nodeType":"YulExpressionStatement","src":"2097:12:11"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"1998:117:11"},{"body":{"nodeType":"YulBlock","src":"2210:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2227:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2230:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2220:6:11"},"nodeType":"YulFunctionCall","src":"2220:12:11"},"nodeType":"YulExpressionStatement","src":"2220:12:11"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"2121:117:11"},{"body":{"nodeType":"YulBlock","src":"2368:494:11","statements":[{"body":{"nodeType":"YulBlock","src":"2412:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"2414:77:11"},"nodeType":"YulFunctionCall","src":"2414:79:11"},"nodeType":"YulExpressionStatement","src":"2414:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"2389:3:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2394:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2385:3:11"},"nodeType":"YulFunctionCall","src":"2385:19:11"},{"kind":"number","nodeType":"YulLiteral","src":"2406:4:11","type":"","value":"0x40"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2381:3:11"},"nodeType":"YulFunctionCall","src":"2381:30:11"},"nodeType":"YulIf","src":"2378:117:11"},{"nodeType":"YulAssignment","src":"2504:30:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2529:4:11","type":"","value":"0x40"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2513:15:11"},"nodeType":"YulFunctionCall","src":"2513:21:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2504:5:11"}]},{"nodeType":"YulBlock","src":"2544:150:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2579:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2593:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2583:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2619:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"2626:4:11","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2615:3:11"},"nodeType":"YulFunctionCall","src":"2615:16:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2658:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2669:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2654:3:11"},"nodeType":"YulFunctionCall","src":"2654:22:11"},{"name":"end","nodeType":"YulIdentifier","src":"2678:3:11"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"2633:20:11"},"nodeType":"YulFunctionCall","src":"2633:49:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2608:6:11"},"nodeType":"YulFunctionCall","src":"2608:75:11"},"nodeType":"YulExpressionStatement","src":"2608:75:11"}]},{"nodeType":"YulBlock","src":"2704:151:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2739:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2753:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2743:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2780:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"2787:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2776:3:11"},"nodeType":"YulFunctionCall","src":"2776:16:11"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2819:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2830:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2815:3:11"},"nodeType":"YulFunctionCall","src":"2815:22:11"},{"name":"end","nodeType":"YulIdentifier","src":"2839:3:11"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"2794:20:11"},"nodeType":"YulFunctionCall","src":"2794:49:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2769:6:11"},"nodeType":"YulFunctionCall","src":"2769:75:11"},"nodeType":"YulExpressionStatement","src":"2769:75:11"}]}]},"name":"abi_decode_t_struct$_Institution_$2058_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2343:9:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"2354:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2362:5:11","type":""}],"src":"2284:578:11"},{"body":{"nodeType":"YulBlock","src":"3041:666:11","statements":[{"nodeType":"YulAssignment","src":"3051:119:11","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3162:6:11"}],"functionName":{"name":"array_allocation_size_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3076:85:11"},"nodeType":"YulFunctionCall","src":"3076:93:11"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3060:15:11"},"nodeType":"YulFunctionCall","src":"3060:110:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3051:5:11"}]},{"nodeType":"YulVariableDeclaration","src":"3179:16:11","value":{"name":"array","nodeType":"YulIdentifier","src":"3190:5:11"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3183:3:11","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3212:5:11"},{"name":"length","nodeType":"YulIdentifier","src":"3219:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3205:6:11"},"nodeType":"YulFunctionCall","src":"3205:21:11"},"nodeType":"YulExpressionStatement","src":"3205:21:11"},{"nodeType":"YulAssignment","src":"3235:23:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3246:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"3253:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3242:3:11"},"nodeType":"YulFunctionCall","src":"3242:16:11"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3235:3:11"}]},{"nodeType":"YulVariableDeclaration","src":"3268:44:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3286:6:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3298:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"3306:4:11","type":"","value":"0x40"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3294:3:11"},"nodeType":"YulFunctionCall","src":"3294:17:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3282:3:11"},"nodeType":"YulFunctionCall","src":"3282:30:11"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"3272:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3340:103:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"3354:77:11"},"nodeType":"YulFunctionCall","src":"3354:79:11"},"nodeType":"YulExpressionStatement","src":"3354:79:11"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"3327:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"3335:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3324:2:11"},"nodeType":"YulFunctionCall","src":"3324:15:11"},"nodeType":"YulIf","src":"3321:122:11"},{"body":{"nodeType":"YulBlock","src":"3528:173:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3543:21:11","value":{"name":"src","nodeType":"YulIdentifier","src":"3561:3:11"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"3547:10:11","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3585:3:11"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"3640:10:11"},{"name":"end","nodeType":"YulIdentifier","src":"3652:3:11"}],"functionName":{"name":"abi_decode_t_struct$_Institution_$2058_memory_ptr","nodeType":"YulIdentifier","src":"3590:49:11"},"nodeType":"YulFunctionCall","src":"3590:66:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3578:6:11"},"nodeType":"YulFunctionCall","src":"3578:79:11"},"nodeType":"YulExpressionStatement","src":"3578:79:11"},{"nodeType":"YulAssignment","src":"3670:21:11","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3681:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"3686:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3677:3:11"},"nodeType":"YulFunctionCall","src":"3677:14:11"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3670:3:11"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3481:3:11"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"3486:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3478:2:11"},"nodeType":"YulFunctionCall","src":"3478:15:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3494:25:11","statements":[{"nodeType":"YulAssignment","src":"3496:21:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3507:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"3512:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3503:3:11"},"nodeType":"YulFunctionCall","src":"3503:14:11"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3496:3:11"}]}]},"pre":{"nodeType":"YulBlock","src":"3456:21:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3458:17:11","value":{"name":"offset","nodeType":"YulIdentifier","src":"3469:6:11"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"3462:3:11","type":""}]}]},"src":"3452:249:11"}]},"name":"abi_decode_available_length_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3011:6:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"3019:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"3027:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3035:5:11","type":""}],"src":"2910:797:11"},{"body":{"nodeType":"YulBlock","src":"3861:322:11","statements":[{"body":{"nodeType":"YulBlock","src":"3910:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"3912:77:11"},"nodeType":"YulFunctionCall","src":"3912:79:11"},"nodeType":"YulExpressionStatement","src":"3912:79:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3889:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"3897:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3885:3:11"},"nodeType":"YulFunctionCall","src":"3885:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"3904:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3881:3:11"},"nodeType":"YulFunctionCall","src":"3881:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3874:6:11"},"nodeType":"YulFunctionCall","src":"3874:35:11"},"nodeType":"YulIf","src":"3871:122:11"},{"nodeType":"YulVariableDeclaration","src":"4002:34:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4029:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4016:12:11"},"nodeType":"YulFunctionCall","src":"4016:20:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4006:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4045:132:11","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4150:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4158:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4146:3:11"},"nodeType":"YulFunctionCall","src":"4146:17:11"},{"name":"length","nodeType":"YulIdentifier","src":"4165:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"4173:3:11"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4054:91:11"},"nodeType":"YulFunctionCall","src":"4054:123:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4045:5:11"}]}]},"name":"abi_decode_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3839:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"3847:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3855:5:11","type":""}],"src":"3755:428:11"},{"body":{"nodeType":"YulBlock","src":"4326:605:11","statements":[{"body":{"nodeType":"YulBlock","src":"4372:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4374:77:11"},"nodeType":"YulFunctionCall","src":"4374:79:11"},"nodeType":"YulExpressionStatement","src":"4374:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4347:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4356:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4343:3:11"},"nodeType":"YulFunctionCall","src":"4343:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"4368:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4339:3:11"},"nodeType":"YulFunctionCall","src":"4339:32:11"},"nodeType":"YulIf","src":"4336:119:11"},{"nodeType":"YulBlock","src":"4465:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4480:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4494:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4484:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4509:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4544:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4555:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4540:3:11"},"nodeType":"YulFunctionCall","src":"4540:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4564:7:11"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"4519:20:11"},"nodeType":"YulFunctionCall","src":"4519:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4509:6:11"}]}]},{"nodeType":"YulBlock","src":"4592:332:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4607:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4638:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4649:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4634:3:11"},"nodeType":"YulFunctionCall","src":"4634:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4621:12:11"},"nodeType":"YulFunctionCall","src":"4621:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4611:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"4700:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4702:77:11"},"nodeType":"YulFunctionCall","src":"4702:79:11"},"nodeType":"YulExpressionStatement","src":"4702:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4672:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4680:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4669:2:11"},"nodeType":"YulFunctionCall","src":"4669:30:11"},"nodeType":"YulIf","src":"4666:117:11"},{"nodeType":"YulAssignment","src":"4797:117:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4886:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4897:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4882:3:11"},"nodeType":"YulFunctionCall","src":"4882:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4906:7:11"}],"functionName":{"name":"abi_decode_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4807:74:11"},"nodeType":"YulFunctionCall","src":"4807:107:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4797:6:11"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4288:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4299:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4311:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4319:6:11","type":""}],"src":"4189:742:11"},{"body":{"nodeType":"YulBlock","src":"4982:81:11","statements":[{"nodeType":"YulAssignment","src":"4992:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5007:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"5014:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5003:3:11"},"nodeType":"YulFunctionCall","src":"5003:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4992:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4964:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4974:7:11","type":""}],"src":"4937:126:11"},{"body":{"nodeType":"YulBlock","src":"5114:51:11","statements":[{"nodeType":"YulAssignment","src":"5124:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5153:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5135:17:11"},"nodeType":"YulFunctionCall","src":"5135:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5124:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5096:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5106:7:11","type":""}],"src":"5069:96:11"},{"body":{"nodeType":"YulBlock","src":"5214:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"5271:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5280:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5283:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5273:6:11"},"nodeType":"YulFunctionCall","src":"5273:12:11"},"nodeType":"YulExpressionStatement","src":"5273:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5237:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5262:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5244:17:11"},"nodeType":"YulFunctionCall","src":"5244:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5234:2:11"},"nodeType":"YulFunctionCall","src":"5234:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5227:6:11"},"nodeType":"YulFunctionCall","src":"5227:43:11"},"nodeType":"YulIf","src":"5224:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5207:5:11","type":""}],"src":"5171:122:11"},{"body":{"nodeType":"YulBlock","src":"5351:87:11","statements":[{"nodeType":"YulAssignment","src":"5361:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5383:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5370:12:11"},"nodeType":"YulFunctionCall","src":"5370:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5361:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5426:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"5399:26:11"},"nodeType":"YulFunctionCall","src":"5399:33:11"},"nodeType":"YulExpressionStatement","src":"5399:33:11"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5329:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"5337:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5345:5:11","type":""}],"src":"5299:139:11"},{"body":{"nodeType":"YulBlock","src":"5527:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"5573:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5575:77:11"},"nodeType":"YulFunctionCall","src":"5575:79:11"},"nodeType":"YulExpressionStatement","src":"5575:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5548:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"5557:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5544:3:11"},"nodeType":"YulFunctionCall","src":"5544:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"5569:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5540:3:11"},"nodeType":"YulFunctionCall","src":"5540:32:11"},"nodeType":"YulIf","src":"5537:119:11"},{"nodeType":"YulBlock","src":"5666:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5681:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5695:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5685:6:11","type":""}]},{"nodeType":"YulAssignment","src":"5710:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5745:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5756:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5741:3:11"},"nodeType":"YulFunctionCall","src":"5741:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5765:7:11"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"5720:20:11"},"nodeType":"YulFunctionCall","src":"5720:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5710:6:11"}]}]},{"nodeType":"YulBlock","src":"5793:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5808:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5822:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5812:6:11","type":""}]},{"nodeType":"YulAssignment","src":"5838:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5873:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5884:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5869:3:11"},"nodeType":"YulFunctionCall","src":"5869:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5893:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5848:20:11"},"nodeType":"YulFunctionCall","src":"5848:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5838:6:11"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5489:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5500:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5512:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5520:6:11","type":""}],"src":"5444:474:11"},{"body":{"nodeType":"YulBlock","src":"5968:57:11","statements":[{"nodeType":"YulAssignment","src":"5978:41:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5993:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"6000:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5989:3:11"},"nodeType":"YulFunctionCall","src":"5989:30:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5978:7:11"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5950:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5960:7:11","type":""}],"src":"5924:101:11"},{"body":{"nodeType":"YulBlock","src":"6073:78:11","statements":[{"body":{"nodeType":"YulBlock","src":"6129:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6138:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6141:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6131:6:11"},"nodeType":"YulFunctionCall","src":"6131:12:11"},"nodeType":"YulExpressionStatement","src":"6131:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6096:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6120:5:11"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"6103:16:11"},"nodeType":"YulFunctionCall","src":"6103:23:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6093:2:11"},"nodeType":"YulFunctionCall","src":"6093:34:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6086:6:11"},"nodeType":"YulFunctionCall","src":"6086:42:11"},"nodeType":"YulIf","src":"6083:62:11"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6066:5:11","type":""}],"src":"6031:120:11"},{"body":{"nodeType":"YulBlock","src":"6208:86:11","statements":[{"nodeType":"YulAssignment","src":"6218:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6240:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6227:12:11"},"nodeType":"YulFunctionCall","src":"6227:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6218:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6282:5:11"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"6256:25:11"},"nodeType":"YulFunctionCall","src":"6256:32:11"},"nodeType":"YulExpressionStatement","src":"6256:32:11"}]},"name":"abi_decode_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6186:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"6194:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6202:5:11","type":""}],"src":"6157:137:11"},{"body":{"nodeType":"YulBlock","src":"6365:262:11","statements":[{"body":{"nodeType":"YulBlock","src":"6411:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6413:77:11"},"nodeType":"YulFunctionCall","src":"6413:79:11"},"nodeType":"YulExpressionStatement","src":"6413:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6386:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"6395:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6382:3:11"},"nodeType":"YulFunctionCall","src":"6382:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"6407:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6378:3:11"},"nodeType":"YulFunctionCall","src":"6378:32:11"},"nodeType":"YulIf","src":"6375:119:11"},{"nodeType":"YulBlock","src":"6504:116:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6519:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6533:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6523:6:11","type":""}]},{"nodeType":"YulAssignment","src":"6548:62:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6582:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"6593:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6578:3:11"},"nodeType":"YulFunctionCall","src":"6578:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6602:7:11"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"6558:19:11"},"nodeType":"YulFunctionCall","src":"6558:52:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6548:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6335:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6346:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6358:6:11","type":""}],"src":"6300:327:11"},{"body":{"nodeType":"YulBlock","src":"6698:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6715:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6738:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6720:17:11"},"nodeType":"YulFunctionCall","src":"6720:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6708:6:11"},"nodeType":"YulFunctionCall","src":"6708:37:11"},"nodeType":"YulExpressionStatement","src":"6708:37:11"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6686:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6693:3:11","type":""}],"src":"6633:118:11"},{"body":{"nodeType":"YulBlock","src":"6855:124:11","statements":[{"nodeType":"YulAssignment","src":"6865:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6877:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6888:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6873:3:11"},"nodeType":"YulFunctionCall","src":"6873:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6865:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6945:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6958:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6969:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6954:3:11"},"nodeType":"YulFunctionCall","src":"6954:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6901:43:11"},"nodeType":"YulFunctionCall","src":"6901:71:11"},"nodeType":"YulExpressionStatement","src":"6901:71:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6827:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6839:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6850:4:11","type":""}],"src":"6757:222:11"},{"body":{"nodeType":"YulBlock","src":"7030:32:11","statements":[{"nodeType":"YulAssignment","src":"7040:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"7051:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7040:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7012:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7022:7:11","type":""}],"src":"6985:77:11"},{"body":{"nodeType":"YulBlock","src":"7111:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"7168:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7177:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7180:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7170:6:11"},"nodeType":"YulFunctionCall","src":"7170:12:11"},"nodeType":"YulExpressionStatement","src":"7170:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7134:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7159:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7141:17:11"},"nodeType":"YulFunctionCall","src":"7141:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7131:2:11"},"nodeType":"YulFunctionCall","src":"7131:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7124:6:11"},"nodeType":"YulFunctionCall","src":"7124:43:11"},"nodeType":"YulIf","src":"7121:63:11"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7104:5:11","type":""}],"src":"7068:122:11"},{"body":{"nodeType":"YulBlock","src":"7248:87:11","statements":[{"nodeType":"YulAssignment","src":"7258:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7280:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7267:12:11"},"nodeType":"YulFunctionCall","src":"7267:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7258:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7323:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"7296:26:11"},"nodeType":"YulFunctionCall","src":"7296:33:11"},"nodeType":"YulExpressionStatement","src":"7296:33:11"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7226:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"7234:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7242:5:11","type":""}],"src":"7196:139:11"},{"body":{"nodeType":"YulBlock","src":"7441:519:11","statements":[{"body":{"nodeType":"YulBlock","src":"7487:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7489:77:11"},"nodeType":"YulFunctionCall","src":"7489:79:11"},"nodeType":"YulExpressionStatement","src":"7489:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7462:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"7471:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7458:3:11"},"nodeType":"YulFunctionCall","src":"7458:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"7483:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7454:3:11"},"nodeType":"YulFunctionCall","src":"7454:32:11"},"nodeType":"YulIf","src":"7451:119:11"},{"nodeType":"YulBlock","src":"7580:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"7595:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7609:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7599:6:11","type":""}]},{"nodeType":"YulAssignment","src":"7624:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7659:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"7670:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7655:3:11"},"nodeType":"YulFunctionCall","src":"7655:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7679:7:11"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"7634:20:11"},"nodeType":"YulFunctionCall","src":"7634:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7624:6:11"}]}]},{"nodeType":"YulBlock","src":"7707:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"7722:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7736:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7726:6:11","type":""}]},{"nodeType":"YulAssignment","src":"7752:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7787:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"7798:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7783:3:11"},"nodeType":"YulFunctionCall","src":"7783:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7807:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7762:20:11"},"nodeType":"YulFunctionCall","src":"7762:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7752:6:11"}]}]},{"nodeType":"YulBlock","src":"7835:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"7850:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7864:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7854:6:11","type":""}]},{"nodeType":"YulAssignment","src":"7880:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7915:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"7926:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7911:3:11"},"nodeType":"YulFunctionCall","src":"7911:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7935:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7890:20:11"},"nodeType":"YulFunctionCall","src":"7890:53:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7880:6:11"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7395:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7406:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7418:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7426:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7434:6:11","type":""}],"src":"7341:619:11"},{"body":{"nodeType":"YulBlock","src":"8032:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"8078:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8080:77:11"},"nodeType":"YulFunctionCall","src":"8080:79:11"},"nodeType":"YulExpressionStatement","src":"8080:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8053:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"8062:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8049:3:11"},"nodeType":"YulFunctionCall","src":"8049:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"8074:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8045:3:11"},"nodeType":"YulFunctionCall","src":"8045:32:11"},"nodeType":"YulIf","src":"8042:119:11"},{"nodeType":"YulBlock","src":"8171:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8186:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"8200:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8190:6:11","type":""}]},{"nodeType":"YulAssignment","src":"8215:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8250:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"8261:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8246:3:11"},"nodeType":"YulFunctionCall","src":"8246:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8270:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8225:20:11"},"nodeType":"YulFunctionCall","src":"8225:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8215:6:11"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8002:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8013:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8025:6:11","type":""}],"src":"7966:329:11"},{"body":{"nodeType":"YulBlock","src":"8329:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8346:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8349:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8339:6:11"},"nodeType":"YulFunctionCall","src":"8339:88:11"},"nodeType":"YulExpressionStatement","src":"8339:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8443:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8446:4:11","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8436:6:11"},"nodeType":"YulFunctionCall","src":"8436:15:11"},"nodeType":"YulExpressionStatement","src":"8436:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8467:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8470:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8460:6:11"},"nodeType":"YulFunctionCall","src":"8460:15:11"},"nodeType":"YulExpressionStatement","src":"8460:15:11"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"8301:180:11"},{"body":{"nodeType":"YulBlock","src":"8584:40:11","statements":[{"nodeType":"YulAssignment","src":"8595:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8611:5:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8605:5:11"},"nodeType":"YulFunctionCall","src":"8605:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8595:6:11"}]}]},"name":"array_length_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8567:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8577:6:11","type":""}],"src":"8487:137:11"},{"body":{"nodeType":"YulBlock","src":"8770:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8787:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"8792:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8780:6:11"},"nodeType":"YulFunctionCall","src":"8780:19:11"},"nodeType":"YulExpressionStatement","src":"8780:19:11"},{"nodeType":"YulAssignment","src":"8808:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8827:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"8832:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8823:3:11"},"nodeType":"YulFunctionCall","src":"8823:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8808:11:11"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8742:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"8747:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8758:11:11","type":""}],"src":"8630:213:11"},{"body":{"nodeType":"YulBlock","src":"8944:87:11","statements":[{"nodeType":"YulAssignment","src":"8954:11:11","value":{"name":"ptr","nodeType":"YulIdentifier","src":"8962:3:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8954:4:11"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8982:1:11","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"8985:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8975:6:11"},"nodeType":"YulFunctionCall","src":"8975:14:11"},"nodeType":"YulExpressionStatement","src":"8975:14:11"},{"nodeType":"YulAssignment","src":"8998:26:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9016:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9019:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"9006:9:11"},"nodeType":"YulFunctionCall","src":"9006:18:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8998:4:11"}]}]},"name":"array_dataslot_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8931:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"8939:4:11","type":""}],"src":"8849:182:11"},{"body":{"nodeType":"YulBlock","src":"9088:51:11","statements":[{"nodeType":"YulAssignment","src":"9098:34:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9123:1:11","type":"","value":"0"},{"name":"value","nodeType":"YulIdentifier","src":"9126:5:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9119:3:11"},"nodeType":"YulFunctionCall","src":"9119:13:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"9098:8:11"}]}]},"name":"shift_right_0_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9069:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"9079:8:11","type":""}],"src":"9037:102:11"},{"body":{"nodeType":"YulBlock","src":"9203:32:11","statements":[{"nodeType":"YulAssignment","src":"9213:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"9224:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9213:7:11"}]}]},"name":"cleanup_from_storage_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9185:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9195:7:11","type":""}],"src":"9145:90:11"},{"body":{"nodeType":"YulBlock","src":"9316:91:11","statements":[{"nodeType":"YulAssignment","src":"9326:75:11","value":{"arguments":[{"arguments":[{"name":"slot_value","nodeType":"YulIdentifier","src":"9389:10:11"}],"functionName":{"name":"shift_right_0_unsigned","nodeType":"YulIdentifier","src":"9366:22:11"},"nodeType":"YulFunctionCall","src":"9366:34:11"}],"functionName":{"name":"cleanup_from_storage_t_bytes32","nodeType":"YulIdentifier","src":"9335:30:11"},"nodeType":"YulFunctionCall","src":"9335:66:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9326:5:11"}]}]},"name":"extract_from_storage_value_offset_0t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot_value","nodeType":"YulTypedName","src":"9295:10:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9310:5:11","type":""}],"src":"9241:166:11"},{"body":{"nodeType":"YulBlock","src":"9468:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9485:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9508:5:11"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"9490:17:11"},"nodeType":"YulFunctionCall","src":"9490:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9478:6:11"},"nodeType":"YulFunctionCall","src":"9478:37:11"},"nodeType":"YulExpressionStatement","src":"9478:37:11"}]},"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9456:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9463:3:11","type":""}],"src":"9413:108:11"},{"body":{"nodeType":"YulBlock","src":"9714:578:11","statements":[{"nodeType":"YulVariableDeclaration","src":"9724:26:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9740:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"9745:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9736:3:11"},"nodeType":"YulFunctionCall","src":"9736:14:11"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"9728:4:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9759:18:11","value":{"kind":"number","nodeType":"YulLiteral","src":"9776:1:11","type":"","value":"0"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"9763:9:11","type":""}]},{"nodeType":"YulBlock","src":"9787:244:11","statements":[{"nodeType":"YulAssignment","src":"9821:36:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9844:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"9851:4:11","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9840:3:11"},"nodeType":"YulFunctionCall","src":"9840:16:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"9834:5:11"},"nodeType":"YulFunctionCall","src":"9834:23:11"},"variableNames":[{"name":"slotValue","nodeType":"YulIdentifier","src":"9821:9:11"}]},{"nodeType":"YulVariableDeclaration","src":"9870:75:11","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"9935:9:11"}],"functionName":{"name":"extract_from_storage_value_offset_0t_bytes32","nodeType":"YulIdentifier","src":"9890:44:11"},"nodeType":"YulFunctionCall","src":"9890:55:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9874:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9992:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10010:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10015:4:11","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10006:3:11"},"nodeType":"YulFunctionCall","src":"10006:14:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"9958:33:11"},"nodeType":"YulFunctionCall","src":"9958:63:11"},"nodeType":"YulExpressionStatement","src":"9958:63:11"}]},{"nodeType":"YulBlock","src":"10041:244:11","statements":[{"nodeType":"YulAssignment","src":"10075:36:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10098:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"10105:4:11","type":"","value":"0x01"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10094:3:11"},"nodeType":"YulFunctionCall","src":"10094:16:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"10088:5:11"},"nodeType":"YulFunctionCall","src":"10088:23:11"},"variableNames":[{"name":"slotValue","nodeType":"YulIdentifier","src":"10075:9:11"}]},{"nodeType":"YulVariableDeclaration","src":"10124:75:11","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"10189:9:11"}],"functionName":{"name":"extract_from_storage_value_offset_0t_bytes32","nodeType":"YulIdentifier","src":"10144:44:11"},"nodeType":"YulFunctionCall","src":"10144:55:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10128:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10246:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10264:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10269:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10260:3:11"},"nodeType":"YulFunctionCall","src":"10260:14:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"10212:33:11"},"nodeType":"YulFunctionCall","src":"10212:63:11"},"nodeType":"YulExpressionStatement","src":"10212:63:11"}]}]},"name":"abi_encode_t_struct$_Institution_$2058_storage_to_t_struct$_Institution_$2058_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9701:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9708:3:11","type":""}],"src":"9603:689:11"},{"body":{"nodeType":"YulBlock","src":"10433:154:11","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10532:6:11"},{"name":"pos","nodeType":"YulIdentifier","src":"10540:3:11"}],"functionName":{"name":"abi_encode_t_struct$_Institution_$2058_storage_to_t_struct$_Institution_$2058_memory_ptr","nodeType":"YulIdentifier","src":"10443:88:11"},"nodeType":"YulFunctionCall","src":"10443:101:11"},"nodeType":"YulExpressionStatement","src":"10443:101:11"},{"nodeType":"YulAssignment","src":"10553:28:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10571:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10576:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10567:3:11"},"nodeType":"YulFunctionCall","src":"10567:14:11"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"10553:10:11"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_Institution_$2058_storage_to_t_struct$_Institution_$2058_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"10406:6:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10414:3:11","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"10422:10:11","type":""}],"src":"10298:289:11"},{"body":{"nodeType":"YulBlock","src":"10691:38:11","statements":[{"nodeType":"YulAssignment","src":"10701:22:11","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"10713:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10718:4:11","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10709:3:11"},"nodeType":"YulFunctionCall","src":"10709:14:11"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"10701:4:11"}]}]},"name":"array_nextElement_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"10678:3:11","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"10686:4:11","type":""}],"src":"10593:136:11"},{"body":{"nodeType":"YulBlock","src":"10991:754:11","statements":[{"nodeType":"YulVariableDeclaration","src":"11001:91:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11086:5:11"}],"functionName":{"name":"array_length_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage","nodeType":"YulIdentifier","src":"11015:70:11"},"nodeType":"YulFunctionCall","src":"11015:77:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11005:6:11","type":""}]},{"nodeType":"YulAssignment","src":"11101:122:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11211:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"11216:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11108:102:11"},"nodeType":"YulFunctionCall","src":"11108:115:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11101:3:11"}]},{"nodeType":"YulVariableDeclaration","src":"11232:94:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11320:5:11"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage","nodeType":"YulIdentifier","src":"11247:72:11"},"nodeType":"YulFunctionCall","src":"11247:79:11"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"11236:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11335:21:11","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"11349:7:11"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"11339:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"11425:295:11","statements":[{"nodeType":"YulVariableDeclaration","src":"11439:27:11","value":{"name":"srcPtr","nodeType":"YulIdentifier","src":"11460:6:11"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"11443:13:11","type":""}]},{"nodeType":"YulAssignment","src":"11479:125:11","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"11585:13:11"},{"name":"pos","nodeType":"YulIdentifier","src":"11600:3:11"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_Institution_$2058_storage_to_t_struct$_Institution_$2058_memory_ptr","nodeType":"YulIdentifier","src":"11486:98:11"},"nodeType":"YulFunctionCall","src":"11486:118:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11479:3:11"}]},{"nodeType":"YulAssignment","src":"11617:93:11","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11703:6:11"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage","nodeType":"YulIdentifier","src":"11627:75:11"},"nodeType":"YulFunctionCall","src":"11627:83:11"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11617:6:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11387:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"11390:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11384:2:11"},"nodeType":"YulFunctionCall","src":"11384:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11398:18:11","statements":[{"nodeType":"YulAssignment","src":"11400:14:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11409:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"11412:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11405:3:11"},"nodeType":"YulFunctionCall","src":"11405:9:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11400:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"11369:14:11","statements":[{"nodeType":"YulVariableDeclaration","src":"11371:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"11380:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11375:1:11","type":""}]}]},"src":"11365:355:11"},{"nodeType":"YulAssignment","src":"11729:10:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"11736:3:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11729:3:11"}]}]},"name":"abi_encode_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage_to_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10970:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10977:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10986:3:11","type":""}],"src":"10815:930:11"},{"body":{"nodeType":"YulBlock","src":"11951:277:11","statements":[{"nodeType":"YulAssignment","src":"11961:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11973:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11984:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11969:3:11"},"nodeType":"YulFunctionCall","src":"11969:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11961:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12008:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12019:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12004:3:11"},"nodeType":"YulFunctionCall","src":"12004:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12027:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"12033:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12023:3:11"},"nodeType":"YulFunctionCall","src":"12023:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11997:6:11"},"nodeType":"YulFunctionCall","src":"11997:47:11"},"nodeType":"YulExpressionStatement","src":"11997:47:11"},{"nodeType":"YulAssignment","src":"12053:168:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12207:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"12216:4:11"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage_to_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12061:145:11"},"nodeType":"YulFunctionCall","src":"12061:160:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12053:4:11"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage__to_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11923:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11935:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11946:4:11","type":""}],"src":"11751:477:11"},{"body":{"nodeType":"YulBlock","src":"12330:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12347:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"12352:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12340:6:11"},"nodeType":"YulFunctionCall","src":"12340:19:11"},"nodeType":"YulExpressionStatement","src":"12340:19:11"},{"nodeType":"YulAssignment","src":"12368:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12387:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"12392:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12383:3:11"},"nodeType":"YulFunctionCall","src":"12383:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"12368:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12302:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"12307:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"12318:11:11","type":""}],"src":"12234:169:11"},{"body":{"nodeType":"YulBlock","src":"12515:65:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12537:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"12545:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12533:3:11"},"nodeType":"YulFunctionCall","src":"12533:14:11"},{"hexValue":"476174657761793a207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"12549:23:11","type":"","value":"Gateway: zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12526:6:11"},"nodeType":"YulFunctionCall","src":"12526:47:11"},"nodeType":"YulExpressionStatement","src":"12526:47:11"}]},"name":"store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12507:6:11","type":""}],"src":"12409:171:11"},{"body":{"nodeType":"YulBlock","src":"12732:220:11","statements":[{"nodeType":"YulAssignment","src":"12742:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12808:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"12813:2:11","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12749:58:11"},"nodeType":"YulFunctionCall","src":"12749:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12742:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12914:3:11"}],"functionName":{"name":"store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf","nodeType":"YulIdentifier","src":"12825:88:11"},"nodeType":"YulFunctionCall","src":"12825:93:11"},"nodeType":"YulExpressionStatement","src":"12825:93:11"},{"nodeType":"YulAssignment","src":"12927:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12938:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"12943:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12934:3:11"},"nodeType":"YulFunctionCall","src":"12934:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12927:3:11"}]}]},"name":"abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12720:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12728:3:11","type":""}],"src":"12586:366:11"},{"body":{"nodeType":"YulBlock","src":"13129:248:11","statements":[{"nodeType":"YulAssignment","src":"13139:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13151:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13162:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13147:3:11"},"nodeType":"YulFunctionCall","src":"13147:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13139:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13186:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13197:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13182:3:11"},"nodeType":"YulFunctionCall","src":"13182:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13205:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"13211:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13201:3:11"},"nodeType":"YulFunctionCall","src":"13201:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13175:6:11"},"nodeType":"YulFunctionCall","src":"13175:47:11"},"nodeType":"YulExpressionStatement","src":"13175:47:11"},{"nodeType":"YulAssignment","src":"13231:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13365:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13239:124:11"},"nodeType":"YulFunctionCall","src":"13239:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13231:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13109:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13124:4:11","type":""}],"src":"12958:419:11"},{"body":{"nodeType":"YulBlock","src":"13489:118:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13511:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"13519:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13507:3:11"},"nodeType":"YulFunctionCall","src":"13507:14:11"},{"hexValue":"476174657761793a207472656173757279206164647265737320616c72656164","kind":"string","nodeType":"YulLiteral","src":"13523:34:11","type":"","value":"Gateway: treasury address alread"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13500:6:11"},"nodeType":"YulFunctionCall","src":"13500:58:11"},"nodeType":"YulExpressionStatement","src":"13500:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13579:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"13587:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13575:3:11"},"nodeType":"YulFunctionCall","src":"13575:15:11"},{"hexValue":"7920736574","kind":"string","nodeType":"YulLiteral","src":"13592:7:11","type":"","value":"y set"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13568:6:11"},"nodeType":"YulFunctionCall","src":"13568:32:11"},"nodeType":"YulExpressionStatement","src":"13568:32:11"}]},"name":"store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13481:6:11","type":""}],"src":"13383:224:11"},{"body":{"nodeType":"YulBlock","src":"13759:220:11","statements":[{"nodeType":"YulAssignment","src":"13769:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13835:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13840:2:11","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13776:58:11"},"nodeType":"YulFunctionCall","src":"13776:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13769:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13941:3:11"}],"functionName":{"name":"store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead","nodeType":"YulIdentifier","src":"13852:88:11"},"nodeType":"YulFunctionCall","src":"13852:93:11"},"nodeType":"YulExpressionStatement","src":"13852:93:11"},{"nodeType":"YulAssignment","src":"13954:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13965:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13970:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13961:3:11"},"nodeType":"YulFunctionCall","src":"13961:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13954:3:11"}]}]},"name":"abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13747:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13755:3:11","type":""}],"src":"13613:366:11"},{"body":{"nodeType":"YulBlock","src":"14156:248:11","statements":[{"nodeType":"YulAssignment","src":"14166:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14178:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14189:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14174:3:11"},"nodeType":"YulFunctionCall","src":"14174:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14166:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14213:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14224:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14209:3:11"},"nodeType":"YulFunctionCall","src":"14209:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14232:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"14238:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14228:3:11"},"nodeType":"YulFunctionCall","src":"14228:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14202:6:11"},"nodeType":"YulFunctionCall","src":"14202:47:11"},"nodeType":"YulExpressionStatement","src":"14202:47:11"},{"nodeType":"YulAssignment","src":"14258:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14392:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14266:124:11"},"nodeType":"YulFunctionCall","src":"14266:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14258:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14136:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14151:4:11","type":""}],"src":"13985:419:11"},{"body":{"nodeType":"YulBlock","src":"14516:120:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14538:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"14546:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14534:3:11"},"nodeType":"YulFunctionCall","src":"14534:14:11"},{"hexValue":"476174657761793a2061676772656761746f72206164647265737320616c7265","kind":"string","nodeType":"YulLiteral","src":"14550:34:11","type":"","value":"Gateway: aggregator address alre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14527:6:11"},"nodeType":"YulFunctionCall","src":"14527:58:11"},"nodeType":"YulExpressionStatement","src":"14527:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14606:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"14614:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14602:3:11"},"nodeType":"YulFunctionCall","src":"14602:15:11"},{"hexValue":"61647920736574","kind":"string","nodeType":"YulLiteral","src":"14619:9:11","type":"","value":"ady set"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14595:6:11"},"nodeType":"YulFunctionCall","src":"14595:34:11"},"nodeType":"YulExpressionStatement","src":"14595:34:11"}]},"name":"store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14508:6:11","type":""}],"src":"14410:226:11"},{"body":{"nodeType":"YulBlock","src":"14788:220:11","statements":[{"nodeType":"YulAssignment","src":"14798:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14864:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"14869:2:11","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14805:58:11"},"nodeType":"YulFunctionCall","src":"14805:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14798:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14970:3:11"}],"functionName":{"name":"store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4","nodeType":"YulIdentifier","src":"14881:88:11"},"nodeType":"YulFunctionCall","src":"14881:93:11"},"nodeType":"YulExpressionStatement","src":"14881:93:11"},{"nodeType":"YulAssignment","src":"14983:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14994:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"14999:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14990:3:11"},"nodeType":"YulFunctionCall","src":"14990:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14983:3:11"}]}]},"name":"abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14776:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14784:3:11","type":""}],"src":"14642:366:11"},{"body":{"nodeType":"YulBlock","src":"15185:248:11","statements":[{"nodeType":"YulAssignment","src":"15195:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15207:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15218:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15203:3:11"},"nodeType":"YulFunctionCall","src":"15203:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15195:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15242:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15253:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15238:3:11"},"nodeType":"YulFunctionCall","src":"15238:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15261:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"15267:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15257:3:11"},"nodeType":"YulFunctionCall","src":"15257:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15231:6:11"},"nodeType":"YulFunctionCall","src":"15231:47:11"},"nodeType":"YulExpressionStatement","src":"15231:47:11"},{"nodeType":"YulAssignment","src":"15287:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15421:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15295:124:11"},"nodeType":"YulFunctionCall","src":"15295:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15287:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15165:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15180:4:11","type":""}],"src":"15014:419:11"},{"body":{"nodeType":"YulBlock","src":"15502:52:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15519:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15541:5:11"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"15524:16:11"},"nodeType":"YulFunctionCall","src":"15524:23:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15512:6:11"},"nodeType":"YulFunctionCall","src":"15512:36:11"},"nodeType":"YulExpressionStatement","src":"15512:36:11"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15490:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15497:3:11","type":""}],"src":"15439:115:11"},{"body":{"nodeType":"YulBlock","src":"15656:122:11","statements":[{"nodeType":"YulAssignment","src":"15666:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15678:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15689:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15674:3:11"},"nodeType":"YulFunctionCall","src":"15674:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15666:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15744:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15757:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15768:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15753:3:11"},"nodeType":"YulFunctionCall","src":"15753:17:11"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"15702:41:11"},"nodeType":"YulFunctionCall","src":"15702:69:11"},"nodeType":"YulExpressionStatement","src":"15702:69:11"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15628:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15640:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15651:4:11","type":""}],"src":"15560:218:11"},{"body":{"nodeType":"YulBlock","src":"15890:122:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15912:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"15920:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15908:3:11"},"nodeType":"YulFunctionCall","src":"15908:14:11"},{"hexValue":"4f776e61626c6532537465703a2063616c6c6572206973206e6f742074686520","kind":"string","nodeType":"YulLiteral","src":"15924:34:11","type":"","value":"Ownable2Step: caller is not the "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15901:6:11"},"nodeType":"YulFunctionCall","src":"15901:58:11"},"nodeType":"YulExpressionStatement","src":"15901:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15980:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"15988:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15976:3:11"},"nodeType":"YulFunctionCall","src":"15976:15:11"},{"hexValue":"6e6577206f776e6572","kind":"string","nodeType":"YulLiteral","src":"15993:11:11","type":"","value":"new owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15969:6:11"},"nodeType":"YulFunctionCall","src":"15969:36:11"},"nodeType":"YulExpressionStatement","src":"15969:36:11"}]},"name":"store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15882:6:11","type":""}],"src":"15784:228:11"},{"body":{"nodeType":"YulBlock","src":"16164:220:11","statements":[{"nodeType":"YulAssignment","src":"16174:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16240:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"16245:2:11","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16181:58:11"},"nodeType":"YulFunctionCall","src":"16181:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16174:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16346:3:11"}],"functionName":{"name":"store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc","nodeType":"YulIdentifier","src":"16257:88:11"},"nodeType":"YulFunctionCall","src":"16257:93:11"},"nodeType":"YulExpressionStatement","src":"16257:93:11"},{"nodeType":"YulAssignment","src":"16359:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16370:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"16375:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16366:3:11"},"nodeType":"YulFunctionCall","src":"16366:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16359:3:11"}]}]},"name":"abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16152:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16160:3:11","type":""}],"src":"16018:366:11"},{"body":{"nodeType":"YulBlock","src":"16561:248:11","statements":[{"nodeType":"YulAssignment","src":"16571:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16583:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16594:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16579:3:11"},"nodeType":"YulFunctionCall","src":"16579:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16571:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16618:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16629:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16614:3:11"},"nodeType":"YulFunctionCall","src":"16614:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16637:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"16643:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16633:3:11"},"nodeType":"YulFunctionCall","src":"16633:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16607:6:11"},"nodeType":"YulFunctionCall","src":"16607:47:11"},"nodeType":"YulExpressionStatement","src":"16607:47:11"},{"nodeType":"YulAssignment","src":"16663:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16797:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16671:124:11"},"nodeType":"YulFunctionCall","src":"16671:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16663:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16541:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16556:4:11","type":""}],"src":"16390:419:11"},{"body":{"nodeType":"YulBlock","src":"16921:67:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16943:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"16951:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16939:3:11"},"nodeType":"YulFunctionCall","src":"16939:14:11"},{"hexValue":"476174657761793a20696e76616c696420737461747573","kind":"string","nodeType":"YulLiteral","src":"16955:25:11","type":"","value":"Gateway: invalid status"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16932:6:11"},"nodeType":"YulFunctionCall","src":"16932:49:11"},"nodeType":"YulExpressionStatement","src":"16932:49:11"}]},"name":"store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16913:6:11","type":""}],"src":"16815:173:11"},{"body":{"nodeType":"YulBlock","src":"17140:220:11","statements":[{"nodeType":"YulAssignment","src":"17150:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17216:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"17221:2:11","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17157:58:11"},"nodeType":"YulFunctionCall","src":"17157:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17150:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17322:3:11"}],"functionName":{"name":"store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338","nodeType":"YulIdentifier","src":"17233:88:11"},"nodeType":"YulFunctionCall","src":"17233:93:11"},"nodeType":"YulExpressionStatement","src":"17233:93:11"},{"nodeType":"YulAssignment","src":"17335:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17346:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"17351:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17342:3:11"},"nodeType":"YulFunctionCall","src":"17342:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17335:3:11"}]}]},"name":"abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17128:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17136:3:11","type":""}],"src":"16994:366:11"},{"body":{"nodeType":"YulBlock","src":"17537:248:11","statements":[{"nodeType":"YulAssignment","src":"17547:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17559:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17570:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17555:3:11"},"nodeType":"YulFunctionCall","src":"17555:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17547:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17594:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17605:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17590:3:11"},"nodeType":"YulFunctionCall","src":"17590:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17613:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"17619:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17609:3:11"},"nodeType":"YulFunctionCall","src":"17609:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17583:6:11"},"nodeType":"YulFunctionCall","src":"17583:47:11"},"nodeType":"YulExpressionStatement","src":"17583:47:11"},{"nodeType":"YulAssignment","src":"17639:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17773:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17647:124:11"},"nodeType":"YulFunctionCall","src":"17647:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17639:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17517:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17532:4:11","type":""}],"src":"17366:419:11"},{"body":{"nodeType":"YulBlock","src":"17856:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17873:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17896:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17878:17:11"},"nodeType":"YulFunctionCall","src":"17878:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17866:6:11"},"nodeType":"YulFunctionCall","src":"17866:37:11"},"nodeType":"YulExpressionStatement","src":"17866:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17844:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17851:3:11","type":""}],"src":"17791:118:11"},{"body":{"nodeType":"YulBlock","src":"18013:124:11","statements":[{"nodeType":"YulAssignment","src":"18023:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18035:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18046:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18031:3:11"},"nodeType":"YulFunctionCall","src":"18031:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18023:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18103:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18116:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18127:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18112:3:11"},"nodeType":"YulFunctionCall","src":"18112:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18059:43:11"},"nodeType":"YulFunctionCall","src":"18059:71:11"},"nodeType":"YulExpressionStatement","src":"18059:71:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17985:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17997:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18008:4:11","type":""}],"src":"17915:222:11"},{"body":{"nodeType":"YulBlock","src":"18249:76:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18271:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"18279:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18267:3:11"},"nodeType":"YulFunctionCall","src":"18267:14:11"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"18283:34:11","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18260:6:11"},"nodeType":"YulFunctionCall","src":"18260:58:11"},"nodeType":"YulExpressionStatement","src":"18260:58:11"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18241:6:11","type":""}],"src":"18143:182:11"},{"body":{"nodeType":"YulBlock","src":"18477:220:11","statements":[{"nodeType":"YulAssignment","src":"18487:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18553:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"18558:2:11","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18494:58:11"},"nodeType":"YulFunctionCall","src":"18494:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18487:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18659:3:11"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"18570:88:11"},"nodeType":"YulFunctionCall","src":"18570:93:11"},"nodeType":"YulExpressionStatement","src":"18570:93:11"},{"nodeType":"YulAssignment","src":"18672:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18683:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"18688:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18679:3:11"},"nodeType":"YulFunctionCall","src":"18679:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18672:3:11"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18465:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18473:3:11","type":""}],"src":"18331:366:11"},{"body":{"nodeType":"YulBlock","src":"18874:248:11","statements":[{"nodeType":"YulAssignment","src":"18884:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18896:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18907:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18892:3:11"},"nodeType":"YulFunctionCall","src":"18892:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18884:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18931:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18942:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18927:3:11"},"nodeType":"YulFunctionCall","src":"18927:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18950:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"18956:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18946:3:11"},"nodeType":"YulFunctionCall","src":"18946:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18920:6:11"},"nodeType":"YulFunctionCall","src":"18920:47:11"},"nodeType":"YulExpressionStatement","src":"18920:47:11"},{"nodeType":"YulAssignment","src":"18976:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19110:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18984:124:11"},"nodeType":"YulFunctionCall","src":"18984:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18976:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18854:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18869:4:11","type":""}],"src":"18703:419:11"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    // struct SharedStructs.Institution\n    function abi_decode_t_struct$_Institution_$2058_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x40) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x40)\n\n        {\n            // code\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_bytes32(add(headStart, offset), end))\n\n        }\n\n        {\n            // name\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_bytes32(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct SharedStructs.Institution[]\n    function abi_decode_available_length_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x40))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x40) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_struct$_Institution_$2058_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // struct SharedStructs.Institution[]\n    function abi_decode_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes32t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage(value) -> length {\n\n        length := sload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function shift_right_0_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(0, value)\n\n    }\n\n    function cleanup_from_storage_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function extract_from_storage_value_offset_0t_bytes32(slot_value) -> value {\n        value := cleanup_from_storage_t_bytes32(shift_right_0_unsigned(slot_value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    // struct SharedStructs.Institution -> struct SharedStructs.Institution\n    function abi_encode_t_struct$_Institution_$2058_storage_to_t_struct$_Institution_$2058_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x40)\n        let slotValue := 0\n\n        {\n            // code\n            slotValue := sload(add(value, 0x00))\n            let memberValue0 := extract_from_storage_value_offset_0t_bytes32(slotValue)\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // name\n            slotValue := sload(add(value, 0x01))\n            let memberValue0 := extract_from_storage_value_offset_0t_bytes32(slotValue)\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Institution_$2058_storage_to_t_struct$_Institution_$2058_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Institution_$2058_storage_to_t_struct$_Institution_$2058_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x40)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage(ptr) -> next {\n        next := add(ptr, 0x02)\n    }\n\n    // struct SharedStructs.Institution[] -> struct SharedStructs.Institution[]\n    function abi_encode_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage_to_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := srcPtr\n            pos := abi_encodeUpdatedPos_t_struct$_Institution_$2058_storage_to_t_struct$_Institution_$2058_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage__to_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Institution_$2058_storage_$dyn_storage_to_t_array$_t_struct$_Institution_$2058_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Gateway: zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1ed1b610c65ae67667a8e3cd9480c209600a6bf02b22b4af311243c2e6c74caf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead(memPtr) {\n\n        mstore(add(memPtr, 0), \"Gateway: treasury address alread\")\n\n        mstore(add(memPtr, 32), \"y set\")\n\n    }\n\n    function abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b6e1af8cead2910a847eecbe92be55c8397880e12250986fbcac76421d557ead_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Gateway: aggregator address alre\")\n\n        mstore(add(memPtr, 32), \"ady set\")\n\n    }\n\n    function abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df54c347a849fd7dd0b01f92bc3efd917cd7e26dbe67aebf880d956b8dc0bca4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable2Step: caller is not the \")\n\n        mstore(add(memPtr, 32), \"new owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338(memPtr) {\n\n        mstore(add(memPtr, 0), \"Gateway: invalid status\")\n\n    }\n\n    function abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8363ef1a03c6ce5789016e221f816fab24945c59c2f0126d3b368bfc57b03338_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100935760003560e01c806379ba50971161006657806379ba5097146100f65780638da5cb5b14610100578063cd9924001461011e578063e30c39781461013a578063f2fde38b1461015857610093565b8063322008821461009857806340ebc677146100b457806347094e2e146100d0578063715018a6146100ec575b600080fd5b6100b260048036038101906100ad9190610d03565b610174565b005b6100ce60048036038101906100c99190610dbd565b6102e9565b005b6100ea60048036038101906100e59190610e3d565b6105b1565b005b6100f461061c565b005b6100fe610630565b005b6101086106bd565b6040516101159190610e79565b60405180910390f35b61013860048036038101906101339190610eca565b6106e7565b005b61014261086c565b60405161014f9190610e79565b60405180910390f35b610172600480360381019061016d9190610f1d565b610896565b005b61017c610943565b60cd6000838152602001908152602001600020600061019b9190610ac0565b60005b815181101561029a5760cd60008481526020019081526020016000208282815181106101cd576101cc610f4a565b5b6020026020010151908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000155602082015181600101555050604051806040016040528083838151811061023257610231610f4a565b5b60200260200101516020015181526020018481525060ce600084848151811061025e5761025d610f4a565b5b6020026020010151600001518152602001908152602001600020600082015181600001556020820151816001015590505080600101905061019e565b50817f58f3a30ec15a8d3e09fa65f9ef10219bc7a9a99d872a4ed895c37c2e761ac2ac60cd60008581526020019081526020016000206040516102dd91906110b3565b60405180910390a25050565b6102f1610943565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610360576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035790611132565b60405180910390fd5b60007f74726561737572790000000000000000000000000000000000000000000000008303610463578173ffffffffffffffffffffffffffffffffffffffff16609860089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610419576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610410906111c4565b60405180910390fd5b81609860086101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050610561565b7f61676772656761746f72000000000000000000000000000000000000000000008303610560578173ffffffffffffffffffffffffffffffffffffffff16609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361051a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051190611256565b60405180910390fd5b81609960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190505b5b80156105ac578173ffffffffffffffffffffffffffffffffffffffff16837fbbc5b96e57cfecb3dbeeadf92e87f15e58e64fcd75cbe256dcc5d9ef2e51e8a460405160405180910390a35b505050565b6105b9610943565b80609860006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507f1ce29a697a4765bd17d91df93ba75b250b629ecf030553ff1f6ab59f15ae6c7b816040516106119190611285565b60405180910390a150565b610624610943565b61062e60006109c1565b565b600061063a6109f2565b90508073ffffffffffffffffffffffffffffffffffffffff1661065b61086c565b73ffffffffffffffffffffffffffffffffffffffff16146106b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a890611312565b60405180910390fd5b6106ba816109c1565b50565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106ef610943565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361075e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075590611132565b60405180910390fd5b600181148061076d5750600281145b6107ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a39061137e565b60405180910390fd5b7f746f6b656e0000000000000000000000000000000000000000000000000000008303610867578060cc60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16837fcfa976492af7c14a916cc3a239f4c9c75bbd7f5f0e398beb41d892c7eeccae4c8360405161085e91906113ad565b60405180910390a35b505050565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61089e610943565b80606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff166108fe6106bd565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b61094b6109f2565b73ffffffffffffffffffffffffffffffffffffffff166109696106bd565b73ffffffffffffffffffffffffffffffffffffffff16146109bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b690611414565b60405180910390fd5b565b606560006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556109ef816109fa565b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5080546000825560020290600052602060002090810190610ae19190610ae4565b50565b5b80821115610b0757600080820160009055600182016000905550600201610ae5565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610b3281610b1f565b8114610b3d57600080fd5b50565b600081359050610b4f81610b29565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610ba382610b5a565b810181811067ffffffffffffffff82111715610bc257610bc1610b6b565b5b80604052505050565b6000610bd5610b0b565b9050610be18282610b9a565b919050565b600067ffffffffffffffff821115610c0157610c00610b6b565b5b602082029050602081019050919050565b600080fd5b600080fd5b600060408284031215610c3257610c31610c17565b5b610c3c6040610bcb565b90506000610c4c84828501610b40565b6000830152506020610c6084828501610b40565b60208301525092915050565b6000610c7f610c7a84610be6565b610bcb565b90508083825260208201905060408402830185811115610ca257610ca1610c12565b5b835b81811015610ccb5780610cb78882610c1c565b845260208401935050604081019050610ca4565b5050509392505050565b600082601f830112610cea57610ce9610b55565b5b8135610cfa848260208601610c6c565b91505092915050565b60008060408385031215610d1a57610d19610b15565b5b6000610d2885828601610b40565b925050602083013567ffffffffffffffff811115610d4957610d48610b1a565b5b610d5585828601610cd5565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d8a82610d5f565b9050919050565b610d9a81610d7f565b8114610da557600080fd5b50565b600081359050610db781610d91565b92915050565b60008060408385031215610dd457610dd3610b15565b5b6000610de285828601610b40565b9250506020610df385828601610da8565b9150509250929050565b600067ffffffffffffffff82169050919050565b610e1a81610dfd565b8114610e2557600080fd5b50565b600081359050610e3781610e11565b92915050565b600060208284031215610e5357610e52610b15565b5b6000610e6184828501610e28565b91505092915050565b610e7381610d7f565b82525050565b6000602082019050610e8e6000830184610e6a565b92915050565b6000819050919050565b610ea781610e94565b8114610eb257600080fd5b50565b600081359050610ec481610e9e565b92915050565b600080600060608486031215610ee357610ee2610b15565b5b6000610ef186828701610b40565b9350506020610f0286828701610da8565b9250506040610f1386828701610eb5565b9150509250925092565b600060208284031215610f3357610f32610b15565b5b6000610f4184828501610da8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081549050919050565b600082825260208201905092915050565b60008190508160005260206000209050919050565b60008160001c9050919050565b6000819050919050565b6000610fd4610fcf83610faa565b610fb7565b9050919050565b610fe481610b1f565b82525050565b604082016000808301549050610fff81610fc1565b61100c6000860182610fdb565b506001830154905061101d81610fc1565b61102a6020860182610fdb565b5050505050565b600061103d8383610fea565b60408301905092915050565b6000600282019050919050565b600061106182610f79565b61106b8185610f84565b935061107683610f95565b8060005b838110156110a6578161108d8882611031565b975061109883611049565b92505060018101905061107a565b5085935050505092915050565b600060208201905081810360008301526110cd8184611056565b905092915050565b600082825260208201905092915050565b7f476174657761793a207a65726f20616464726573730000000000000000000000600082015250565b600061111c6015836110d5565b9150611127826110e6565b602082019050919050565b6000602082019050818103600083015261114b8161110f565b9050919050565b7f476174657761793a207472656173757279206164647265737320616c7265616460008201527f7920736574000000000000000000000000000000000000000000000000000000602082015250565b60006111ae6025836110d5565b91506111b982611152565b604082019050919050565b600060208201905081810360008301526111dd816111a1565b9050919050565b7f476174657761793a2061676772656761746f72206164647265737320616c726560008201527f6164792073657400000000000000000000000000000000000000000000000000602082015250565b60006112406027836110d5565b915061124b826111e4565b604082019050919050565b6000602082019050818103600083015261126f81611233565b9050919050565b61127f81610dfd565b82525050565b600060208201905061129a6000830184611276565b92915050565b7f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060008201527f6e6577206f776e65720000000000000000000000000000000000000000000000602082015250565b60006112fc6029836110d5565b9150611307826112a0565b604082019050919050565b6000602082019050818103600083015261132b816112ef565b9050919050565b7f476174657761793a20696e76616c696420737461747573000000000000000000600082015250565b60006113686017836110d5565b915061137382611332565b602082019050919050565b600060208201905081810360008301526113978161135b565b9050919050565b6113a781610e94565b82525050565b60006020820190506113c2600083018461139e565b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006113fe6020836110d5565b9150611409826113c8565b602082019050919050565b6000602082019050818103600083015261142d816113f1565b905091905056fea2646970667358221220a5cf2406f8bb007a45008610cf8baf05dde6f3dbf02727307f944766ecf3cbe164736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xCD992400 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x158 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x32200882 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x40EBC677 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x47094E2E EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xD03 JUMP JUMPDEST PUSH2 0x174 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x2E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0xE3D JUMP JUMPDEST PUSH2 0x5B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF4 PUSH2 0x61C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFE PUSH2 0x630 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x108 PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x142 PUSH2 0x86C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xF1D JUMP JUMPDEST PUSH2 0x896 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17C PUSH2 0x943 JUMP JUMPDEST PUSH1 0xCD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x19B SWAP2 SWAP1 PUSH2 0xAC0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x29A JUMPI PUSH1 0xCD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1CD JUMPI PUSH2 0x1CC PUSH2 0xF4A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x232 JUMPI PUSH2 0x231 PUSH2 0xF4A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0xCE PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x25E JUMPI PUSH2 0x25D PUSH2 0xF4A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x19E JUMP JUMPDEST POP DUP2 PUSH32 0x58F3A30EC15A8D3E09FA65F9EF10219BC7A9A99D872A4ED895C37C2E761AC2AC PUSH1 0xCD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x10B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x2F1 PUSH2 0x943 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x360 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x357 SWAP1 PUSH2 0x1132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x7472656173757279000000000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x463 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x98 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x419 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x410 SWAP1 PUSH2 0x11C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x98 PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x561 JUMP JUMPDEST PUSH32 0x61676772656761746F7200000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x560 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x51A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x511 SWAP1 PUSH2 0x1256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x99 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST DUP1 ISZERO PUSH2 0x5AC JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xBBC5B96E57CFECB3DBEEADF92E87F15E58E64FCD75CBE256DCC5D9EF2E51E8A4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5B9 PUSH2 0x943 JUMP JUMPDEST DUP1 PUSH1 0x98 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x1CE29A697A4765BD17D91DF93BA75B250B629ECF030553FF1F6AB59F15AE6C7B DUP2 PUSH1 0x40 MLOAD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x1285 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x624 PUSH2 0x943 JUMP JUMPDEST PUSH2 0x62E PUSH1 0x0 PUSH2 0x9C1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x63A PUSH2 0x9F2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x65B PUSH2 0x86C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A8 SWAP1 PUSH2 0x1312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6BA DUP2 PUSH2 0x9C1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6EF PUSH2 0x943 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x75E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x755 SWAP1 PUSH2 0x1132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 EQ DUP1 PUSH2 0x76D JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST PUSH2 0x7AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A3 SWAP1 PUSH2 0x137E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x746F6B656E000000000000000000000000000000000000000000000000000000 DUP4 SUB PUSH2 0x867 JUMPI DUP1 PUSH1 0xCC PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xCFA976492AF7C14A916CC3A239F4C9C75BBD7F5F0E398BEB41D892C7EECCAE4C DUP4 PUSH1 0x40 MLOAD PUSH2 0x85E SWAP2 SWAP1 PUSH2 0x13AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x89E PUSH2 0x943 JUMP JUMPDEST DUP1 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FE PUSH2 0x6BD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x94B PUSH2 0x9F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x969 PUSH2 0x6BD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B6 SWAP1 PUSH2 0x1414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x9EF DUP2 PUSH2 0x9FA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE PUSH1 0x2 MUL SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xAE1 SWAP2 SWAP1 PUSH2 0xAE4 JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xB07 JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x2 ADD PUSH2 0xAE5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB32 DUP2 PUSH2 0xB1F JUMP JUMPDEST DUP2 EQ PUSH2 0xB3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB4F DUP2 PUSH2 0xB29 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xBA3 DUP3 PUSH2 0xB5A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xBC2 JUMPI PUSH2 0xBC1 PUSH2 0xB6B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD5 PUSH2 0xB0B JUMP JUMPDEST SWAP1 POP PUSH2 0xBE1 DUP3 DUP3 PUSH2 0xB9A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC01 JUMPI PUSH2 0xC00 PUSH2 0xB6B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC32 JUMPI PUSH2 0xC31 PUSH2 0xC17 JUMP JUMPDEST JUMPDEST PUSH2 0xC3C PUSH1 0x40 PUSH2 0xBCB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC4C DUP5 DUP3 DUP6 ADD PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xC60 DUP5 DUP3 DUP6 ADD PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC7F PUSH2 0xC7A DUP5 PUSH2 0xBE6 JUMP JUMPDEST PUSH2 0xBCB JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x40 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xCA2 JUMPI PUSH2 0xCA1 PUSH2 0xC12 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCCB JUMPI DUP1 PUSH2 0xCB7 DUP9 DUP3 PUSH2 0xC1C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x40 DUP2 ADD SWAP1 POP PUSH2 0xCA4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCEA JUMPI PUSH2 0xCE9 PUSH2 0xB55 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCFA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xC6C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD1A JUMPI PUSH2 0xD19 PUSH2 0xB15 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD28 DUP6 DUP3 DUP7 ADD PUSH2 0xB40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD49 JUMPI PUSH2 0xD48 PUSH2 0xB1A JUMP JUMPDEST JUMPDEST PUSH2 0xD55 DUP6 DUP3 DUP7 ADD PUSH2 0xCD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD8A DUP3 PUSH2 0xD5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD9A DUP2 PUSH2 0xD7F JUMP JUMPDEST DUP2 EQ PUSH2 0xDA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDB7 DUP2 PUSH2 0xD91 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDD4 JUMPI PUSH2 0xDD3 PUSH2 0xB15 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDE2 DUP6 DUP3 DUP7 ADD PUSH2 0xB40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDF3 DUP6 DUP3 DUP7 ADD PUSH2 0xDA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE1A DUP2 PUSH2 0xDFD JUMP JUMPDEST DUP2 EQ PUSH2 0xE25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE37 DUP2 PUSH2 0xE11 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE53 JUMPI PUSH2 0xE52 PUSH2 0xB15 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE61 DUP5 DUP3 DUP6 ADD PUSH2 0xE28 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE73 DUP2 PUSH2 0xD7F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE8E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEA7 DUP2 PUSH2 0xE94 JUMP JUMPDEST DUP2 EQ PUSH2 0xEB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEC4 DUP2 PUSH2 0xE9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEE3 JUMPI PUSH2 0xEE2 PUSH2 0xB15 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEF1 DUP7 DUP3 DUP8 ADD PUSH2 0xB40 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF02 DUP7 DUP3 DUP8 ADD PUSH2 0xDA8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF13 DUP7 DUP3 DUP8 ADD PUSH2 0xEB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF33 JUMPI PUSH2 0xF32 PUSH2 0xB15 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF41 DUP5 DUP3 DUP6 ADD PUSH2 0xDA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD4 PUSH2 0xFCF DUP4 PUSH2 0xFAA JUMP JUMPDEST PUSH2 0xFB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFE4 DUP2 PUSH2 0xB1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP1 DUP4 ADD SLOAD SWAP1 POP PUSH2 0xFFF DUP2 PUSH2 0xFC1 JUMP JUMPDEST PUSH2 0x100C PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0xFDB JUMP JUMPDEST POP PUSH1 0x1 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x101D DUP2 PUSH2 0xFC1 JUMP JUMPDEST PUSH2 0x102A PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0xFDB JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x103D DUP4 DUP4 PUSH2 0xFEA JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1061 DUP3 PUSH2 0xF79 JUMP JUMPDEST PUSH2 0x106B DUP2 DUP6 PUSH2 0xF84 JUMP JUMPDEST SWAP4 POP PUSH2 0x1076 DUP4 PUSH2 0xF95 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10A6 JUMPI DUP2 PUSH2 0x108D DUP9 DUP3 PUSH2 0x1031 JUMP JUMPDEST SWAP8 POP PUSH2 0x1098 DUP4 PUSH2 0x1049 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x107A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CD DUP2 DUP5 PUSH2 0x1056 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x476174657761793A207A65726F20616464726573730000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x111C PUSH1 0x15 DUP4 PUSH2 0x10D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1127 DUP3 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x114B DUP2 PUSH2 0x110F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A207472656173757279206164647265737320616C72656164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7920736574000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11AE PUSH1 0x25 DUP4 PUSH2 0x10D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x11B9 DUP3 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11DD DUP2 PUSH2 0x11A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A2061676772656761746F72206164647265737320616C7265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6164792073657400000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1240 PUSH1 0x27 DUP4 PUSH2 0x10D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x124B DUP3 PUSH2 0x11E4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x126F DUP2 PUSH2 0x1233 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x127F DUP2 PUSH2 0xDFD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x129A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1276 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6577206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12FC PUSH1 0x29 DUP4 PUSH2 0x10D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1307 DUP3 PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x132B DUP2 PUSH2 0x12EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476174657761793A20696E76616C696420737461747573000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1368 PUSH1 0x17 DUP4 PUSH2 0x10D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1373 DUP3 PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1397 DUP2 PUSH2 0x135B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13A7 DUP2 PUSH2 0xE94 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x139E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13FE PUSH1 0x20 DUP4 PUSH2 0x10D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1409 DUP3 PUSH2 0x13C8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x142D DUP2 PUSH2 0x13F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xCF 0x24 MOD 0xF8 0xBB STOP PUSH27 0x45008610CF8BAF05DDE6F3DBF02727307F944766ECF3CBE164736F PUSH13 0x63430008120033000000000000 ","sourceMap":"338:3609:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2323:539;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3394:551;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2995:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2085:101:1;;;:::i;:::-;;2031:212:0;;;:::i;:::-;;1462:85:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1773:335:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1144:99:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1436:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2323:539:8;1355:13:1;:11;:13::i;:::-;2461:21:8::1;:31;2483:8;2461:31;;;;;;;;;;;;2454:38;;;;:::i;:::-;2501:6;2496:283;2513:12;:19;2509:1;:23;2496:283;;;2541:21;:31;2563:8;2541:31;;;;;;;;;;;2578:12;2591:1;2578:15;;;;;;;;:::i;:::-;;;;;;;;2541:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2651:94;;;;;;;;2695:12;2708:1;2695:15;;;;;;;;:::i;:::-;;;;;;;;:20;;;2651:94;;;;2731:8;2651:94;;::::0;2599:27:::1;:49;2627:12;2640:1;2627:15;;;;;;;;:::i;:::-;;;;;;;;:20;;;2599:49;;;;;;;;;;;:146;;;;;;;;;;;;;;;;;;;2766:3;;;;;2496:283;;;;2816:8;2787:71;2826:21;:31;2848:8;2826:31;;;;;;;;;;;2787:71;;;;;;:::i;:::-;;;;;;;;2323:539:::0;;:::o;3394:551::-;1355:13:1;:11;:13::i;:::-;3502:1:8::1;3485:19;;:5;:19;;::::0;3477:53:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3534:12;3554:18;:4;:18:::0;3550:326:::1;;3606:5;3587:24;;:15;;;;;;;;;;;:24;;::::0;3579:74:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3676:5;3658:15;;:23;;;;;;;;;;;;;;;;;;3696:4;3686:14;;3550:326;;;3715:20;:4;:20:::0;3711:165:::1;;3772:5;3750:27;;:18;;;;;;;;;;;:27;;::::0;3742:79:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3847:5;3826:18;;:26;;;;;;;;;;;;;;;;;;3867:4;3857:14;;3711:165;3550:326;3883:7;3879:63;;;3931:5;3902:35;;3925:4;3902:35;;;;;;;;;;3879:63;3473:472;3394:551:::0;;:::o;2995:170::-;1355:13:1;:11;:13::i;:::-;3094:19:8::1;3073:18;;:40;;;;;;;;;;;;;;;;;;3122:39;3141:19;3122:39;;;;;;:::i;:::-;;;;;;;;2995:170:::0;:::o;2085:101:1:-;1355:13;:11;:13::i;:::-;2149:30:::1;2176:1;2149:18;:30::i;:::-;2085:101::o:0;2031:212:0:-;2083:14;2100:12;:10;:12::i;:::-;2083:29;;2148:6;2130:24;;:14;:12;:14::i;:::-;:24;;;2122:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;2210:26;2229:6;2210:18;:26::i;:::-;2073:170;2031:212::o;1462:85:1:-;1508:7;1534:6;;;;;;;;;;;1527:13;;1462:85;:::o;1773:335:8:-;1355:13:1;:11;:13::i;:::-;1894:1:8::1;1877:19;;:5;:19;;::::0;1869:53:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1944:1;1934:6;:11;:26;;;;1959:1;1949:6;:11;1934:26;1926:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1996:15;:4;:15:::0;1992:113:::1;;2045:6;2018:17;:24;2036:5;2018:24;;;;;;;;;;;;;;;:33;;;;2086:5;2061:39;;2080:4;2061:39;2093:6;2061:39;;;;;;:::i;:::-;;;;;;;;1992:113;1773:335:::0;;;:::o;1144:99:0:-;1197:7;1223:13;;;;;;;;;;;1216:20;;1144:99;:::o;1436:178::-;1355:13:1;:11;:13::i;:::-;1541:8:0::1;1525:13;;:24;;;;;;;;;;;;;;;;;;1598:8;1564:43;;1589:7;:5;:7::i;:::-;1564:43;;;;;;;;;;;;1436:178:::0;:::o;1620:130:1:-;1694:12;:10;:12::i;:::-;1683:23;;:7;:5;:7::i;:::-;:23;;;1675:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1620:130::o;1798:153:0:-;1887:13;;1880:20;;;;;;;;;;;1910:34;1935:8;1910:24;:34::i;:::-;1798:153;:::o;886:96:5:-;939:7;965:10;958:17;;886:96;:::o;2687:187:1:-;2760:16;2779:6;;;;;;;;;;;2760:25;;2804:8;2795:6;;:17;;;;;;;;;;;;;;;;;;2858:8;2827:40;;2848:8;2827:40;;;;;;;;;;;;2750:124;2687:187;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:11:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:117::-;799:1;796;789:12;813:102;854:6;905:2;901:7;896:2;889:5;885:14;881:28;871:38;;813:102;;;:::o;921:180::-;969:77;966:1;959:88;1066:4;1063:1;1056:15;1090:4;1087:1;1080:15;1107:281;1190:27;1212:4;1190:27;:::i;:::-;1182:6;1178:40;1320:6;1308:10;1305:22;1284:18;1272:10;1269:34;1266:62;1263:88;;;1331:18;;:::i;:::-;1263:88;1371:10;1367:2;1360:22;1150:238;1107:281;;:::o;1394:129::-;1428:6;1455:20;;:::i;:::-;1445:30;;1484:33;1512:4;1504:6;1484:33;:::i;:::-;1394:129;;;:::o;1529:340::-;1635:4;1725:18;1717:6;1714:30;1711:56;;;1747:18;;:::i;:::-;1711:56;1797:4;1789:6;1785:17;1777:25;;1857:4;1851;1847:15;1839:23;;1529:340;;;:::o;1875:117::-;1984:1;1981;1974:12;1998:117;2107:1;2104;2097:12;2284:578;2362:5;2406:4;2394:9;2389:3;2385:19;2381:30;2378:117;;;2414:79;;:::i;:::-;2378:117;2513:21;2529:4;2513:21;:::i;:::-;2504:30;;2593:1;2633:49;2678:3;2669:6;2658:9;2654:22;2633:49;:::i;:::-;2626:4;2619:5;2615:16;2608:75;2544:150;2753:2;2794:49;2839:3;2830:6;2819:9;2815:22;2794:49;:::i;:::-;2787:4;2780:5;2776:16;2769:75;2704:151;2284:578;;;;:::o;2910:797::-;3035:5;3060:110;3076:93;3162:6;3076:93;:::i;:::-;3060:110;:::i;:::-;3051:119;;3190:5;3219:6;3212:5;3205:21;3253:4;3246:5;3242:16;3235:23;;3306:4;3298:6;3294:17;3286:6;3282:30;3335:3;3327:6;3324:15;3321:122;;;3354:79;;:::i;:::-;3321:122;3469:6;3452:249;3486:6;3481:3;3478:15;3452:249;;;3561:3;3590:66;3652:3;3640:10;3590:66;:::i;:::-;3585:3;3578:79;3686:4;3681:3;3677:14;3670:21;;3528:173;3512:4;3507:3;3503:14;3496:21;;3452:249;;;3456:21;3041:666;;2910:797;;;;;:::o;3755:428::-;3855:5;3904:3;3897:4;3889:6;3885:17;3881:27;3871:122;;3912:79;;:::i;:::-;3871:122;4029:6;4016:20;4054:123;4173:3;4165:6;4158:4;4150:6;4146:17;4054:123;:::i;:::-;4045:132;;3861:322;3755:428;;;;:::o;4189:742::-;4311:6;4319;4368:2;4356:9;4347:7;4343:23;4339:32;4336:119;;;4374:79;;:::i;:::-;4336:119;4494:1;4519:53;4564:7;4555:6;4544:9;4540:22;4519:53;:::i;:::-;4509:63;;4465:117;4649:2;4638:9;4634:18;4621:32;4680:18;4672:6;4669:30;4666:117;;;4702:79;;:::i;:::-;4666:117;4807:107;4906:7;4897:6;4886:9;4882:22;4807:107;:::i;:::-;4797:117;;4592:332;4189:742;;;;;:::o;4937:126::-;4974:7;5014:42;5007:5;5003:54;4992:65;;4937:126;;;:::o;5069:96::-;5106:7;5135:24;5153:5;5135:24;:::i;:::-;5124:35;;5069:96;;;:::o;5171:122::-;5244:24;5262:5;5244:24;:::i;:::-;5237:5;5234:35;5224:63;;5283:1;5280;5273:12;5224:63;5171:122;:::o;5299:139::-;5345:5;5383:6;5370:20;5361:29;;5399:33;5426:5;5399:33;:::i;:::-;5299:139;;;;:::o;5444:474::-;5512:6;5520;5569:2;5557:9;5548:7;5544:23;5540:32;5537:119;;;5575:79;;:::i;:::-;5537:119;5695:1;5720:53;5765:7;5756:6;5745:9;5741:22;5720:53;:::i;:::-;5710:63;;5666:117;5822:2;5848:53;5893:7;5884:6;5873:9;5869:22;5848:53;:::i;:::-;5838:63;;5793:118;5444:474;;;;;:::o;5924:101::-;5960:7;6000:18;5993:5;5989:30;5978:41;;5924:101;;;:::o;6031:120::-;6103:23;6120:5;6103:23;:::i;:::-;6096:5;6093:34;6083:62;;6141:1;6138;6131:12;6083:62;6031:120;:::o;6157:137::-;6202:5;6240:6;6227:20;6218:29;;6256:32;6282:5;6256:32;:::i;:::-;6157:137;;;;:::o;6300:327::-;6358:6;6407:2;6395:9;6386:7;6382:23;6378:32;6375:119;;;6413:79;;:::i;:::-;6375:119;6533:1;6558:52;6602:7;6593:6;6582:9;6578:22;6558:52;:::i;:::-;6548:62;;6504:116;6300:327;;;;:::o;6633:118::-;6720:24;6738:5;6720:24;:::i;:::-;6715:3;6708:37;6633:118;;:::o;6757:222::-;6850:4;6888:2;6877:9;6873:18;6865:26;;6901:71;6969:1;6958:9;6954:17;6945:6;6901:71;:::i;:::-;6757:222;;;;:::o;6985:77::-;7022:7;7051:5;7040:16;;6985:77;;;:::o;7068:122::-;7141:24;7159:5;7141:24;:::i;:::-;7134:5;7131:35;7121:63;;7180:1;7177;7170:12;7121:63;7068:122;:::o;7196:139::-;7242:5;7280:6;7267:20;7258:29;;7296:33;7323:5;7296:33;:::i;:::-;7196:139;;;;:::o;7341:619::-;7418:6;7426;7434;7483:2;7471:9;7462:7;7458:23;7454:32;7451:119;;;7489:79;;:::i;:::-;7451:119;7609:1;7634:53;7679:7;7670:6;7659:9;7655:22;7634:53;:::i;:::-;7624:63;;7580:117;7736:2;7762:53;7807:7;7798:6;7787:9;7783:22;7762:53;:::i;:::-;7752:63;;7707:118;7864:2;7890:53;7935:7;7926:6;7915:9;7911:22;7890:53;:::i;:::-;7880:63;;7835:118;7341:619;;;;;:::o;7966:329::-;8025:6;8074:2;8062:9;8053:7;8049:23;8045:32;8042:119;;;8080:79;;:::i;:::-;8042:119;8200:1;8225:53;8270:7;8261:6;8250:9;8246:22;8225:53;:::i;:::-;8215:63;;8171:117;7966:329;;;;:::o;8301:180::-;8349:77;8346:1;8339:88;8446:4;8443:1;8436:15;8470:4;8467:1;8460:15;8487:137;8577:6;8611:5;8605:12;8595:22;;8487:137;;;:::o;8630:213::-;8758:11;8792:6;8787:3;8780:19;8832:4;8827:3;8823:14;8808:29;;8630:213;;;;:::o;8849:182::-;8939:4;8962:3;8954:11;;8985:3;8982:1;8975:14;9019:4;9016:1;9006:18;8998:26;;8849:182;;;:::o;9037:102::-;9079:8;9126:5;9123:1;9119:13;9098:34;;9037:102;;;:::o;9145:90::-;9195:7;9224:5;9213:16;;9145:90;;;:::o;9241:166::-;9310:5;9335:66;9366:34;9389:10;9366:34;:::i;:::-;9335:66;:::i;:::-;9326:75;;9241:166;;;:::o;9413:108::-;9490:24;9508:5;9490:24;:::i;:::-;9485:3;9478:37;9413:108;;:::o;9603:689::-;9745:4;9740:3;9736:14;9776:1;9851:4;9844:5;9840:16;9834:23;9821:36;;9890:55;9935:9;9890:55;:::i;:::-;9958:63;10015:4;10010:3;10006:14;9992:12;9958:63;:::i;:::-;9787:244;10105:4;10098:5;10094:16;10088:23;10075:36;;10144:55;10189:9;10144:55;:::i;:::-;10212:63;10269:4;10264:3;10260:14;10246:12;10212:63;:::i;:::-;10041:244;9714:578;;9603:689;;:::o;10298:289::-;10422:10;10443:101;10540:3;10532:6;10443:101;:::i;:::-;10576:4;10571:3;10567:14;10553:28;;10298:289;;;;:::o;10593:136::-;10686:4;10718;10713:3;10709:14;10701:22;;10593:136;;;:::o;10815:930::-;10986:3;11015:77;11086:5;11015:77;:::i;:::-;11108:115;11216:6;11211:3;11108:115;:::i;:::-;11101:122;;11247:79;11320:5;11247:79;:::i;:::-;11349:7;11380:1;11365:355;11390:6;11387:1;11384:13;11365:355;;;11460:6;11486:118;11600:3;11585:13;11486:118;:::i;:::-;11479:125;;11627:83;11703:6;11627:83;:::i;:::-;11617:93;;11425:295;11412:1;11409;11405:9;11400:14;;11365:355;;;11369:14;11736:3;11729:10;;10991:754;;;10815:930;;;;:::o;11751:477::-;11946:4;11984:2;11973:9;11969:18;11961:26;;12033:9;12027:4;12023:20;12019:1;12008:9;12004:17;11997:47;12061:160;12216:4;12207:6;12061:160;:::i;:::-;12053:168;;11751:477;;;;:::o;12234:169::-;12318:11;12352:6;12347:3;12340:19;12392:4;12387:3;12383:14;12368:29;;12234:169;;;;:::o;12409:171::-;12549:23;12545:1;12537:6;12533:14;12526:47;12409:171;:::o;12586:366::-;12728:3;12749:67;12813:2;12808:3;12749:67;:::i;:::-;12742:74;;12825:93;12914:3;12825:93;:::i;:::-;12943:2;12938:3;12934:12;12927:19;;12586:366;;;:::o;12958:419::-;13124:4;13162:2;13151:9;13147:18;13139:26;;13211:9;13205:4;13201:20;13197:1;13186:9;13182:17;13175:47;13239:131;13365:4;13239:131;:::i;:::-;13231:139;;12958:419;;;:::o;13383:224::-;13523:34;13519:1;13511:6;13507:14;13500:58;13592:7;13587:2;13579:6;13575:15;13568:32;13383:224;:::o;13613:366::-;13755:3;13776:67;13840:2;13835:3;13776:67;:::i;:::-;13769:74;;13852:93;13941:3;13852:93;:::i;:::-;13970:2;13965:3;13961:12;13954:19;;13613:366;;;:::o;13985:419::-;14151:4;14189:2;14178:9;14174:18;14166:26;;14238:9;14232:4;14228:20;14224:1;14213:9;14209:17;14202:47;14266:131;14392:4;14266:131;:::i;:::-;14258:139;;13985:419;;;:::o;14410:226::-;14550:34;14546:1;14538:6;14534:14;14527:58;14619:9;14614:2;14606:6;14602:15;14595:34;14410:226;:::o;14642:366::-;14784:3;14805:67;14869:2;14864:3;14805:67;:::i;:::-;14798:74;;14881:93;14970:3;14881:93;:::i;:::-;14999:2;14994:3;14990:12;14983:19;;14642:366;;;:::o;15014:419::-;15180:4;15218:2;15207:9;15203:18;15195:26;;15267:9;15261:4;15257:20;15253:1;15242:9;15238:17;15231:47;15295:131;15421:4;15295:131;:::i;:::-;15287:139;;15014:419;;;:::o;15439:115::-;15524:23;15541:5;15524:23;:::i;:::-;15519:3;15512:36;15439:115;;:::o;15560:218::-;15651:4;15689:2;15678:9;15674:18;15666:26;;15702:69;15768:1;15757:9;15753:17;15744:6;15702:69;:::i;:::-;15560:218;;;;:::o;15784:228::-;15924:34;15920:1;15912:6;15908:14;15901:58;15993:11;15988:2;15980:6;15976:15;15969:36;15784:228;:::o;16018:366::-;16160:3;16181:67;16245:2;16240:3;16181:67;:::i;:::-;16174:74;;16257:93;16346:3;16257:93;:::i;:::-;16375:2;16370:3;16366:12;16359:19;;16018:366;;;:::o;16390:419::-;16556:4;16594:2;16583:9;16579:18;16571:26;;16643:9;16637:4;16633:20;16629:1;16618:9;16614:17;16607:47;16671:131;16797:4;16671:131;:::i;:::-;16663:139;;16390:419;;;:::o;16815:173::-;16955:25;16951:1;16943:6;16939:14;16932:49;16815:173;:::o;16994:366::-;17136:3;17157:67;17221:2;17216:3;17157:67;:::i;:::-;17150:74;;17233:93;17322:3;17233:93;:::i;:::-;17351:2;17346:3;17342:12;17335:19;;16994:366;;;:::o;17366:419::-;17532:4;17570:2;17559:9;17555:18;17547:26;;17619:9;17613:4;17609:20;17605:1;17594:9;17590:17;17583:47;17647:131;17773:4;17647:131;:::i;:::-;17639:139;;17366:419;;;:::o;17791:118::-;17878:24;17896:5;17878:24;:::i;:::-;17873:3;17866:37;17791:118;;:::o;17915:222::-;18008:4;18046:2;18035:9;18031:18;18023:26;;18059:71;18127:1;18116:9;18112:17;18103:6;18059:71;:::i;:::-;17915:222;;;;:::o;18143:182::-;18283:34;18279:1;18271:6;18267:14;18260:58;18143:182;:::o;18331:366::-;18473:3;18494:67;18558:2;18553:3;18494:67;:::i;:::-;18487:74;;18570:93;18659:3;18570:93;:::i;:::-;18688:2;18683:3;18679:12;18672:19;;18331:366;;;:::o;18703:419::-;18869:4;18907:2;18896:9;18892:18;18884:26;;18956:9;18950:4;18946:20;18942:1;18931:9;18927:17;18920:47;18984:131;19110:4;18984:131;:::i;:::-;18976:139;;18703:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1045200","executionCost":"1087","totalCost":"1046287"},"external":{"acceptOwnership()":"54658","owner()":"2544","pendingOwner()":"2588","renounceOwnership()":"54736","setSupportedInstitutions(bytes32,(bytes32,bytes32)[])":"infinite","settingManagerBool(bytes32,address,uint256)":"infinite","transferOwnership(address)":"infinite","updateProtocolAddress(bytes32,address)":"31094","updateProtocolFee(uint64)":"infinite"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","pendingOwner()":"e30c3978","renounceOwnership()":"715018a6","setSupportedInstitutions(bytes32,(bytes32,bytes32)[])":"32200882","settingManagerBool(bytes32,address,uint256)":"cd992400","transferOwnership(address)":"f2fde38b","updateProtocolAddress(bytes32,address)":"40ebc677","updateProtocolFee(uint64)":"47094e2e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"treasuryAddress\",\"type\":\"address\"}],\"name\":\"ProtocolAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"protocolFee\",\"type\":\"uint64\"}],\"name\":\"ProtocolFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"treasuryAddress\",\"type\":\"address\"}],\"name\":\"SetFeeRecipient\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"}],\"name\":\"SettingManagerBool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"currency\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"code\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct SharedStructs.Institution[]\",\"name\":\"institutions\",\"type\":\"tuple[]\"}],\"name\":\"SupportedInstitutionsUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"currency\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"code\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"internalType\":\"struct SharedStructs.Institution[]\",\"name\":\"institutions\",\"type\":\"tuple[]\"}],\"name\":\"setSupportedInstitutions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"}],\"name\":\"settingManagerBool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"updateProtocolAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_protocolFeePercent\",\"type\":\"uint64\"}],\"name\":\"updateProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setSupportedInstitutions(bytes32,(bytes32,bytes32)[])\":{\"details\":\"Sets the supported institutions for a specific currency.\",\"params\":{\"currency\":\"The currency for which the institutions are being set.\",\"institutions\":\"The array of institutions to be set.\"}},\"settingManagerBool(bytes32,address,uint256)\":{\"details\":\"Sets the boolean value for a specific setting.\",\"params\":{\"status\":\"The boolean value to be set. Requirements: - The value must not be a zero address.\",\"value\":\"The address or value associated with the setting.\",\"what\":\"The setting to be updated.\"}},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"},\"updateProtocolAddress(bytes32,address)\":{\"details\":\"Updates a protocol address.\",\"params\":{\"value\":\"The new address to be set. Requirements: - The value must not be a zero address.\",\"what\":\"The address type to be updated (treasury or aggregator).\"}},\"updateProtocolFee(uint64)\":{\"details\":\"Updates the protocol fee percentage.\",\"params\":{\"_protocolFeePercent\":\"The new protocol fee percentage to be set.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GatewaySettingManager.sol\":\"GatewaySettingManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable2Step.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./OwnableUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership} and {acceptOwnership}.\\n *\\n * This module is used through inheritance. It will make available all functions\\n * from parent (Ownable).\\n */\\nabstract contract Ownable2StepUpgradeable is Initializable, OwnableUpgradeable {\\n    address private _pendingOwner;\\n\\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\\n\\n    function __Ownable2Step_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable2Step_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Returns the address of the pending owner.\\n     */\\n    function pendingOwner() public view virtual returns (address) {\\n        return _pendingOwner;\\n    }\\n\\n    /**\\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\\n        _pendingOwner = newOwner;\\n        emit OwnershipTransferStarted(owner(), newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual override {\\n        delete _pendingOwner;\\n        super._transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev The new owner accepts the ownership transfer.\\n     */\\n    function acceptOwnership() public virtual {\\n        address sender = _msgSender();\\n        require(pendingOwner() == sender, \\\"Ownable2Step: caller is not the new owner\\\");\\n        _transferOwnership(sender);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x9140dabc466abab21b48b72dbda26736b1183a310d0e677d3719d201df026510\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"},\"contracts/GatewaySettingManager.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n\\n/**\\n * @title GatewaySettingManager\\n * @dev This contract manages the settings and configurations for the Gateway protocol.\\n */\\npragma solidity ^0.8.18;\\n\\nimport '@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol';\\n\\nimport {SharedStructs} from './libraries/SharedStructs.sol';\\n\\ncontract GatewaySettingManager is Ownable2StepUpgradeable {\\n\\tuint256 internal MAX_BPS;\\n\\tuint64 internal protocolFeePercent;\\n\\taddress internal treasuryAddress;\\n\\taddress internal _aggregatorAddress;\\n\\n\\t// this should decrease if more slots are needed on this contract to avoid collisions with base contract\\n\\tuint256[50] private __gap;\\n\\n\\tmapping(address => uint256) internal _isTokenSupported;\\n\\n\\tmapping(bytes32 => SharedStructs.Institution[]) internal supportedInstitutions;\\n\\tmapping(bytes32 => SharedStructs.InstitutionByCode) internal supportedInstitutionsByCode;\\n\\n\\tevent SettingManagerBool(bytes32 indexed what, address indexed value, uint256 status);\\n\\tevent SupportedInstitutionsUpdated(\\n\\t\\tbytes32 indexed currency,\\n\\t\\tSharedStructs.Institution[] institutions\\n\\t);\\n\\tevent ProtocolFeeUpdated(uint64 protocolFee);\\n\\tevent ProtocolAddressUpdated(bytes32 indexed what, address indexed treasuryAddress);\\n\\tevent SetFeeRecipient(address indexed treasuryAddress);\\n\\n\\t/* ##################################################################\\n                                OWNER FUNCTIONS\\n    ################################################################## */\\n\\n\\t/**\\n\\t * @dev Sets the boolean value for a specific setting.\\n\\t * @param what The setting to be updated.\\n\\t * @param value The address or value associated with the setting.\\n\\t * @param status The boolean value to be set.\\n\\t * Requirements:\\n\\t * - The value must not be a zero address.\\n\\t */\\n\\tfunction settingManagerBool(bytes32 what, address value, uint256 status) external onlyOwner {\\n\\t\\trequire(value != address(0), 'Gateway: zero address');\\n\\t\\trequire(status == 1 || status == 2, 'Gateway: invalid status');\\n\\t\\tif (what == 'token') {\\n\\t\\t\\t_isTokenSupported[value] = status;\\n\\t\\t\\temit SettingManagerBool(what, value, status);\\n\\t\\t}\\n\\t}\\n\\n\\t/**\\n\\t * @dev Sets the supported institutions for a specific currency.\\n\\t * @param currency The currency for which the institutions are being set.\\n\\t * @param institutions The array of institutions to be set.\\n\\t */\\n\\tfunction setSupportedInstitutions(\\n\\t\\tbytes32 currency,\\n\\t\\tSharedStructs.Institution[] memory institutions\\n\\t) external onlyOwner {\\n\\t\\tdelete supportedInstitutions[currency];\\n\\t\\tfor (uint i; i < institutions.length; ) {\\n\\t\\t\\tsupportedInstitutions[currency].push(institutions[i]);\\n\\t\\t\\tsupportedInstitutionsByCode[institutions[i].code] = SharedStructs.InstitutionByCode({\\n\\t\\t\\t\\tname: institutions[i].name,\\n\\t\\t\\t\\tcurrency: currency\\n\\t\\t\\t});\\n\\t\\t\\tunchecked {\\n\\t\\t\\t\\t++i;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\temit SupportedInstitutionsUpdated(currency, supportedInstitutions[currency]);\\n\\t}\\n\\n\\t/**\\n\\t * @dev Updates the protocol fee percentage.\\n\\t * @param _protocolFeePercent The new protocol fee percentage to be set.\\n\\t */\\n\\tfunction updateProtocolFee(uint64 _protocolFeePercent) external onlyOwner {\\n\\t\\tprotocolFeePercent = _protocolFeePercent;\\n\\t\\temit ProtocolFeeUpdated(_protocolFeePercent);\\n\\t}\\n\\n\\t/**\\n\\t * @dev Updates a protocol address.\\n\\t * @param what The address type to be updated (treasury or aggregator).\\n\\t * @param value The new address to be set.\\n\\t * Requirements:\\n\\t * - The value must not be a zero address.\\n\\t */\\n\\tfunction updateProtocolAddress(bytes32 what, address value) external onlyOwner {\\n\\t\\trequire(value != address(0), 'Gateway: zero address');\\n\\t\\tbool updated;\\n\\t\\tif (what == 'treasury') {\\n\\t\\t\\trequire(treasuryAddress != value, 'Gateway: treasury address already set');\\n\\t\\t\\ttreasuryAddress = value;\\n\\t\\t\\tupdated = true;\\n\\t\\t} else if (what == 'aggregator') {\\n\\t\\t\\trequire(_aggregatorAddress != value, 'Gateway: aggregator address already set');\\n\\t\\t\\t_aggregatorAddress = value;\\n\\t\\t\\tupdated = true;\\n\\t\\t}\\n\\t\\tif (updated) {\\n\\t\\t\\temit ProtocolAddressUpdated(what, value);\\n\\t\\t}\\n\\t}\\n}\\n\",\"keccak256\":\"0x7bf3fc733cbf8f2815924c2f10199aa0836d3b5d5b5b92b10cd4855d65773477\",\"license\":\"UNLICENSED\"},\"contracts/libraries/SharedStructs.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.18;\\n\\nlibrary SharedStructs {\\n    /**\\n     * @dev Struct representing an institution.\\n     * @param code The code of the institution.\\n     * @param name The name of the institution.\\n     */\\n    struct Institution {\\n        bytes32 code;\\n        bytes32 name;\\n    }\\n\\n    /**\\n     * @dev Struct representing an institution by code.\\n     * @param name The name of the institution.\\n     * @param currency The currency of the institution.\\n     */\\n    struct InstitutionByCode {\\n        bytes32 name;\\n        bytes32 currency;\\n    }\\n}\",\"keccak256\":\"0x6c50c51961ec2a2740e0f3cbfc2bdb7b80a5c728dec92ebb98d84893ac8adb5a\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[{"astId":246,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":249,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":916,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":118,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":238,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":11,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"_pendingOwner","offset":0,"slot":"101","type":"t_address"},{"astId":105,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"},{"astId":1618,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"MAX_BPS","offset":0,"slot":"151","type":"t_uint256"},{"astId":1620,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"protocolFeePercent","offset":0,"slot":"152","type":"t_uint64"},{"astId":1622,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"treasuryAddress","offset":8,"slot":"152","type":"t_address"},{"astId":1624,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"_aggregatorAddress","offset":0,"slot":"153","type":"t_address"},{"astId":1628,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"__gap","offset":0,"slot":"154","type":"t_array(t_uint256)50_storage"},{"astId":1632,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"_isTokenSupported","offset":0,"slot":"204","type":"t_mapping(t_address,t_uint256)"},{"astId":1638,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"supportedInstitutions","offset":0,"slot":"205","type":"t_mapping(t_bytes32,t_array(t_struct(Institution)2058_storage)dyn_storage)"},{"astId":1643,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"supportedInstitutionsByCode","offset":0,"slot":"206","type":"t_mapping(t_bytes32,t_struct(InstitutionByCode)2063_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(Institution)2058_storage)dyn_storage":{"base":"t_struct(Institution)2058_storage","encoding":"dynamic_array","label":"struct SharedStructs.Institution[]","numberOfBytes":"32"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_array(t_struct(Institution)2058_storage)dyn_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct SharedStructs.Institution[])","numberOfBytes":"32","value":"t_array(t_struct(Institution)2058_storage)dyn_storage"},"t_mapping(t_bytes32,t_struct(InstitutionByCode)2063_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct SharedStructs.InstitutionByCode)","numberOfBytes":"32","value":"t_struct(InstitutionByCode)2063_storage"},"t_struct(Institution)2058_storage":{"encoding":"inplace","label":"struct SharedStructs.Institution","members":[{"astId":2055,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"code","offset":0,"slot":"0","type":"t_bytes32"},{"astId":2057,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"name","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_struct(InstitutionByCode)2063_storage":{"encoding":"inplace","label":"struct SharedStructs.InstitutionByCode","members":[{"astId":2060,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"name","offset":0,"slot":"0","type":"t_bytes32"},{"astId":2062,"contract":"contracts/GatewaySettingManager.sol:GatewaySettingManager","label":"currency","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IGateway.sol":{"IGateway":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"protocolFee","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"rate","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"institutionCode","type":"bytes32"},{"indexed":false,"internalType":"string","name":"messageHash","type":"string"}],"name":"OrderCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"fee","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"}],"name":"OrderRefunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"splitOrderId","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"orderId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"liquidityProvider","type":"address"},{"indexed":false,"internalType":"uint96","name":"settlePercent","type":"uint96"}],"name":"OrderSettled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"SenderFeeTransferred","type":"event"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes32","name":"_institutionCode","type":"bytes32"},{"internalType":"uint96","name":"_rate","type":"uint96"},{"internalType":"address","name":"_senderFeeRecipient","type":"address"},{"internalType":"uint256","name":"_senderFee","type":"uint256"},{"internalType":"address","name":"_refundAddress","type":"address"},{"internalType":"string","name":"messageHash","type":"string"}],"name":"createOrder","outputs":[{"internalType":"bytes32","name":"_orderId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getFeeDetails","outputs":[{"internalType":"uint64","name":"protocolReward","type":"uint64"},{"internalType":"uint256","name":"max_bps","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_orderId","type":"bytes32"}],"name":"getOrderInfo","outputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"senderFeeRecipient","type":"address"},{"internalType":"uint256","name":"senderFee","type":"uint256"},{"internalType":"uint256","name":"protocolFee","type":"uint256"},{"internalType":"bool","name":"isFulfilled","type":"bool"},{"internalType":"bool","name":"isRefunded","type":"bool"},{"internalType":"address","name":"refundAddress","type":"address"},{"internalType":"uint96","name":"currentBPS","type":"uint96"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IGateway.Order","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_code","type":"bytes32"}],"name":"getSupportedInstitutionByCode","outputs":[{"components":[{"internalType":"bytes32","name":"name","type":"bytes32"},{"internalType":"bytes32","name":"currency","type":"bytes32"}],"internalType":"struct SharedStructs.InstitutionByCode","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_currency","type":"bytes32"}],"name":"getSupportedInstitutions","outputs":[{"components":[{"internalType":"bytes32","name":"code","type":"bytes32"},{"internalType":"bytes32","name":"name","type":"bytes32"}],"internalType":"struct SharedStructs.Institution[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"isTokenSupported","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_fee","type":"uint256"},{"internalType":"bytes32","name":"_orderId","type":"bytes32"}],"name":"refund","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_splitOrderId","type":"bytes32"},{"internalType":"bytes32","name":"_orderId","type":"bytes32"},{"internalType":"address","name":"_liquidityProvider","type":"address"},{"internalType":"uint64","name":"_settlePercent","type":"uint64"}],"name":"settle","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"OrderCreated(address,address,uint256,uint256,bytes32,uint256,bytes32,string)":{"details":"Emitted when a deposit is made.","params":{"amount":"The amount of the deposit.","institutionCode":"The code of the institution.","messageHash":"The hash of the message.","orderId":"The ID of the order.","rate":"The rate at which the deposit is made.","sender":"The address of the sender.","token":"The address of the deposited token."}},"OrderRefunded(uint256,bytes32)":{"details":"Emitted when an aggregator refunds a transaction.","params":{"fee":"The fee deducted from the refund amount.","orderId":"The ID of the order."}},"OrderSettled(bytes32,bytes32,address,uint96)":{"details":"Emitted when an aggregator settles a transaction.","params":{"liquidityProvider":"The address of the liquidity provider.","orderId":"The ID of the order.","settlePercent":"The percentage at which the transaction is settled.","splitOrderId":"The ID of the split order."}},"SenderFeeTransferred(address,uint256)":{"details":"Emitted when the sender's fee is transferred.","params":{"amount":"The amount of the fee transferred.","sender":"The address of the sender."}}},"kind":"dev","methods":{"createOrder(address,uint256,bytes32,uint96,address,uint256,address,string)":{"details":"Requirements: - `msg.sender` must approve Gateway contract on `_token` of at least `amount` before function call. - `_token` must be an acceptable token. See {isTokenSupported}. - `amount` must be greater than minimum. - `_refundAddress` refund address must not be zero address.","params":{"_amount":"The amount in the decimal of `_token` to be locked.","_institutionCode":"The institution code of the sender.","_rate":"The rate at which the sender intends to sell `_amount` of `_token`.","_refundAddress":"The address that will receive `_amount` in `_token` when there is a need to refund.","_senderFee":"The amount in the decimal of `_token` that will be paid to `_senderFeeRecipient`.","_senderFeeRecipient":"The address that will receive `_senderFee` in `_token`.","_token":"The address of the token.","messageHash":"The hash of the message."},"returns":{"_orderId":"The ID of the order."}},"getFeeDetails()":{"returns":{"max_bps":"The maximum basis points.","protocolReward":"The protocol reward amount."}},"getOrderInfo(bytes32)":{"params":{"_orderId":"The ID of the order."},"returns":{"_0":"Order The order details."}},"getSupportedInstitutionByCode(bytes32)":{"params":{"_code":"The institution code."},"returns":{"_0":"InstitutionByCode The institution details."}},"getSupportedInstitutions(bytes32)":{"params":{"_currency":"The currency code."},"returns":{"_0":"Institutions An array of institutions."}},"isTokenSupported(address)":{"params":{"_token":"The address of the token to check."},"returns":{"_0":"bool the token is supported."}},"refund(uint256,bytes32)":{"details":"Requirements: - Only aggregators can call this function.","params":{"_fee":"The amount to be deducted from the amount to be refunded.","_orderId":"The ID of the transaction."},"returns":{"_0":"bool the refund is successful."}},"settle(bytes32,bytes32,address,uint64)":{"params":{"_liquidityProvider":"The address of the liquidity provider.","_orderId":"The ID of the transaction.","_settlePercent":"The rate at which the transaction is settled.","_splitOrderId":"The ID of the split order."},"returns":{"_0":"bool the settlement is successful."}}},"title":"IGateway","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"createOrder(address,uint256,bytes32,uint96,address,uint256,address,string)":"d12ff20a","getFeeDetails()":"b810c636","getOrderInfo(bytes32)":"768c6ec0","getSupportedInstitutionByCode(bytes32)":"c2280103","getSupportedInstitutions(bytes32)":"02621338","isTokenSupported(address)":"75151b63","refund(uint256,bytes32)":"71eedb88","settle(bytes32,bytes32,address,uint64)":"f22ee704"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"institutionCode\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"messageHash\",\"type\":\"string\"}],\"name\":\"OrderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"OrderRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"splitOrderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"settlePercent\",\"type\":\"uint96\"}],\"name\":\"OrderSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SenderFeeTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_institutionCode\",\"type\":\"bytes32\"},{\"internalType\":\"uint96\",\"name\":\"_rate\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"_senderFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_senderFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_refundAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"messageHash\",\"type\":\"string\"}],\"name\":\"createOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeDetails\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"protocolReward\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"max_bps\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"}],\"name\":\"getOrderInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"senderFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isFulfilled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRefunded\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"currentBPS\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IGateway.Order\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_code\",\"type\":\"bytes32\"}],\"name\":\"getSupportedInstitutionByCode\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"currency\",\"type\":\"bytes32\"}],\"internalType\":\"struct SharedStructs.InstitutionByCode\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_currency\",\"type\":\"bytes32\"}],\"name\":\"getSupportedInstitutions\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"code\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"internalType\":\"struct SharedStructs.Institution[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isTokenSupported\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"}],\"name\":\"refund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_splitOrderId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_orderId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_liquidityProvider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_settlePercent\",\"type\":\"uint64\"}],\"name\":\"settle\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"OrderCreated(address,address,uint256,uint256,bytes32,uint256,bytes32,string)\":{\"details\":\"Emitted when a deposit is made.\",\"params\":{\"amount\":\"The amount of the deposit.\",\"institutionCode\":\"The code of the institution.\",\"messageHash\":\"The hash of the message.\",\"orderId\":\"The ID of the order.\",\"rate\":\"The rate at which the deposit is made.\",\"sender\":\"The address of the sender.\",\"token\":\"The address of the deposited token.\"}},\"OrderRefunded(uint256,bytes32)\":{\"details\":\"Emitted when an aggregator refunds a transaction.\",\"params\":{\"fee\":\"The fee deducted from the refund amount.\",\"orderId\":\"The ID of the order.\"}},\"OrderSettled(bytes32,bytes32,address,uint96)\":{\"details\":\"Emitted when an aggregator settles a transaction.\",\"params\":{\"liquidityProvider\":\"The address of the liquidity provider.\",\"orderId\":\"The ID of the order.\",\"settlePercent\":\"The percentage at which the transaction is settled.\",\"splitOrderId\":\"The ID of the split order.\"}},\"SenderFeeTransferred(address,uint256)\":{\"details\":\"Emitted when the sender's fee is transferred.\",\"params\":{\"amount\":\"The amount of the fee transferred.\",\"sender\":\"The address of the sender.\"}}},\"kind\":\"dev\",\"methods\":{\"createOrder(address,uint256,bytes32,uint96,address,uint256,address,string)\":{\"details\":\"Requirements: - `msg.sender` must approve Gateway contract on `_token` of at least `amount` before function call. - `_token` must be an acceptable token. See {isTokenSupported}. - `amount` must be greater than minimum. - `_refundAddress` refund address must not be zero address.\",\"params\":{\"_amount\":\"The amount in the decimal of `_token` to be locked.\",\"_institutionCode\":\"The institution code of the sender.\",\"_rate\":\"The rate at which the sender intends to sell `_amount` of `_token`.\",\"_refundAddress\":\"The address that will receive `_amount` in `_token` when there is a need to refund.\",\"_senderFee\":\"The amount in the decimal of `_token` that will be paid to `_senderFeeRecipient`.\",\"_senderFeeRecipient\":\"The address that will receive `_senderFee` in `_token`.\",\"_token\":\"The address of the token.\",\"messageHash\":\"The hash of the message.\"},\"returns\":{\"_orderId\":\"The ID of the order.\"}},\"getFeeDetails()\":{\"returns\":{\"max_bps\":\"The maximum basis points.\",\"protocolReward\":\"The protocol reward amount.\"}},\"getOrderInfo(bytes32)\":{\"params\":{\"_orderId\":\"The ID of the order.\"},\"returns\":{\"_0\":\"Order The order details.\"}},\"getSupportedInstitutionByCode(bytes32)\":{\"params\":{\"_code\":\"The institution code.\"},\"returns\":{\"_0\":\"InstitutionByCode The institution details.\"}},\"getSupportedInstitutions(bytes32)\":{\"params\":{\"_currency\":\"The currency code.\"},\"returns\":{\"_0\":\"Institutions An array of institutions.\"}},\"isTokenSupported(address)\":{\"params\":{\"_token\":\"The address of the token to check.\"},\"returns\":{\"_0\":\"bool the token is supported.\"}},\"refund(uint256,bytes32)\":{\"details\":\"Requirements: - Only aggregators can call this function.\",\"params\":{\"_fee\":\"The amount to be deducted from the amount to be refunded.\",\"_orderId\":\"The ID of the transaction.\"},\"returns\":{\"_0\":\"bool the refund is successful.\"}},\"settle(bytes32,bytes32,address,uint64)\":{\"params\":{\"_liquidityProvider\":\"The address of the liquidity provider.\",\"_orderId\":\"The ID of the transaction.\",\"_settlePercent\":\"The rate at which the transaction is settled.\",\"_splitOrderId\":\"The ID of the split order.\"},\"returns\":{\"_0\":\"bool the settlement is successful.\"}}},\"title\":\"IGateway\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createOrder(address,uint256,bytes32,uint96,address,uint256,address,string)\":{\"notice\":\"Locks the sender's amount of token into Gateway.\"},\"getFeeDetails()\":{\"notice\":\"Gets the fee details of Gateway.\"},\"getOrderInfo(bytes32)\":{\"notice\":\"Gets the details of an order.\"},\"getSupportedInstitutionByCode(bytes32)\":{\"notice\":\"Gets the details of a supported institution by code.\"},\"getSupportedInstitutions(bytes32)\":{\"notice\":\"Gets the details of supported institutions by currency.\"},\"isTokenSupported(address)\":{\"notice\":\"Checks if a token is supported by Gateway.\"},\"refund(uint256,bytes32)\":{\"notice\":\"Refunds to the specified refundable address.\"},\"settle(bytes32,bytes32,address,uint64)\":{\"notice\":\"Settles a transaction and distributes rewards accordingly.\"}},\"notice\":\"Interface for the Gateway contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IGateway.sol\":\"IGateway\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/interfaces/IGateway.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.18;\\n\\nimport {IERC20} from '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\n\\nimport {SharedStructs} from '../libraries/SharedStructs.sol';\\n\\n/**\\n * @title IGateway\\n * @notice Interface for the Gateway contract.\\n */\\ninterface IGateway {\\n\\t/* ##################################################################\\n                                EVENTS\\n    ################################################################## */\\n\\t/**\\n\\t * @dev Emitted when a deposit is made.\\n\\t * @param sender The address of the sender.\\n\\t * @param token The address of the deposited token.\\n\\t * @param amount The amount of the deposit.\\n\\t * @param orderId The ID of the order.\\n\\t * @param rate The rate at which the deposit is made.\\n\\t * @param institutionCode The code of the institution.\\n\\t * @param messageHash The hash of the message.\\n\\t */\\n\\tevent OrderCreated(\\n\\t\\taddress indexed sender,\\n\\t\\taddress indexed token,\\n\\t\\tuint256 indexed amount,\\n\\t\\tuint256 protocolFee,\\n\\t\\tbytes32 orderId,\\n\\t\\tuint256 rate,\\n\\t\\tbytes32 institutionCode,\\n\\t\\tstring messageHash\\n\\t);\\n\\n\\t/**\\n\\t * @dev Emitted when an aggregator settles a transaction.\\n\\t * @param splitOrderId The ID of the split order.\\n\\t * @param orderId The ID of the order.\\n\\t * @param liquidityProvider The address of the liquidity provider.\\n\\t * @param settlePercent The percentage at which the transaction is settled.\\n\\t */\\n\\tevent OrderSettled(\\n\\t\\tbytes32 splitOrderId,\\n\\t\\tbytes32 indexed orderId,\\n\\t\\taddress indexed liquidityProvider,\\n\\t\\tuint96 settlePercent\\n\\t);\\n\\n\\t/**\\n\\t * @dev Emitted when an aggregator refunds a transaction.\\n\\t * @param fee The fee deducted from the refund amount.\\n\\t * @param orderId The ID of the order.\\n\\t */\\n\\tevent OrderRefunded(uint256 fee, bytes32 indexed orderId);\\n\\n\\t/**\\n\\t * @dev Emitted when the sender's fee is transferred.\\n\\t * @param sender The address of the sender.\\n\\t * @param amount The amount of the fee transferred.\\n\\t */\\n\\tevent SenderFeeTransferred(address indexed sender, uint256 indexed amount);\\n\\n\\t/* ##################################################################\\n                                STRUCTS\\n    ################################################################## */\\n\\t/**\\n\\t * @dev Struct representing transaction metadata.\\n\\t * @param identifier The identifier of the transaction.\\n\\t * @param institution The institution of the transaction.\\n\\t * @param name The name of the transaction.\\n\\t * @param currency The currency of the transaction.\\n\\t * @param liquidityProviderID The ID of the liquidity provider.\\n\\t */\\n\\tstruct TransactionMetadata {\\n\\t\\tbytes8 identifier;\\n\\t\\tbytes8 institution;\\n\\t\\tbytes8 name;\\n\\t\\tbytes8 currency;\\n\\t\\tuint256 liquidityProviderID;\\n\\t}\\n\\n\\t/**\\n\\t * @dev Struct representing an order.\\n\\t * @param sender The address of the sender.\\n\\t * @param token The address of the token.\\n\\t * @param senderFeeRecipient The address of the sender fee recipient.\\n\\t * @param senderFee The fee to be paid to the sender fee recipient.\\n\\t * @param protocolFee The protocol fee to be paid.\\n\\t * @param isFulfilled Whether the order is fulfilled.\\n\\t * @param isRefunded Whether the order is refunded.\\n\\t * @param refundAddress The address to which the refund is made.\\n\\t * @param currentBPS The current basis points.\\n\\t * @param amount The amount of the order.\\n\\t */\\n\\tstruct Order {\\n\\t\\taddress sender;\\n\\t\\taddress token;\\n\\t\\taddress senderFeeRecipient;\\n\\t\\tuint256 senderFee;\\n\\t\\tuint256 protocolFee;\\n\\t\\tbool isFulfilled;\\n\\t\\tbool isRefunded;\\n\\t\\taddress refundAddress;\\n\\t\\tuint96 currentBPS;\\n\\t\\tuint256 amount;\\n\\t}\\n\\n\\t/* ##################################################################\\n                                EXTERNAL CALLS\\n    ################################################################## */\\n\\t/**\\n\\t * @notice Locks the sender's amount of token into Gateway.\\n\\t * @dev Requirements:\\n\\t * - `msg.sender` must approve Gateway contract on `_token` of at least `amount` before function call.\\n\\t * - `_token` must be an acceptable token. See {isTokenSupported}.\\n\\t * - `amount` must be greater than minimum.\\n\\t * - `_refundAddress` refund address must not be zero address.\\n\\t * @param _token The address of the token.\\n\\t * @param _amount The amount in the decimal of `_token` to be locked.\\n\\t * @param _institutionCode The institution code of the sender.\\n\\t * @param _rate The rate at which the sender intends to sell `_amount` of `_token`.\\n\\t * @param _senderFeeRecipient The address that will receive `_senderFee` in `_token`.\\n\\t * @param _senderFee The amount in the decimal of `_token` that will be paid to `_senderFeeRecipient`.\\n\\t * @param _refundAddress The address that will receive `_amount` in `_token` when there is a need to refund.\\n\\t * @param messageHash The hash of the message.\\n\\t * @return _orderId The ID of the order.\\n\\t */\\n\\tfunction createOrder(\\n\\t\\taddress _token,\\n\\t\\tuint256 _amount,\\n\\t\\tbytes32 _institutionCode,\\n\\t\\tuint96 _rate,\\n\\t\\taddress _senderFeeRecipient,\\n\\t\\tuint256 _senderFee,\\n\\t\\taddress _refundAddress,\\n\\t\\tstring calldata messageHash\\n\\t) external returns (bytes32 _orderId);\\n\\n\\t/**\\n\\t * @notice Settles a transaction and distributes rewards accordingly.\\n\\t * @param _splitOrderId The ID of the split order.\\n\\t * @param _orderId The ID of the transaction.\\n\\t * @param _liquidityProvider The address of the liquidity provider.\\n\\t * @param _settlePercent The rate at which the transaction is settled.\\n\\t * @return bool the settlement is successful.\\n\\t */\\n\\tfunction settle(\\n\\t\\tbytes32 _splitOrderId,\\n\\t\\tbytes32 _orderId,\\n\\t\\taddress _liquidityProvider,\\n\\t\\tuint64 _settlePercent\\n\\t) external returns (bool);\\n\\n\\t/**\\n\\t * @notice Refunds to the specified refundable address.\\n\\t * @dev Requirements:\\n\\t * - Only aggregators can call this function.\\n\\t * @param _fee The amount to be deducted from the amount to be refunded.\\n\\t * @param _orderId The ID of the transaction.\\n\\t * @return bool the refund is successful.\\n\\t */\\n\\tfunction refund(uint256 _fee, bytes32 _orderId) external returns (bool);\\n\\n\\t/**\\n\\t * @notice Checks if a token is supported by Gateway.\\n\\t * @param _token The address of the token to check.\\n\\t * @return bool the token is supported.\\n\\t */\\n\\tfunction isTokenSupported(address _token) external view returns (bool);\\n\\n\\t/**\\n\\t * @notice Gets the details of an order.\\n\\t * @param _orderId The ID of the order.\\n\\t * @return Order The order details.\\n\\t */\\n\\tfunction getOrderInfo(bytes32 _orderId) external view returns (Order memory);\\n\\n\\t/**\\n\\t * @notice Gets the fee details of Gateway.\\n\\t * @return protocolReward The protocol reward amount.\\n\\t * @return max_bps The maximum basis points.\\n\\t */\\n\\tfunction getFeeDetails() external view returns (uint64 protocolReward, uint256 max_bps);\\n\\n\\t/**\\n\\t * @notice Gets the details of a supported institution by code.\\n\\t * @param _code The institution code.\\n\\t * @return InstitutionByCode The institution details.\\n\\t */\\n\\tfunction getSupportedInstitutionByCode(\\n\\t\\tbytes32 _code\\n\\t) external view returns (SharedStructs.InstitutionByCode memory);\\n\\n\\t/**\\n\\t * @notice Gets the details of supported institutions by currency.\\n\\t * @param _currency The currency code.\\n\\t * @return Institutions An array of institutions.\\n\\t */\\n\\tfunction getSupportedInstitutions(\\n\\t\\tbytes32 _currency\\n\\t) external view returns (SharedStructs.Institution[] memory);\\n}\\n\",\"keccak256\":\"0x77ba391c63b01a9fd7bf719379efe762a15566708694c52f62dcb4731d3f4821\",\"license\":\"UNLICENSED\"},\"contracts/libraries/SharedStructs.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.18;\\n\\nlibrary SharedStructs {\\n    /**\\n     * @dev Struct representing an institution.\\n     * @param code The code of the institution.\\n     * @param name The name of the institution.\\n     */\\n    struct Institution {\\n        bytes32 code;\\n        bytes32 name;\\n    }\\n\\n    /**\\n     * @dev Struct representing an institution by code.\\n     * @param name The name of the institution.\\n     * @param currency The currency of the institution.\\n     */\\n    struct InstitutionByCode {\\n        bytes32 name;\\n        bytes32 currency;\\n    }\\n}\",\"keccak256\":\"0x6c50c51961ec2a2740e0f3cbfc2bdb7b80a5c728dec92ebb98d84893ac8adb5a\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"createOrder(address,uint256,bytes32,uint96,address,uint256,address,string)":{"notice":"Locks the sender's amount of token into Gateway."},"getFeeDetails()":{"notice":"Gets the fee details of Gateway."},"getOrderInfo(bytes32)":{"notice":"Gets the details of an order."},"getSupportedInstitutionByCode(bytes32)":{"notice":"Gets the details of a supported institution by code."},"getSupportedInstitutions(bytes32)":{"notice":"Gets the details of supported institutions by currency."},"isTokenSupported(address)":{"notice":"Checks if a token is supported by Gateway."},"refund(uint256,bytes32)":{"notice":"Refunds to the specified refundable address."},"settle(bytes32,bytes32,address,uint64)":{"notice":"Settles a transaction and distributes rewards accordingly."}},"notice":"Interface for the Gateway contract.","version":1}}},"contracts/libraries/SharedStructs.sol":{"SharedStructs":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122018c796264cd6f686e5056fd2234e702189b8345766e6fd8b962c4406475a9a8664736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0xC7 SWAP7 0x26 0x4C 0xD6 0xF6 DUP7 0xE5 SDIV PUSH16 0xD2234E702189B8345766E6FD8B962C44 MOD SELFBALANCE GAS SWAP11 DUP7 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"65:522:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122018c796264cd6f686e5056fd2234e702189b8345766e6fd8b962c4406475a9a8664736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0xC7 SWAP7 0x26 0x4C 0xD6 0xF6 DUP7 0xE5 SDIV PUSH16 0xD2234E702189B8345766E6FD8B962C44 MOD SELFBALANCE GAS SWAP11 DUP7 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"65:522:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SharedStructs.sol\":\"SharedStructs\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SharedStructs.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.18;\\n\\nlibrary SharedStructs {\\n    /**\\n     * @dev Struct representing an institution.\\n     * @param code The code of the institution.\\n     * @param name The name of the institution.\\n     */\\n    struct Institution {\\n        bytes32 code;\\n        bytes32 name;\\n    }\\n\\n    /**\\n     * @dev Struct representing an institution by code.\\n     * @param name The name of the institution.\\n     * @param currency The currency of the institution.\\n     */\\n    struct InstitutionByCode {\\n        bytes32 name;\\n        bytes32 currency;\\n    }\\n}\",\"keccak256\":\"0x6c50c51961ec2a2740e0f3cbfc2bdb7b80a5c728dec92ebb98d84893ac8adb5a\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}